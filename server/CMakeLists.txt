FILE(GLOB server_INCLUDES ${CMAKE_CURRENT_SOURCE_DIR}/src/*.h)
FILE(GLOB server_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/src/*.cpp)
QT5_WRAP_CPP(server_MOC_out ${server_INCLUDES})

IF(VEYON_BUILD_WIN32)

	ADD_DEFINITIONS(-DUNICODE -D_UNICODE)

	SET(WINRC "${CMAKE_CURRENT_BINARY_DIR}/veyon-server-rc.obj")
	ADD_CUSTOM_COMMAND(OUTPUT ${WINRC}
						COMMAND ${WINDRES}
							-I${CMAKE_CURRENT_SOURCE_DIR}
							-o${WINRC}
							-i${CMAKE_CURRENT_BINARY_DIR}/veyon-server.rc
						DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/veyon-server.rc)

ENDIF(VEYON_BUILD_WIN32)

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR} ${CMAKE_CURRENT_SOURCE_DIR}/src)

ADD_EXECUTABLE(veyon-server ${server_SOURCES} ${server_INCLUDES} ${server_MOC_out} ${WINRC})
TARGET_LINK_LIBRARIES(veyon-server veyon-core)

INSTALL(TARGETS veyon-server RUNTIME DESTINATION bin)

IF(VEYON_BUILD_WIN32)
	SET_TARGET_PROPERTIES(veyon-server PROPERTIES LINK_FLAGS -mwindows)
ENDIF(VEYON_BUILD_WIN32)

TARGET_LINK_LIBRARIES(veyon-server
        Qt5::Gui
        Qt5::Network
        Qt5::Widgets
	)

COTIRE_VEYON(veyon-server)
